%!PS-Adobe-3.0 EPSF-3.0
%%Creator: PS_dot.c,v 1.38 2007/02/02 15:18:13 ivo Exp $, ViennaRNA-2.1.9
%%CreationDate: Thu Jul 16 15:13:53 2015
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 66 210 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: -d2 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  72 216 translate
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  72 6 mul size div dup scale
  size xmin sub xmax sub 2 div size ymin sub ymax sub 2 div
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
UGGUAGCUAUGAUGUUGGCUCGGCUCACUCAGACGGCAUUGGCGUGAUGCAAAGCAUGCAUGCGUGCUCGCUAGCUCACUUGUGUUUCUGAUUGAGCCGUGCCAAUAUCUUAGUGCUCU\
) def
/coor [
[85.60163116 560.99877930]
[93.89788818 546.85296631]
[93.50523376 531.85809326]
[93.11257935 516.86328125]
[92.71992493 501.86840820]
[89.35802460 495.18200684]
[92.51844025 486.47702026]
[92.51844025 471.47702026]
[92.51844025 456.47702026]
[84.78113556 443.74975586]
[92.51844025 429.94958496]
[92.51844025 414.94958496]
[92.51844025 399.94958496]
[92.51844025 384.94958496]
[92.51844025 369.94958496]
[92.51844025 354.94958496]
[92.51844025 339.94958496]
[92.51844025 324.94958496]
[92.51844025 309.94958496]
[84.78113556 297.22232056]
[92.51844025 283.42214966]
[92.51844025 268.42214966]
[92.51844025 253.42213440]
[92.51844025 238.42213440]
[92.51844025 223.42213440]
[92.51844025 208.42213440]
[92.51844025 193.42213440]
[84.78113556 180.69487000]
[92.51844025 166.89469910]
[92.51844025 151.89469910]
[92.51844025 136.89469910]
[92.51844025 121.89469910]
[92.51844025 106.89469910]
[89.33702087 99.37143707]
[92.71992493 91.50332642]
[93.11257935 76.50846863]
[93.50523376 61.51360703]
[93.89788818 46.51874924]
[94.29054260 31.52388763]
[84.47384644 24.56110764]
[79.34259033 13.80805492]
[80.08988953 2.03780484]
[86.40928650 -7.77702141]
[96.60201263 -13.21500206]
[97.77890015 -28.16876221]
[98.95578766 -43.12252426]
[100.13266754 -58.07628250]
[97.66497803 -67.00238037]
[101.54113007 -73.40439606]
[103.10905457 -88.32222748]
[95.58018494 -98.89400482]
[97.27066040 -111.35606384]
[106.71963501 -119.03176117]
[108.67752838 -133.90344238]
[110.63542175 -148.77511597]
[101.28723907 -161.23501587]
[103.48467255 -176.28910828]
[115.42089844 -185.12438965]
[117.37879181 -199.99606323]
[119.33668518 -214.86773682]
[112.56452179 -229.80326843]
[122.33166504 -242.97653198]
[138.59051514 -240.83601379]
[144.61535645 -225.58369446]
[134.20835876 -212.90985107]
[132.25045776 -198.03817749]
[130.29257202 -183.16650391]
[139.53533936 -171.54295349]
[137.76161194 -156.43307495]
[125.50709534 -146.81721497]
[123.54920197 -131.94554138]
[121.59130859 -117.07386780]
[129.20031738 -101.31890869]
[118.02688599 -86.75429535]
[116.45895386 -71.83647156]
[115.08643341 -56.89939499]
[113.90954590 -41.94563675]
[112.73265839 -26.99187660]
[111.55577087 -12.03811646]
[124.25803375 1.01816583]
[123.49507904 19.53420258]
[109.28540039 31.91654205]
[108.89274597 46.91139984]
[108.50009155 61.90626144]
[108.10743713 76.90112305]
[107.71478271 91.89598083]
[107.51844025 106.89469910]
[107.51844025 121.89469910]
[107.51844025 136.89469910]
[107.51844025 151.89469910]
[107.51844025 166.89469910]
[115.25573730 180.69487000]
[107.51844025 193.42213440]
[107.51844025 208.42213440]
[107.51844025 223.42213440]
[107.51844025 238.42213440]
[107.51844025 253.42213440]
[107.51844025 268.42214966]
[107.51844025 283.42214966]
[115.25573730 297.22232056]
[107.51844025 309.94958496]
[107.51844025 324.94958496]
[107.51844025 339.94958496]
[107.51844025 354.94958496]
[107.51844025 369.94958496]
[107.51844025 384.94958496]
[107.51844025 399.94958496]
[107.51844025 414.94958496]
[107.51844025 429.94958496]
[115.25573730 443.74975586]
[107.51844025 456.47702026]
[107.51844025 471.47702026]
[107.51844025 486.47702026]
[107.71478271 501.47573853]
[108.10743713 516.47058105]
[108.50009155 531.46545410]
[108.89274597 546.46032715]
[117.91796112 560.15258789]
[110.33181763 574.69158936]
] def
/pairs [
[2 117]
[3 116]
[4 115]
[5 114]
[7 113]
[8 112]
[9 111]
[11 109]
[12 108]
[13 107]
[14 106]
[15 105]
[16 104]
[17 103]
[18 102]
[19 101]
[21 99]
[22 98]
[23 97]
[24 96]
[25 95]
[26 94]
[27 93]
[29 91]
[30 90]
[31 89]
[32 88]
[33 87]
[35 86]
[36 85]
[37 84]
[38 83]
[39 82]
[44 79]
[45 78]
[46 77]
[47 76]
[49 75]
[50 74]
[53 72]
[54 71]
[55 70]
[58 67]
[59 66]
[60 65]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
