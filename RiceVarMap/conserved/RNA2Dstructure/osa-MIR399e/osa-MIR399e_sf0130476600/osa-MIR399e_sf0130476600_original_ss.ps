%!PS-Adobe-3.0 EPSF-3.0
%%Creator: PS_dot.c,v 1.38 2007/02/02 15:18:13 ivo Exp $, ViennaRNA-2.1.9
%%CreationDate: Thu Jul 16 15:14:00 2015
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 66 210 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: -d2 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  72 216 translate
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  72 6 mul size div dup scale
  size xmin sub xmax sub 2 div size ymin sub ymax sub 2 div
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
ACAUGCAUUACCGGGUGAGUCUUCCUUGGCAGUGUUCGAAUCGGCAGUACCGGUCUGCAAGUGAUCGGUCAAUCACCAGUUCACCGCUGCCAAAGGAGAUUUGCCCAGCAAUGCAACU\
) def
/coor [
[85.31433868 598.26965332]
[77.56279755 584.68847656]
[80.40541840 569.31146240]
[92.50000000 559.39904785]
[92.50000000 544.39904785]
[92.50000000 529.39904785]
[92.50000000 514.39904785]
[92.50000000 499.39907837]
[92.50000000 484.39907837]
[84.76270294 471.67181396]
[92.50000000 457.87164307]
[84.76270294 445.14434814]
[92.50000000 431.34417725]
[92.50000000 416.34417725]
[92.50000000 401.34417725]
[92.50000000 386.34417725]
[92.50000000 371.34417725]
[92.50000000 356.34417725]
[92.50000000 341.34417725]
[92.50000000 326.34417725]
[92.50000000 311.34417725]
[92.50000000 296.34417725]
[92.50000000 281.34417725]
[92.50000000 266.34417725]
[84.76270294 253.61691284]
[92.50000000 239.81674194]
[92.50000000 224.81674194]
[92.50000000 209.81674194]
[92.50000000 194.81674194]
[92.50000000 179.81674194]
[92.50000000 164.81674194]
[92.50000000 149.81674194]
[92.50000000 134.81674194]
[92.50000000 119.81674194]
[82.48721313 111.92708588]
[78.81333160 99.72032166]
[82.80815125 87.61478424]
[93.02571106 79.99218750]
[93.42166901 64.99741364]
[93.81761932 50.00264359]
[94.21356964 35.00786972]
[86.84324646 21.00826454]
[94.91381073 8.48966885]
[95.30976868 -6.50510454]
[84.71289062 -17.92193222]
[85.32804871 -33.12312317]
[96.27755737 -43.15526962]
[96.67350769 -58.15004349]
[96.67350769 -73.15003967]
[96.27755737 -88.14481354]
[95.88159943 -103.13958740]
[95.48564911 -118.13436127]
[95.08969116 -133.12913513]
[94.69374084 -148.12390137]
[94.29779053 -163.11868286]
[81.94576263 -172.70834351]
[78.69822693 -188.00498962]
[86.08856964 -201.78602600]
[100.62729645 -207.54444885]
[115.44966125 -202.56134033]
[123.55699921 -189.18952942]
[121.12127686 -173.74281311]
[109.29256439 -163.51463318]
[109.68851471 -148.51986694]
[110.08446503 -133.52508545]
[110.48042297 -118.53031158]
[110.87637329 -103.53553772]
[111.27232361 -88.54077148]
[111.66828156 -73.54599762]
[114.54881287 -69.59317017]
[114.89008331 -63.76065445]
[111.66828156 -57.75408936]
[111.27232361 -42.75931549]
[121.67712402 -32.16328812]
[121.48917389 -16.95081520]
[110.30454254 -6.10915136]
[109.90858459 8.88562202]
[117.30722809 21.81269836]
[109.20834351 35.40382385]
[108.81239319 50.39859390]
[108.41644287 65.39337158]
[108.02048492 80.38813782]
[119.63433075 92.03467560]
[119.41722870 108.48083496]
[107.50000000 119.81674194]
[107.50000000 134.81674194]
[107.50000000 149.81674194]
[107.50000000 164.81674194]
[107.50000000 179.81674194]
[107.50000000 194.81674194]
[107.50000000 209.81674194]
[107.50000000 224.81674194]
[107.50000000 239.81674194]
[115.23729706 253.61691284]
[107.50000000 266.34417725]
[107.50000000 281.34417725]
[107.50000000 296.34417725]
[107.50000000 311.34417725]
[107.50000000 326.34417725]
[107.50000000 341.34417725]
[107.50000000 356.34417725]
[107.50000000 371.34417725]
[107.50000000 386.34417725]
[107.50000000 401.34417725]
[107.50000000 416.34417725]
[107.50000000 431.34417725]
[115.23729706 445.14434814]
[107.50000000 457.87164307]
[115.23729706 471.67181396]
[107.50000000 484.39907837]
[107.50000000 499.39907837]
[107.50000000 514.39904785]
[107.50000000 529.39904785]
[107.50000000 544.39904785]
[107.50000000 559.39904785]
[119.59458160 569.31146240]
[122.43720245 584.68847656]
[114.68566132 598.26965332]
] def
/pairs [
[4 115]
[5 114]
[6 113]
[7 112]
[8 111]
[9 110]
[11 108]
[13 106]
[14 105]
[15 104]
[16 103]
[17 102]
[18 101]
[19 100]
[20 99]
[21 98]
[22 97]
[23 96]
[24 95]
[26 93]
[27 92]
[28 91]
[29 90]
[30 89]
[31 88]
[32 87]
[33 86]
[34 85]
[38 82]
[39 81]
[40 80]
[41 79]
[43 77]
[44 76]
[47 73]
[48 72]
[49 69]
[50 68]
[51 67]
[52 66]
[53 65]
[54 64]
[55 63]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
