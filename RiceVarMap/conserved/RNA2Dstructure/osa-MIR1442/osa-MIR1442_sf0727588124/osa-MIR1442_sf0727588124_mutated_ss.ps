%!PS-Adobe-3.0 EPSF-3.0
%%Creator: PS_dot.c,v 1.38 2007/02/02 15:18:13 ivo Exp $, ViennaRNA-2.1.9
%%CreationDate: Thu Jul 16 15:13:50 2015
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 66 210 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: -d2 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  72 216 translate
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  72 6 mul size div dup scale
  size xmin sub xmax sub 2 div size ymin sub ymax sub 2 div
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
UCUAUAUUCAUAGUACUAGAUGUGUCACAUCCAGUACUAGGUUGGUUUUUUAUGGGACGAAGGGAGUAGAUCUUUUGCUAAGUGGAGGCUAAAUUCUCAUCAUCAGAGGAGUAUACUACUCCAUCCGUCCCAUAAUAUAAGGGAUAAUGGGUGGAUGCGACACAUCCUAGUAAAAUGAAUCUGGA\
) def
/coor [
[96.81590271 621.25543213]
[96.81590271 606.25543213]
[96.81590271 591.25543213]
[96.81590271 576.25543213]
[89.07860565 563.52819824]
[96.81590271 549.72802734]
[96.81590271 534.72802734]
[96.81590271 519.72802734]
[96.81590271 504.72799683]
[96.81590271 489.72799683]
[96.81590271 474.72799683]
[86.13503265 464.41030884]
[85.92134857 449.19818115]
[96.81590271 438.06506348]
[96.81590271 423.06506348]
[96.81590271 408.06506348]
[96.81590271 393.06506348]
[96.81590271 378.06506348]
[96.81590271 363.06506348]
[96.68922424 348.06558228]
[96.43588257 333.06774902]
[96.18254089 318.06988525]
[95.92919922 303.07202148]
[95.67585754 288.07415771]
[95.42251587 273.07629395]
[95.16917419 258.07843018]
[87.21801758 245.48365784]
[94.72113800 231.55477905]
[94.46779633 216.55691528]
[94.21445465 201.55905151]
[93.96111298 186.56118774]
[93.70777130 171.56332397]
[93.45442963 156.56547546]
[85.50327301 143.97068787]
[93.00639343 130.04180908]
[80.76677704 124.11439514]
[72.26582336 113.49949646]
[69.15599060 100.26049042]
[72.04177856 86.97084808]
[80.36224365 76.21388245]
[92.50000000 70.08059692]
[92.50000000 55.08059311]
[92.50000000 40.08059311]
[77.61495972 34.02952576]
[66.21584320 22.75992393]
[60.02490616 8.01601219]
[59.96155930 -7.93630838]
[66.00595856 -22.65767479]
[77.20654297 -33.90828323]
[91.82971191 -39.98865128]
[91.57637024 -54.98651123]
[91.32302856 -69.98437500]
[91.06968689 -84.98223114]
[90.81634521 -99.98009491]
[90.56300354 -114.97795105]
[90.30965424 -129.97581482]
[90.05631256 -144.97367859]
[89.80297089 -159.97154236]
[89.54962921 -174.96939087]
[77.01170349 -183.91961670]
[72.20424652 -198.36752319]
[76.77203369 -212.70625305]
[88.76363373 -221.50054932]
[88.51029205 -236.49841309]
[88.25695038 -251.49626160]
[88.00360870 -266.49414062]
[87.75026703 -281.49197388]
[87.49691772 -296.48983765]
[87.24357605 -311.48770142]
[74.30148315 -329.76779175]
[85.42626190 -348.32473755]
[84.16100311 -363.27127075]
[82.89573669 -378.21780396]
[81.63047028 -393.16433716]
[80.36520386 -408.11090088]
[79.09993744 -423.05743408]
[77.83467102 -438.00396729]
[65.53171539 -444.24649048]
[57.98448944 -455.66552734]
[57.07806396 -469.21469116]
[62.94271088 -481.34222412]
[73.94775391 -488.92205811]
[72.93510437 -503.88784790]
[71.92246246 -518.85363770]
[70.78346252 -533.81030273]
[69.51819611 -548.75683594]
[68.25292969 -563.70343018]
[56.01466370 -573.70343018]
[54.51513290 -589.43640137]
[64.64398193 -601.56829834]
[80.39194489 -602.90136719]
[92.41603851 -592.64483643]
[93.58257294 -576.88366699]
[83.19947052 -564.96868896]
[84.46473694 -550.02215576]
[85.73000336 -535.07556152]
[89.43518066 -528.66174316]
[86.88823700 -519.86627197]
[87.90088654 -504.90048218]
[88.91353607 -489.93472290]
[103.08150482 -481.66320801]
[109.60002899 -466.42727661]
[105.72203827 -450.14483643]
[92.78121185 -439.26922607]
[94.04647827 -424.32269287]
[95.31174469 -409.37615967]
[96.57701111 -394.42962646]
[97.84227753 -379.48306274]
[99.10754395 -364.53652954]
[100.37281036 -349.58999634]
[107.37970734 -345.88565063]
[112.40106964 -339.63223267]
[114.55468750 -331.80920410]
[113.41523743 -323.68054199]
[109.09580231 -316.59042358]
[102.24143982 -311.74105835]
[102.49478149 -296.74319458]
[102.74812317 -281.74533081]
[103.00146484 -266.74746704]
[103.25480652 -251.74960327]
[103.50814819 -236.75175476]
[103.76148987 -221.75389099]
[116.04326630 -213.36961365]
[121.09272766 -199.19334412]
[116.77598572 -184.59130859]
[104.54749298 -175.22273254]
[104.80083466 -160.22488403]
[105.05417633 -145.22702026]
[105.30751801 -130.22915649]
[105.56085968 -115.23130035]
[105.81420135 -100.23343658]
[106.06754303 -85.23557281]
[106.32088470 -70.23771667]
[106.57422638 -55.23985672]
[106.82756805 -40.24199295]
[120.07829285 -35.58683014]
[130.96502686 -26.66654396]
[138.16523743 -14.53840542]
[140.79521179 -0.65093201]
[138.51852417 13.32909489]
[131.58891296 25.71668243]
[120.82212067 35.01171112]
[107.50000000 40.08059311]
[107.50000000 55.08059311]
[107.50000000 70.08059692]
[121.52341461 77.90557861]
[129.71281433 91.71935272]
[129.84843445 107.77763367]
[121.89350891 121.72774506]
[108.00425720 129.78846741]
[115.97352600 143.45599365]
[108.45228577 156.31213379]
[108.70562744 171.30998230]
[108.95896912 186.30784607]
[109.21231842 201.30570984]
[109.46566010 216.30357361]
[109.71900177 231.30143738]
[117.68827057 244.96894836]
[110.16703033 257.82510376]
[110.42037964 272.82293701]
[110.67372131 287.82080078]
[110.92706299 302.81866455]
[111.18040466 317.81652832]
[111.43374634 332.81439209]
[111.68708801 347.81225586]
[114.96685791 356.36154175]
[111.81590271 363.06506348]
[111.81590271 378.06506348]
[111.81590271 393.06506348]
[111.81590271 408.06506348]
[111.81590271 423.06506348]
[111.81590271 438.06506348]
[122.71045685 449.19818115]
[122.49677277 464.41030884]
[111.81590271 474.72799683]
[111.81590271 489.72799683]
[111.81590271 504.72799683]
[111.81590271 519.72802734]
[111.81590271 534.72802734]
[111.81590271 549.72802734]
[119.55319977 563.52819824]
[111.81590271 576.25543213]
[111.81590271 591.25543213]
[111.81590271 606.25543213]
[111.81590271 621.25543213]
] def
/pairs [
[1 185]
[2 184]
[3 183]
[4 182]
[6 180]
[7 179]
[8 178]
[9 177]
[10 176]
[11 175]
[14 172]
[15 171]
[16 170]
[17 169]
[18 168]
[19 167]
[20 165]
[21 164]
[22 163]
[23 162]
[24 161]
[25 160]
[26 159]
[28 157]
[29 156]
[30 155]
[31 154]
[32 153]
[33 152]
[35 150]
[41 145]
[42 144]
[43 143]
[50 135]
[51 134]
[52 133]
[53 132]
[54 131]
[55 130]
[56 129]
[57 128]
[58 127]
[59 126]
[63 122]
[64 121]
[65 120]
[66 119]
[67 118]
[68 117]
[69 116]
[71 110]
[72 109]
[73 108]
[74 107]
[75 106]
[76 105]
[77 104]
[82 100]
[83 99]
[84 98]
[85 96]
[86 95]
[87 94]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
