%!PS-Adobe-3.0 EPSF-3.0
%%Creator: PS_dot.c,v 1.38 2007/02/02 15:18:13 ivo Exp $, ViennaRNA-2.1.9
%%CreationDate: Thu Jul 16 15:13:49 2015
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 66 210 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: -d2 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  72 216 translate
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  72 6 mul size div dup scale
  size xmin sub xmax sub 2 div size ymin sub ymax sub 2 div
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
UCUAUAUUCAUAGUACUAGAUGUGUCACAUCCAGAACUAGGUUGGUGUUUUAUGGGACGAAGGGAGUAGAUCUUUUGCUAAGUGGAGGCUAAAUUCUCAUCAUCAGAGGAGUAUACUACUCCAUCCGUCCCAUAAUAUAAGGGAUAAUGGGUGGAUGCGACACAUCCUAGUAAAAUGAAUCUGGA\
) def
/coor [
[95.08381653 642.78790283]
[95.08381653 627.78790283]
[95.08381653 612.78790283]
[95.08381653 597.78790283]
[87.34651947 585.06060791]
[95.08381653 571.26043701]
[95.08381653 556.26043701]
[95.08381653 541.26043701]
[95.08381653 526.26043701]
[95.08381653 511.26043701]
[95.08381653 496.26043701]
[84.40294647 485.94274902]
[84.18927002 470.73062134]
[95.08381653 459.59750366]
[95.08381653 444.59750366]
[95.08381653 429.59750366]
[95.08381653 414.59750366]
[95.08381653 399.59750366]
[95.08381653 384.59750366]
[94.95714569 369.59802246]
[94.70380402 354.60015869]
[94.45046234 339.60232544]
[94.19712067 324.60446167]
[93.94377899 309.60659790]
[93.69042969 294.60873413]
[93.43708801 279.61087036]
[85.48593903 267.01608276]
[92.98905945 253.08720398]
[92.73571777 238.08935547]
[92.48236847 223.09149170]
[92.22902679 208.09362793]
[91.97568512 193.09576416]
[91.72234344 178.09791565]
[83.74841309 171.66551208]
[80.57600403 161.69314575]
[83.48738861 151.41278076]
[91.75066376 144.29754639]
[92.00400543 129.29968262]
[92.25734711 114.30182648]
[83.73740387 99.86265564]
[92.50000000 85.56945038]
[92.50000000 70.56945038]
[92.50000000 55.56944656]
[79.90911865 43.43999863]
[79.97389984 26.29466438]
[92.16665649 14.72555351]
[91.91331482 -0.27230713]
[91.65996552 -15.27016735]
[83.69069672 -28.93769264]
[91.21193695 -41.79382706]
[90.95859528 -56.79168701]
[90.70525360 -71.78955078]
[90.45190430 -86.78740692]
[90.19856262 -101.78527069]
[89.94522095 -116.78312683]
[89.69187927 -131.78099060]
[89.43853760 -146.77885437]
[89.18519592 -161.77671814]
[88.93185425 -176.77456665]
[76.39392090 -185.72479248]
[71.58647156 -200.17269897]
[76.15425873 -214.51142883]
[88.14585876 -223.30572510]
[87.89251709 -238.30358887]
[87.63916779 -253.30143738]
[87.38582611 -268.29931641]
[87.13248444 -283.29714966]
[86.87914276 -298.29501343]
[86.62580109 -313.29287720]
[73.68370819 -331.57296753]
[84.80848694 -350.12991333]
[83.54322052 -365.07644653]
[82.27795410 -380.02297974]
[81.01268768 -394.96951294]
[79.74742126 -409.91607666]
[78.48216248 -424.86260986]
[77.21689606 -439.80914307]
[64.91394043 -446.05166626]
[57.36671066 -457.47070312]
[56.46028519 -471.01986694]
[62.32493591 -483.14739990]
[73.32997894 -490.72723389]
[72.31732941 -505.69302368]
[71.30468750 -520.65881348]
[70.16568756 -535.61547852]
[68.90042114 -550.56201172]
[67.63515472 -565.50860596]
[55.39688873 -575.50860596]
[53.89735794 -591.24157715]
[64.02620697 -603.37347412]
[79.77416992 -604.70654297]
[91.79826355 -594.45001221]
[92.96479797 -578.68884277]
[82.58169556 -566.77386475]
[83.84696198 -551.82733154]
[85.11222839 -536.88073730]
[88.81740570 -530.46691895]
[86.27046204 -521.67144775]
[87.28311157 -506.70565796]
[88.29575348 -491.73989868]
[102.46372986 -483.46838379]
[108.98225403 -468.23245239]
[105.10426331 -451.95001221]
[92.16343689 -441.07440186]
[93.42870331 -426.12786865]
[94.69396973 -411.18133545]
[95.95923615 -396.23480225]
[97.22449493 -381.28823853]
[98.48976135 -366.34170532]
[99.75502777 -351.39517212]
[106.76193237 -347.69082642]
[111.78329468 -341.43740845]
[113.93691254 -333.61437988]
[112.79746246 -325.48571777]
[108.47802734 -318.39559937]
[101.62366486 -313.54623413]
[101.87700653 -298.54837036]
[102.13034821 -283.55050659]
[102.38368988 -268.55264282]
[102.63703156 -253.55477905]
[102.89037323 -238.55693054]
[103.14371490 -223.55906677]
[115.42549133 -215.17478943]
[120.47495270 -200.99851990]
[116.15820312 -186.39648438]
[103.92971802 -177.02790833]
[104.18305969 -162.03005981]
[104.43640137 -147.03219604]
[104.68974304 -132.03433228]
[104.94308472 -117.03647614]
[105.19642639 -102.03861237]
[105.44976807 -87.04074860]
[105.70310974 -72.04289246]
[105.95645142 -57.04503250]
[106.20979309 -42.04716873]
[114.16094971 -29.45239258]
[106.65782928 -15.52350998]
[106.91117096 -0.52564931]
[107.16451263 14.47221088]
[117.59878540 22.05394173]
[121.81760406 34.44826508]
[118.06576538 47.19496155]
[107.50000000 55.56944656]
[107.50000000 70.56945038]
[107.50000000 85.56945038]
[115.23094177 94.29831696]
[115.13246918 105.95811462]
[107.25520325 114.55516815]
[107.00186157 129.55302429]
[106.74851990 144.55088806]
[117.32818604 161.69314575]
[106.72020721 177.84457397]
[106.97354889 192.84242249]
[107.22689056 207.84028625]
[107.48023224 222.83815002]
[107.73357391 237.83601379]
[107.98691559 252.83386230]
[115.95619202 266.50140381]
[108.43495178 279.35754395]
[108.68829346 294.35537720]
[108.94163513 309.35324097]
[109.19497681 324.35110474]
[109.44831848 339.34896851]
[109.70166016 354.34683228]
[109.95500183 369.34469604]
[113.23477936 377.89398193]
[110.08381653 384.59750366]
[110.08381653 399.59750366]
[110.08381653 414.59750366]
[110.08381653 429.59750366]
[110.08381653 444.59750366]
[110.08381653 459.59750366]
[120.97837067 470.73062134]
[120.76469421 485.94274902]
[110.08381653 496.26043701]
[110.08381653 511.26043701]
[110.08381653 526.26043701]
[110.08381653 541.26043701]
[110.08381653 556.26043701]
[110.08381653 571.26043701]
[117.82112122 585.06060791]
[110.08381653 597.78790283]
[110.08381653 612.78790283]
[110.08381653 627.78790283]
[110.08381653 642.78790283]
] def
/pairs [
[1 185]
[2 184]
[3 183]
[4 182]
[6 180]
[7 179]
[8 178]
[9 177]
[10 176]
[11 175]
[14 172]
[15 171]
[16 170]
[17 169]
[18 168]
[19 167]
[20 165]
[21 164]
[22 163]
[23 162]
[24 161]
[25 160]
[26 159]
[28 157]
[29 156]
[30 155]
[31 154]
[32 153]
[33 152]
[37 150]
[38 149]
[39 148]
[41 145]
[42 144]
[43 143]
[46 139]
[47 138]
[48 137]
[50 135]
[51 134]
[52 133]
[53 132]
[54 131]
[55 130]
[56 129]
[57 128]
[58 127]
[59 126]
[63 122]
[64 121]
[65 120]
[66 119]
[67 118]
[68 117]
[69 116]
[71 110]
[72 109]
[73 108]
[74 107]
[75 106]
[76 105]
[77 104]
[82 100]
[83 99]
[84 98]
[85 96]
[86 95]
[87 94]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
