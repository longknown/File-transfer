%!PS-Adobe-3.0 EPSF-3.0
%%Creator: PS_dot.c,v 1.38 2007/02/02 15:18:13 ivo Exp $, ViennaRNA-2.1.9
%%CreationDate: Thu Jul 16 15:14:00 2015
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 66 210 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: -d2 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  72 216 translate
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  72 6 mul size div dup scale
  size xmin sub xmax sub 2 div size ymin sub ymax sub 2 div
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
GUGAUAGAGCUGCAUUUGCACCUGCACCUACAGAGAGGAAGAUGGAGCAGCAAGCUAGCAAUACGUGCUUGAUCGCUAUACGCUAGCUUCUUGCACACAAUGUUGUUCCUGGUCUCUUCCUGAUCCCUAGGUGCAGAGGCAGAUGCAACUAUGUCAU\
) def
/coor [
[92.50000000 585.81707764]
[92.50000000 570.81707764]
[92.50000000 555.81707764]
[92.50000000 540.81707764]
[92.50000000 525.81707764]
[92.50000000 510.81707764]
[84.76270294 498.08981323]
[92.50000000 484.28964233]
[92.50000000 469.28964233]
[84.76270294 456.56237793]
[92.50000000 442.76220703]
[92.50000000 427.76220703]
[92.50000000 412.76220703]
[92.50000000 397.76220703]
[92.50000000 382.76220703]
[92.50000000 367.76220703]
[92.50000000 352.76220703]
[92.50000000 337.76220703]
[92.50000000 322.76220703]
[81.81912994 312.44451904]
[81.60544586 297.23239136]
[92.50000000 286.09927368]
[92.50000000 271.09927368]
[92.50000000 256.09927368]
[92.50000000 241.09925842]
[92.50000000 226.09925842]
[92.50000000 211.09925842]
[92.50000000 196.09925842]
[92.50000000 181.09925842]
[92.50000000 166.09925842]
[81.81912994 155.78158569]
[81.60544586 140.56944275]
[92.50000000 129.43632507]
[92.50000000 114.43632507]
[83.73251343 100.16173553]
[92.21445465 85.71564484]
[91.91622162 70.71861267]
[91.61798859 55.72157669]
[91.31975555 40.72454453]
[91.02152252 25.72750854]
[90.72328949 10.73047352]
[90.42505646 -4.26656199]
[77.37448883 -22.44879723]
[88.28381348 -41.11971283]
[86.79500580 -56.04564285]
[85.30619812 -70.97157288]
[83.81739807 -85.89750671]
[82.32859039 -100.82344055]
[80.83978271 -115.74937439]
[79.35097504 -130.67530823]
[77.86216736 -145.60124207]
[76.37335968 -160.52717590]
[73.11867523 -175.16981506]
[68.14438629 -189.32101440]
[63.17010117 -203.47221375]
[58.19580841 -217.62341309]
[53.22151947 -231.77461243]
[48.24723053 -245.92581177]
[43.27294159 -260.07699585]
[29.02872658 -271.70690918]
[32.87171173 -288.80609131]
[27.61704826 -302.85559082]
[22.36238480 -316.90509033]
[16.39308929 -323.89291382]
[17.14595985 -331.28652954]
[12.17167091 -345.43771362]
[7.19738150 -359.58892822]
[-7.15814829 -366.19909668]
[-12.55649948 -381.05282593]
[-5.79492617 -395.33764648]
[9.11505032 -400.57867432]
[23.32760429 -393.66644287]
[28.41068077 -378.70187378]
[21.34858131 -364.56320190]
[26.32287025 -350.41201782]
[31.29715919 -336.26080322]
[36.41188812 -322.15975952]
[41.66654968 -308.11026001]
[46.92121506 -294.06076050]
[57.82196426 -288.73834229]
[62.29672241 -277.03219604]
[57.42414093 -265.05130005]
[62.39842987 -250.90010071]
[67.37271881 -236.74890137]
[72.34700775 -222.59770203]
[77.32129669 -208.44650269]
[82.29558563 -194.29530334]
[87.26987457 -180.14410400]
[91.35928345 -194.57589722]
[101.21894836 -205.88018799]
[114.96118927 -211.89274597]
[129.95501709 -211.46241760]
[143.32980347 -204.67160034]
[152.52488708 -192.82043457]
[155.77986145 -178.17785645]
[152.47152710 -163.54724121]
[143.23327637 -151.72967529]
[129.83383179 -144.98767090]
[114.83853149 -144.61201477]
[101.11830139 -150.67463684]
[91.29929352 -162.01597595]
[92.78810120 -147.09004211]
[94.27690887 -132.16410828]
[95.76571655 -117.23818207]
[97.25451660 -102.31224823]
[98.74332428 -87.38631439]
[100.23213196 -72.46038055]
[101.72093964 -57.53445053]
[103.20974731 -42.60851669]
[110.33431244 -38.97554779]
[115.47828674 -32.72929001]
[117.72965240 -24.85886002]
[116.64234161 -16.65009117]
[112.32227325 -9.47549057]
[105.42209625 -4.56479454]
[105.72032928 10.43224049]
[106.01856232 25.42927551]
[106.31679535 40.42631149]
[106.61502838 55.42334366]
[106.91326141 70.42037964]
[107.21149445 85.41741180]
[115.12498474 94.00899506]
[115.24111176 105.68910980]
[107.50000000 114.43632507]
[107.50000000 129.43632507]
[118.39455414 140.56944275]
[118.18087006 155.78158569]
[107.50000000 166.09925842]
[107.50000000 181.09925842]
[107.50000000 196.09925842]
[107.50000000 211.09925842]
[107.50000000 226.09925842]
[107.50000000 241.09925842]
[107.50000000 256.09927368]
[107.50000000 271.09927368]
[107.50000000 286.09927368]
[118.39455414 297.23239136]
[118.18087006 312.44451904]
[107.50000000 322.76220703]
[107.50000000 337.76220703]
[107.50000000 352.76220703]
[107.50000000 367.76220703]
[107.50000000 382.76220703]
[107.50000000 397.76220703]
[107.50000000 412.76220703]
[107.50000000 427.76220703]
[107.50000000 442.76220703]
[115.23729706 456.56237793]
[107.50000000 469.28964233]
[107.50000000 484.28964233]
[115.23729706 498.08981323]
[107.50000000 510.81707764]
[107.50000000 525.81707764]
[107.50000000 540.81707764]
[107.50000000 555.81707764]
[107.50000000 570.81707764]
[107.50000000 585.81707764]
] def
/pairs [
[1 157]
[2 156]
[3 155]
[4 154]
[5 153]
[6 152]
[8 150]
[9 149]
[11 147]
[12 146]
[13 145]
[14 144]
[15 143]
[16 142]
[17 141]
[18 140]
[19 139]
[22 136]
[23 135]
[24 134]
[25 133]
[26 132]
[27 131]
[28 130]
[29 129]
[30 128]
[33 125]
[34 124]
[36 121]
[37 120]
[38 119]
[39 118]
[40 117]
[41 116]
[42 115]
[44 109]
[45 108]
[46 107]
[47 106]
[48 105]
[49 104]
[50 103]
[51 102]
[52 101]
[53 88]
[54 87]
[55 86]
[56 85]
[57 84]
[58 83]
[59 82]
[61 79]
[62 78]
[63 77]
[65 76]
[66 75]
[67 74]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
