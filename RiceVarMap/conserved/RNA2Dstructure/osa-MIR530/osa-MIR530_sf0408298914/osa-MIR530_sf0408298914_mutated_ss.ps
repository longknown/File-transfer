%!PS-Adobe-3.0 EPSF-3.0
%%Creator: PS_dot.c,v 1.38 2007/02/02 15:18:13 ivo Exp $, ViennaRNA-2.1.9
%%CreationDate: Thu Jul 16 15:14:00 2015
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 66 210 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: -d2 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  72 216 translate
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  72 6 mul size div dup scale
  size xmin sub xmax sub 2 div size ymin sub ymax sub 2 div
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
GUGAUAGAGCUGCAUUUGCACCUGCACCUACAGAGAGGAAGAUGAAGCAGCAAGUUAGCAAUACGUGCUUGAUCGCUAUACGCUAGCUUCUUGCACACAAUGUUGUUCCUGGUCUCUUCCUGAUCCCUAGGUGCAGAGGCAGAUGCAACUAUGUCAU\
) def
/coor [
[94.76345062 698.92504883]
[94.76345062 683.92504883]
[94.76345062 668.92504883]
[94.76345062 653.92504883]
[94.76345062 638.92504883]
[94.76345062 623.92504883]
[87.02615356 611.19775391]
[94.76345062 597.39758301]
[94.76345062 582.39758301]
[87.02615356 569.67034912]
[94.76345062 555.87017822]
[94.76345062 540.87017822]
[94.76345062 525.87017822]
[94.76345062 510.87014771]
[94.76345062 495.87014771]
[94.76345062 480.87014771]
[94.76345062 465.87014771]
[94.76345062 450.87014771]
[94.76345062 435.87014771]
[84.08258057 425.55245972]
[83.86889648 410.34033203]
[94.76345062 399.20721436]
[94.76345062 384.20721436]
[94.76345062 369.20721436]
[94.76345062 354.20721436]
[94.76345062 339.20721436]
[94.76345062 324.20721436]
[94.76345062 309.20721436]
[94.76345062 294.20721436]
[94.76345062 279.20721436]
[84.08258057 268.88952637]
[83.86889648 253.67739868]
[94.76345062 242.54426575]
[94.76345062 227.54426575]
[85.17395020 212.87483215]
[94.44148254 196.99198914]
[94.14324951 181.99494934]
[93.84501648 166.99790955]
[93.54679108 152.00088501]
[93.24855804 137.00384521]
[92.95032501 122.00681305]
[92.65209198 107.00977325]
[89.34082031 99.60863495]
[92.50000000 91.71228790]
[92.50000000 76.71228790]
[83.93004608 67.02519226]
[84.26960754 54.49753571]
[92.78850555 45.86140442]
[93.08673859 30.86437035]
[93.38497162 15.86733532]
[82.46089935 9.66307831]
[75.27098083 -0.55061668]
[73.13992310 -12.78459072]
[76.41448975 -24.68820953]
[84.40878296 -34.00100327]
[95.54681396 -38.98190689]
[96.44104004 -53.95523071]
[97.33527374 -68.92855072]
[98.22949982 -83.90187073]
[99.12372589 -98.87519073]
[86.41388702 -107.38444519]
[79.71398926 -121.02292633]
[80.73348999 -136.08369446]
[89.09867859 -148.52876282]
[102.47985077 -155.07167053]
[103.37407684 -170.04499817]
[104.26831055 -185.01831055]
[105.16253662 -199.99163818]
[94.95105743 -211.75444031]
[96.07123566 -226.92678833]
[107.34819794 -236.58937073]
[108.24242401 -251.56269836]
[100.26521301 -261.74343872]
[101.35100555 -274.22857666]
[110.36959839 -282.34149170]
[111.56135559 -297.29409790]
[112.75310516 -312.24667358]
[113.94485474 -327.19924927]
[104.67403412 -340.29241943]
[109.26867676 -355.66348267]
[124.20416260 -361.52102661]
[138.02326965 -353.37167358]
[140.12515259 -337.46691895]
[128.89744568 -326.00750732]
[127.70568848 -311.05490112]
[126.51393890 -296.10232544]
[125.32218170 -281.14974976]
[133.71588135 -265.76480103]
[123.21575165 -250.66847229]
[122.32151794 -235.69514465]
[132.36830139 -224.75907898]
[131.67472839 -209.56124878]
[120.13585663 -199.09741211]
[119.24163055 -184.12408447]
[118.34740448 -169.15077209]
[117.45317841 -154.17744446]
[129.96051025 -146.08843994]
[136.78504944 -132.73622131]
[136.00480652 -117.66116333]
[127.72929382 -104.91703033]
[114.09704590 -97.98096466]
[113.20281982 -83.00764465]
[112.30859375 -68.03432465]
[111.41436768 -53.06100082]
[110.52014160 -38.08768082]
[124.65097046 -27.56771088]
[129.72235107 -10.53329086]
[123.53842926 6.29640055]
[108.38201141 16.16556740]
[108.08377838 31.16260338]
[107.78554535 46.15963745]
[117.08148956 61.01683807]
[107.50000000 76.71228790]
[107.50000000 91.71228790]
[107.64912415 106.71154022]
[107.94735718 121.70858002]
[108.24559021 136.70561218]
[108.54382324 151.70265198]
[108.84205627 166.69967651]
[109.14028931 181.69671631]
[109.43852234 196.69375610]
[118.19937897 206.20854187]
[118.10896301 218.74047852]
[109.76345062 227.54426575]
[109.76345062 242.54426575]
[120.65800476 253.67739868]
[120.44432831 268.88952637]
[109.76345062 279.20721436]
[109.76345062 294.20721436]
[109.76345062 309.20721436]
[109.76345062 324.20721436]
[109.76345062 339.20721436]
[109.76345062 354.20721436]
[109.76345062 369.20721436]
[109.76345062 384.20721436]
[109.76345062 399.20721436]
[120.65800476 410.34033203]
[120.44432831 425.55245972]
[109.76345062 435.87014771]
[109.76345062 450.87014771]
[109.76345062 465.87014771]
[109.76345062 480.87014771]
[109.76345062 495.87014771]
[109.76345062 510.87014771]
[109.76345062 525.87017822]
[109.76345062 540.87017822]
[109.76345062 555.87017822]
[117.50075531 569.67034912]
[109.76345062 582.39758301]
[109.76345062 597.39758301]
[117.50075531 611.19775391]
[109.76345062 623.92504883]
[109.76345062 638.92504883]
[109.76345062 653.92504883]
[109.76345062 668.92504883]
[109.76345062 683.92504883]
[109.76345062 698.92504883]
] def
/pairs [
[1 157]
[2 156]
[3 155]
[4 154]
[5 153]
[6 152]
[8 150]
[9 149]
[11 147]
[12 146]
[13 145]
[14 144]
[15 143]
[16 142]
[17 141]
[18 140]
[19 139]
[22 136]
[23 135]
[24 134]
[25 133]
[26 132]
[27 131]
[28 130]
[29 129]
[30 128]
[33 125]
[34 124]
[36 121]
[37 120]
[38 119]
[39 118]
[40 117]
[41 116]
[42 115]
[44 114]
[45 113]
[48 111]
[49 110]
[50 109]
[56 105]
[57 104]
[58 103]
[59 102]
[60 101]
[65 96]
[66 95]
[67 94]
[68 93]
[71 90]
[72 89]
[75 87]
[76 86]
[77 85]
[78 84]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
