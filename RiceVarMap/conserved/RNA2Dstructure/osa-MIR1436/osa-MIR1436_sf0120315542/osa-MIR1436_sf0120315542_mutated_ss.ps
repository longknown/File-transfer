%!PS-Adobe-3.0 EPSF-3.0
%%Creator: PS_dot.c,v 1.38 2007/02/02 15:18:13 ivo Exp $, ViennaRNA-2.1.9
%%CreationDate: Thu Jul 16 15:13:49 2015
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 66 210 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: -d2 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  72 216 translate
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  72 6 mul size div dup scale
  size xmin sub xmax sub 2 div size ymin sub ymax sub 2 div
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
AGUUUAUGUGCUACUCCCUCCGUCCCAUAAUAUUAAAACCUAGGACUGGAUAGGACGUUUCAUAGUACAAUGACUCAGAGUCAUUGUACUAUGAAACGUCCUAUCCAGUCCUAGGUUUUAACAUUAUGGGACGGAGGGAGUAGUCUCAACCUAUAUAAAUU\
) def
/coor [
[86.45365906 228.38815308]
[92.50000000 212.54901123]
[92.50000000 197.54901123]
[92.50000000 182.54901123]
[92.50000000 167.54901123]
[92.50000000 152.54901123]
[92.50000000 137.54901123]
[92.50000000 122.54901886]
[92.50000000 107.54901886]
[91.33761597 92.59412384]
[89.01982880 77.77427673]
[86.70204926 62.95442581]
[84.38426971 48.13457870]
[82.06648254 33.31473160]
[79.74870300 18.49488258]
[77.43092346 3.67503524]
[75.11314392 -11.14481258]
[72.79535675 -25.96466064]
[70.47757721 -40.78450775]
[68.15979767 -55.60435486]
[65.84201050 -70.42420197]
[63.52423096 -85.24404907]
[61.20644760 -100.06389618]
[58.88866806 -114.88374329]
[56.57088470 -129.70359802]
[54.25310516 -144.52343750]
[51.93532181 -159.34329224]
[49.61753845 -174.16313171]
[47.29975891 -188.98298645]
[44.98197556 -203.80282593]
[42.66419220 -218.62268066]
[32.88743210 -231.06155396]
[38.56520462 -244.83152771]
[36.24742508 -259.65136719]
[33.92964172 -274.47122192]
[31.61186028 -289.29107666]
[29.29407692 -304.11093140]
[26.97629547 -318.93075562]
[24.65851402 -333.75061035]
[22.34073257 -348.57046509]
[20.02294922 -363.39031982]
[17.70516777 -378.21014404]
[15.38738632 -393.02999878]
[13.06960487 -407.84985352]
[10.75182247 -422.66970825]
[8.43404102 -437.48953247]
[6.11625862 -452.30938721]
[3.79847693 -467.12924194]
[1.48069501 -481.94909668]
[-0.83708686 -496.76895142]
[-3.15486884 -511.58877563]
[-5.47265053 -526.40863037]
[-7.79043245 -541.22845459]
[-10.10821438 -556.04833984]
[-12.42599678 -570.86816406]
[-14.74377823 -585.68804932]
[-17.06155968 -600.50787354]
[-19.37934113 -615.32769775]
[-21.69712448 -630.14758301]
[-24.01490593 -644.96740723]
[-26.33268738 -659.78729248]
[-28.65046883 -674.60711670]
[-30.96825218 -689.42694092]
[-33.28603363 -704.24682617]
[-35.60381699 -719.06665039]
[-37.92159653 -733.88647461]
[-40.23937988 -748.70635986]
[-42.55715942 -763.52618408]
[-44.87494278 -778.34606934]
[-47.19272614 -793.16589355]
[-49.51050568 -807.98571777]
[-51.82828903 -822.80560303]
[-54.14606857 -837.62542725]
[-56.46385193 -852.44531250]
[-58.78163528 -867.26513672]
[-67.20279694 -881.97973633]
[-55.39443588 -894.14526367]
[-40.43550873 -886.16607666]
[-43.96178818 -869.58288574]
[-41.64400482 -854.76306152]
[-39.32622147 -839.94323730]
[-37.00844193 -825.12335205]
[-34.69065857 -810.30352783]
[-32.37287521 -795.48370361]
[-30.05509567 -780.66381836]
[-27.73731232 -765.84399414]
[-25.41953087 -751.02410889]
[-23.10174942 -736.20428467]
[-20.78396797 -721.38446045]
[-18.46618652 -706.56457520]
[-16.14840317 -691.74475098]
[-13.83062172 -676.92486572]
[-11.51284027 -662.10504150]
[-9.19505787 -647.28521729]
[-6.87727594 -632.46533203]
[-4.55949450 -617.64550781]
[-2.24171233 -602.82568359]
[0.07606952 -588.00579834]
[2.39385152 -573.18597412]
[4.71163321 -558.36608887]
[7.02941513 -543.54626465]
[9.34719753 -528.72644043]
[11.66497898 -513.90655518]
[13.98276043 -499.08673096]
[16.30054283 -484.26687622]
[18.61832428 -469.44702148]
[20.93610573 -454.62716675]
[23.25388908 -439.80734253]
[25.57167053 -424.98748779]
[27.88945198 -410.16763306]
[30.20723343 -395.34777832]
[32.52501678 -380.52792358]
[34.84279633 -365.70809937]
[37.16057968 -350.88824463]
[39.47836304 -336.06838989]
[41.79614258 -321.24853516]
[44.11392593 -306.42871094]
[46.43170547 -291.60885620]
[48.74948883 -276.78900146]
[51.06727219 -261.96914673]
[53.38505173 -247.14930725]
[62.99602890 -235.77044678]
[57.48404312 -220.94046021]
[59.80182266 -206.12062073]
[62.11960602 -191.30076599]
[64.43738556 -176.48092651]
[66.75517273 -161.66107178]
[69.07295227 -146.84121704]
[71.39073181 -132.02137756]
[73.70851135 -117.20153046]
[76.02629852 -102.38168335]
[78.34407806 -87.56183624]
[80.66185760 -72.74198151]
[82.97964478 -57.92213821]
[85.29742432 -43.10229111]
[87.61520386 -28.28244209]
[89.93299103 -13.46259403]
[92.25077057 1.35725343]
[94.56855011 16.17710114]
[96.88633728 30.99694824]
[99.20411682 45.81679535]
[101.52189636 60.63664627]
[103.83967590 75.45648956]
[106.15746307 90.27633667]
[114.51145935 77.81797791]
[128.54052734 72.50901031]
[143.04954529 76.31540680]
[152.66561890 87.82762146]
[153.82783508 102.78252411]
[146.10577393 115.64215088]
[132.35903931 121.64440918]
[117.67819214 118.56660461]
[107.50000000 107.54901886]
[107.50000000 122.54901886]
[107.50000000 137.54901123]
[107.50000000 152.54901123]
[107.50000000 167.54901123]
[107.50000000 182.54901123]
[107.50000000 197.54901123]
[107.50000000 212.54901123]
[113.54634094 228.38815308]
] def
/pairs [
[2 160]
[3 159]
[4 158]
[5 157]
[6 156]
[7 155]
[8 154]
[9 153]
[10 144]
[11 143]
[12 142]
[13 141]
[14 140]
[15 139]
[16 138]
[17 137]
[18 136]
[19 135]
[20 134]
[21 133]
[22 132]
[23 131]
[24 130]
[25 129]
[26 128]
[27 127]
[28 126]
[29 125]
[30 124]
[31 123]
[33 121]
[34 120]
[35 119]
[36 118]
[37 117]
[38 116]
[39 115]
[40 114]
[41 113]
[42 112]
[43 111]
[44 110]
[45 109]
[46 108]
[47 107]
[48 106]
[49 105]
[50 104]
[51 103]
[52 102]
[53 101]
[54 100]
[55 99]
[56 98]
[57 97]
[58 96]
[59 95]
[60 94]
[61 93]
[62 92]
[63 91]
[64 90]
[65 89]
[66 88]
[67 87]
[68 86]
[69 85]
[70 84]
[71 83]
[72 82]
[73 81]
[74 80]
[75 79]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
