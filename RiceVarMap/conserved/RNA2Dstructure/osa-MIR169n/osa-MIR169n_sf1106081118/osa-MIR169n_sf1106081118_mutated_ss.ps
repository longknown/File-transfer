%!PS-Adobe-3.0 EPSF-3.0
%%Creator: PS_dot.c,v 1.38 2007/02/02 15:18:13 ivo Exp $, ViennaRNA-2.1.9
%%CreationDate: Thu Jul 16 15:13:53 2015
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 66 210 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: -d2 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  72 216 translate
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  72 6 mul size div dup scale
  size xmin sub xmax sub 2 div size ymin sub ymax sub 2 div
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
CUCCCUUUGGUAGCCAAGAAUGACUUGCCUAUGUGUUUUGCCUUGUGUUGGCUCAUCCAUCCGUCUAUCAGCCGUUGCAGAUUUGCAGUGGCAGAUUAAAGGGUUUCAGAAAGAAAUUCUUGUGAUGGAUGUGCAAUGUGGCUGCAUGGGCCGGUCUUCUUGGCUAGCCAGAGUGGC\
) def
/coor [
[64.39254761 895.21728516]
[56.68265533 880.74353027]
[65.59074402 866.97479248]
[65.85546875 851.97711182]
[65.98783875 836.97766113]
[65.98783875 821.97766113]
[65.98783875 806.97766113]
[65.98783875 791.97766113]
[65.98783875 776.97766113]
[65.98783875 761.97766113]
[65.98783875 746.97766113]
[65.85546875 731.97827148]
[65.59074402 716.98059082]
[65.32601166 701.98297119]
[65.06128693 686.98529053]
[64.79656219 671.98760986]
[64.53183746 656.98992920]
[64.26710510 641.99230957]
[64.00238037 626.99462891]
[63.73765182 611.99694824]
[60.46595001 605.34454346]
[63.60294724 596.73284912]
[63.60294724 581.73284912]
[63.60294724 566.73284912]
[63.60294724 551.73284912]
[55.86564636 539.00555420]
[63.60294724 525.20538330]
[63.60294724 510.20538330]
[63.60294724 495.20538330]
[63.60294724 480.20538330]
[63.60294724 465.20538330]
[63.60294724 450.20538330]
[63.60294724 435.20538330]
[63.60294724 420.20538330]
[63.60294724 405.20538330]
[61.68644333 403.12051392]
[60.49320602 400.13955688]
[60.37298965 396.53894043]
[61.56734085 392.71783447]
[64.16968536 389.15664673]
[65.22776794 374.19400024]
[66.28585052 359.23135376]
[58.89813995 352.11880493]
[56.61281586 341.89608765]
[60.42505264 331.90359497]
[69.29607391 325.54425049]
[70.88155365 310.62829590]
[72.46703339 295.71231079]
[74.05250549 280.79635620]
[75.63798523 265.88037109]
[73.21100616 258.87548828]
[77.38533783 250.71597290]
[71.27541351 237.13223267]
[80.65435791 224.39071655]
[82.50283813 209.50505066]
[84.35131073 194.61938477]
[86.19978333 179.73371887]
[88.04826355 164.84805298]
[89.89673615 149.96237183]
[91.74521637 135.07670593]
[93.59368896 120.19104004]
[95.31073761 105.28964233]
[88.03314972 107.83697510]
[79.51356506 106.65557861]
[71.25753784 101.39328003]
[64.83451080 92.23786926]
[61.69819641 79.91669464]
[57.77330780 65.43929291]
[53.84841919 50.96188736]
[42.76974106 39.66704559]
[46.90726852 25.35865021]
[42.98237991 10.88124657]
[39.05749130 -3.59615850]
[35.13260269 -18.07356262]
[31.20771217 -32.55096817]
[27.28282356 -47.02837372]
[23.35793495 -61.50577927]
[19.43304634 -75.98318481]
[15.50815773 -90.46058655]
[3.50300360 -101.63235474]
[7.43866539 -117.55223083]
[23.26647186 -121.84322357]
[34.70413208 -110.09111786]
[29.98556137 -94.38547516]
[33.91044998 -79.90807343]
[37.83533859 -65.43066406]
[41.76022720 -50.95326233]
[45.68511581 -36.47585678]
[49.61000824 -21.99845123]
[53.53489685 -7.52104712]
[57.45978546 6.95635748]
[61.38467407 21.43376160]
[72.18261719 31.69308281]
[68.32582092 47.03699875]
[72.25070953 61.51440430]
[76.17559814 75.99180603]
[83.46371460 77.76194763]
[98.03993988 81.30223083]
[105.32805634 83.07237244]
[115.45648956 72.00824738]
[125.58491516 60.94411850]
[135.71334839 49.87998962]
[145.84178162 38.81586456]
[155.97019958 27.75173759]
[166.09863281 16.68761063]
[176.22706604 5.62348366]
[186.35549927 -5.44064331]
[187.08717346 -21.46700287]
[200.15734863 -30.77021790]
[215.53971863 -26.21365738]
[221.43424988 -11.29272461]
[213.31913757 2.54651713]
[197.41961670 4.68778658]
[187.29119873 15.75191307]
[177.16276550 26.81604004]
[167.03433228 37.88016891]
[156.90589905 48.94429398]
[146.77748108 60.00842285]
[136.64904785 71.07254791]
[126.52061462 82.13667297]
[116.39218140 93.20080566]
[110.22670746 106.87511444]
[112.43588257 115.77019501]
[108.47936249 122.03951263]
[106.63088226 136.92518616]
[104.78240967 151.81085205]
[102.93392944 166.69651794]
[101.08545685 181.58219910]
[99.23697662 196.46786499]
[97.38850403 211.35353088]
[95.54003143 226.23919678]
[101.51773834 240.88766479]
[92.27100372 252.56445312]
[90.55396271 267.46585083]
[88.96848297 282.38183594]
[87.38300323 297.29779053]
[85.79752350 312.21377563]
[84.21204376 327.12973022]
[93.23109436 345.13595581]
[81.24848938 360.28945923]
[80.19040680 375.25207520]
[79.13231659 390.21472168]
[78.60295105 405.20538330]
[78.60295105 420.20538330]
[78.60295105 435.20538330]
[78.60295105 450.20538330]
[78.60295105 465.20538330]
[78.60295105 480.20538330]
[78.60295105 495.20538330]
[78.60295105 510.20538330]
[78.60295105 525.20538330]
[86.34024811 539.00555420]
[78.60295105 551.73284912]
[78.60295105 566.73284912]
[78.60295105 581.73284912]
[78.60295105 596.73284912]
[78.73531342 611.73223877]
[79.00004578 626.72991943]
[79.26477051 641.72753906]
[79.52949524 656.72521973]
[79.79422760 671.72290039]
[80.05895233 686.72058105]
[80.32367706 701.71820068]
[80.58840942 716.71588135]
[80.85313416 731.71356201]
[84.14162445 740.26855469]
[80.98783875 746.97766113]
[80.98783875 761.97766113]
[80.98783875 776.97766113]
[80.98783875 791.97766113]
[80.98783875 806.97766113]
[80.98783875 821.97766113]
[80.98783875 836.97766113]
[84.12483978 845.58941650]
[80.85313416 852.24182129]
[80.58840942 867.23950195]
[89.00502777 881.31402588]
] def
/pairs [
[3 176]
[4 175]
[5 173]
[6 172]
[7 171]
[8 170]
[9 169]
[10 168]
[11 167]
[12 165]
[13 164]
[14 163]
[15 162]
[16 161]
[17 160]
[18 159]
[19 158]
[20 157]
[22 156]
[23 155]
[24 154]
[25 153]
[27 151]
[28 150]
[29 149]
[30 148]
[31 147]
[32 146]
[33 145]
[34 144]
[35 143]
[40 142]
[41 141]
[42 140]
[46 138]
[47 137]
[48 136]
[49 135]
[50 134]
[52 133]
[54 131]
[55 130]
[56 129]
[57 128]
[58 127]
[59 126]
[60 125]
[61 124]
[62 122]
[67 96]
[68 95]
[69 94]
[71 92]
[72 91]
[73 90]
[74 89]
[75 88]
[76 87]
[77 86]
[78 85]
[79 84]
[99 121]
[100 120]
[101 119]
[102 118]
[103 117]
[104 116]
[105 115]
[106 114]
[107 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
