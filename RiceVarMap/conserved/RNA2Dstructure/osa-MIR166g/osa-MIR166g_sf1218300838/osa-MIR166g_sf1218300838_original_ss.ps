%!PS-Adobe-3.0 EPSF-3.0
%%Creator: PS_dot.c,v 1.38 2007/02/02 15:18:13 ivo Exp $, ViennaRNA-2.1.9
%%CreationDate: Thu Jul 16 15:13:51 2015
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 66 210 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: -d2 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  72 216 translate
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  72 6 mul size div dup scale
  size xmin sub xmax sub 2 div size ymin sub ymax sub 2 div
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
AGCAUGGUGUCUGGAAUGGAGGCUGAUCCAAGAUCAUUGCUUGGUGCAAAAUACUAGGGCAUUGUUGUAAGUGCCAUUAGUUCUUUUUUGUUUCCGAGUUUGUUAUCGAGGAUCUCGGACCAGGCUUCAUUCCUCACACCGUGCU\
) def
/coor [
[92.50000000 516.92132568]
[92.50000000 501.92132568]
[92.50000000 486.92132568]
[92.50000000 471.92132568]
[92.50000000 456.92132568]
[92.50000000 441.92132568]
[92.50000000 426.92132568]
[92.50000000 411.92132568]
[92.50000000 396.92132568]
[92.50000000 381.92132568]
[81.81912994 371.60363770]
[81.60544586 356.39151001]
[92.50000000 345.25839233]
[92.50000000 330.25839233]
[92.50000000 315.25839233]
[92.50000000 300.25839233]
[92.50000000 285.25839233]
[92.50000000 270.25839233]
[92.50000000 255.25839233]
[92.50000000 240.25839233]
[92.50000000 225.25839233]
[84.76270294 212.53111267]
[92.50000000 198.73094177]
[92.50000000 183.73094177]
[92.50000000 168.73094177]
[84.76270294 156.00367737]
[92.50000000 142.20350647]
[92.50000000 127.20349884]
[92.50000000 112.20349884]
[85.67605591 100.00000000]
[92.50000000 87.79650116]
[92.50000000 72.79650116]
[92.50000000 57.79650116]
[92.50000000 42.79650116]
[92.50000000 27.79650116]
[73.26152802 16.34742737]
[64.63269043 -4.17609262]
[69.85194397 -25.69197273]
[86.73553467 -39.82175827]
[84.16613770 -54.60005951]
[81.59674072 -69.37836456]
[79.02734375 -84.15666199]
[76.45794678 -98.93496704]
[73.88854980 -113.71326447]
[61.75989151 -127.52421570]
[68.35188293 -143.75469971]
[65.46511078 -158.47430420]
[62.57833481 -173.19390869]
[59.69156265 -187.91349792]
[56.80478668 -202.63310242]
[53.91801453 -217.35269165]
[38.82371140 -232.49655151]
[46.05534363 -251.78507996]
[42.22504425 -266.28781128]
[38.39474487 -280.79052734]
[34.56444550 -295.29324341]
[30.73414612 -309.79595947]
[26.74803925 -324.25662231]
[22.60658455 -338.67355347]
[18.46512985 -353.09051514]
[14.32367420 -367.50744629]
[10.18222046 -381.92440796]
[6.04076529 -396.34133911]
[-7.90530491 -403.77658081]
[-12.42917538 -418.91958618]
[-4.84691286 -432.78625488]
[10.34306049 -437.14978027]
[24.12880135 -429.42132568]
[28.33147621 -414.18606567]
[20.45771217 -400.48281860]
[24.59916687 -386.06585693]
[28.74062157 -371.64892578]
[32.88207626 -357.23196411]
[37.02352905 -342.81503296]
[41.16498566 -328.39807129]
[46.07031631 -322.79708862]
[45.23686218 -313.62625122]
[49.06716156 -299.12353516]
[52.89746094 -284.62081909]
[56.72776031 -270.11810303]
[60.55805969 -255.61538696]
[68.97116852 -252.40522766]
[75.02355194 -245.55220032]
[77.23522949 -236.53820801]
[74.97593689 -227.39350891]
[68.63761139 -220.23947144]
[71.52438354 -205.51986694]
[74.41115570 -190.80027771]
[77.29793549 -176.08067322]
[80.18470764 -161.36108398]
[83.07147980 -146.64147949]
[92.96256256 -139.59931946]
[95.45486450 -127.30574036]
[88.66685486 -116.28266144]
[91.23625183 -101.50436401]
[93.80564880 -86.72605896]
[96.37504578 -71.94776154]
[98.94444275 -57.16945648]
[101.51383972 -42.39115524]
[109.84944916 -41.08273315]
[117.64753723 -37.81898499]
[124.45561218 -32.78109741]
[129.87672424 -26.25341988]
[133.59252930 -18.60744286]
[135.38203430 -10.28064346]
[135.13467407 -1.75146484]
[132.85716248 6.48817873]
[128.67350769 13.96126938]
[122.81832123 20.23330498]
[115.62361145 24.93755341]
[107.50000000 27.79650116]
[107.50000000 42.79650116]
[107.50000000 57.79650116]
[107.50000000 72.79650116]
[107.50000000 87.79650116]
[114.32394409 100.00000000]
[107.50000000 112.20349884]
[107.50000000 127.20349884]
[107.50000000 142.20350647]
[115.23729706 156.00367737]
[107.50000000 168.73094177]
[107.50000000 183.73094177]
[107.50000000 198.73094177]
[115.23729706 212.53111267]
[107.50000000 225.25839233]
[107.50000000 240.25839233]
[107.50000000 255.25839233]
[107.50000000 270.25839233]
[107.50000000 285.25839233]
[107.50000000 300.25839233]
[107.50000000 315.25839233]
[107.50000000 330.25839233]
[107.50000000 345.25839233]
[118.39455414 356.39151001]
[118.18087006 371.60363770]
[107.50000000 381.92132568]
[107.50000000 396.92132568]
[107.50000000 411.92132568]
[107.50000000 426.92132568]
[107.50000000 441.92132568]
[107.50000000 456.92132568]
[107.50000000 471.92132568]
[107.50000000 486.92132568]
[107.50000000 501.92132568]
[107.50000000 516.92132568]
] def
/pairs [
[1 145]
[2 144]
[3 143]
[4 142]
[5 141]
[6 140]
[7 139]
[8 138]
[9 137]
[10 136]
[13 133]
[14 132]
[15 131]
[16 130]
[17 129]
[18 128]
[19 127]
[20 126]
[21 125]
[23 123]
[24 122]
[25 121]
[27 119]
[28 118]
[29 117]
[31 115]
[32 114]
[33 113]
[34 112]
[35 111]
[39 99]
[40 98]
[41 97]
[42 96]
[43 95]
[44 94]
[46 91]
[47 90]
[48 89]
[49 88]
[50 87]
[51 86]
[53 81]
[54 80]
[55 79]
[56 78]
[57 77]
[58 75]
[59 74]
[60 73]
[61 72]
[62 71]
[63 70]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
