%!PS-Adobe-3.0 EPSF-3.0
%%Creator: PS_dot.c,v 1.38 2007/02/02 15:18:13 ivo Exp $, ViennaRNA-2.1.9
%%CreationDate: Thu Jul 16 15:13:51 2015
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 66 210 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: -d2 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  72 216 translate
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  72 6 mul size div dup scale
  size xmin sub xmax sub 2 div size ymin sub ymax sub 2 div
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
AGCAUGGUGUCUGGAAUGGAGGCUGAUCCAAGAUCCUUGCUUGGUGCAAAAUACUAGGGCAUUGUUGUAAGUGCCAUUAGUUCUUUUUUGUUUCCGAGUUUGUUAUCGAGGAUCUCGGACCAGGCUUCAUUCCUCACACCGUGCU\
) def
/coor [
[92.50000000 516.92132568]
[92.50000000 501.92132568]
[92.50000000 486.92132568]
[92.50000000 471.92132568]
[92.50000000 456.92132568]
[92.50000000 441.92132568]
[92.50000000 426.92132568]
[92.50000000 411.92132568]
[92.50000000 396.92132568]
[92.50000000 381.92132568]
[81.81912994 371.60363770]
[81.60544586 356.39151001]
[92.50000000 345.25839233]
[92.50000000 330.25839233]
[92.50000000 315.25839233]
[92.50000000 300.25839233]
[92.50000000 285.25839233]
[92.50000000 270.25839233]
[92.50000000 255.25839233]
[92.50000000 240.25839233]
[92.50000000 225.25839233]
[84.76270294 212.53111267]
[92.50000000 198.73094177]
[92.50000000 183.73094177]
[92.50000000 168.73094177]
[84.76270294 156.00367737]
[92.50000000 142.20350647]
[92.50000000 127.20349884]
[92.50000000 112.20349884]
[85.67605591 100.00000000]
[92.50000000 87.79650116]
[92.50000000 72.79650116]
[92.50000000 57.79650116]
[92.50000000 42.79650116]
[92.50000000 27.79650116]
[92.50000000 12.79650021]
[92.50000000 -2.20349932]
[92.50000000 -17.20349884]
[91.21052551 -32.14797211]
[88.64112854 -46.92627335]
[86.07173157 -61.70457458]
[83.50233459 -76.48287964]
[80.93293762 -91.26117706]
[78.36354065 -106.03948212]
[66.23488617 -119.85043335]
[72.82687378 -136.08091736]
[69.94010162 -150.80052185]
[67.05332947 -165.52011108]
[64.16654968 -180.23971558]
[61.27977753 -194.95930481]
[58.39300537 -209.67890930]
[43.29870224 -224.82276917]
[50.53033447 -244.11129761]
[46.70003510 -258.61401367]
[42.86973572 -273.11672974]
[39.03943634 -287.61944580]
[35.20913696 -302.12216187]
[31.22303009 -316.58282471]
[27.08157539 -330.99978638]
[22.94012070 -345.41671753]
[18.79866600 -359.83367920]
[14.65721130 -374.25061035]
[10.51575661 -388.66757202]
[-3.43031406 -396.10278320]
[-7.95418406 -411.24578857]
[-0.37192175 -425.11245728]
[14.81805134 -429.47598267]
[28.60379219 -421.74752808]
[32.80646896 -406.51226807]
[24.93270302 -392.80902100]
[29.07415771 -378.39205933]
[33.21561050 -363.97512817]
[37.35706711 -349.55816650]
[41.49851990 -335.14123535]
[45.63997650 -320.72427368]
[50.54530716 -315.12329102]
[49.71185303 -305.95245361]
[53.54215240 -291.44973755]
[57.37245178 -276.94702148]
[61.20275116 -262.44430542]
[65.03305054 -247.94158936]
[73.44615936 -244.73144531]
[79.49854279 -237.87841797]
[81.71022034 -228.86442566]
[79.45092773 -219.71972656]
[73.11260223 -212.56567383]
[75.99937439 -197.84608459]
[78.88614655 -183.12648010]
[81.77292633 -168.40689087]
[84.65969849 -153.68728638]
[87.54647064 -138.96769714]
[97.43755341 -131.92553711]
[99.92985535 -119.63195801]
[93.14184570 -108.60887909]
[95.71124268 -93.83057404]
[98.28063965 -79.05227661]
[100.85003662 -64.27397156]
[103.41943359 -49.49567032]
[105.98883057 -34.71736908]
[114.29062653 -47.21057129]
[128.29150391 -52.59345245]
[142.82444763 -48.87945557]
[152.52606201 -37.43923569]
[153.81597900 -22.49480057]
[146.21815491 -9.56139374]
[132.53656006 -3.41208601]
[117.82038116 -6.31627893]
[107.50000000 -17.20349884]
[107.50000000 -2.20349932]
[107.50000000 12.79650021]
[107.50000000 27.79650116]
[107.50000000 42.79650116]
[107.50000000 57.79650116]
[107.50000000 72.79650116]
[107.50000000 87.79650116]
[114.32394409 100.00000000]
[107.50000000 112.20349884]
[107.50000000 127.20349884]
[107.50000000 142.20350647]
[115.23729706 156.00367737]
[107.50000000 168.73094177]
[107.50000000 183.73094177]
[107.50000000 198.73094177]
[115.23729706 212.53111267]
[107.50000000 225.25839233]
[107.50000000 240.25839233]
[107.50000000 255.25839233]
[107.50000000 270.25839233]
[107.50000000 285.25839233]
[107.50000000 300.25839233]
[107.50000000 315.25839233]
[107.50000000 330.25839233]
[107.50000000 345.25839233]
[118.39455414 356.39151001]
[118.18087006 371.60363770]
[107.50000000 381.92132568]
[107.50000000 396.92132568]
[107.50000000 411.92132568]
[107.50000000 426.92132568]
[107.50000000 441.92132568]
[107.50000000 456.92132568]
[107.50000000 471.92132568]
[107.50000000 486.92132568]
[107.50000000 501.92132568]
[107.50000000 516.92132568]
] def
/pairs [
[1 145]
[2 144]
[3 143]
[4 142]
[5 141]
[6 140]
[7 139]
[8 138]
[9 137]
[10 136]
[13 133]
[14 132]
[15 131]
[16 130]
[17 129]
[18 128]
[19 127]
[20 126]
[21 125]
[23 123]
[24 122]
[25 121]
[27 119]
[28 118]
[29 117]
[31 115]
[32 114]
[33 113]
[34 112]
[35 111]
[36 110]
[37 109]
[38 108]
[39 99]
[40 98]
[41 97]
[42 96]
[43 95]
[44 94]
[46 91]
[47 90]
[48 89]
[49 88]
[50 87]
[51 86]
[53 81]
[54 80]
[55 79]
[56 78]
[57 77]
[58 75]
[59 74]
[60 73]
[61 72]
[62 71]
[63 70]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
