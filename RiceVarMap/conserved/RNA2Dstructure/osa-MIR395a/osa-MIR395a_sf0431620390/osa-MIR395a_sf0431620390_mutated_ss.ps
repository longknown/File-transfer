%!PS-Adobe-3.0 EPSF-3.0
%%Creator: PS_dot.c,v 1.38 2007/02/02 15:18:13 ivo Exp $, ViennaRNA-2.1.9
%%CreationDate: Thu Jul 16 15:13:57 2015
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 66 210 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: -d2 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  72 216 translate
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  72 6 mul size div dup scale
  size xmin sub xmax sub 2 div size ymin sub ymax sub 2 div
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
UUGUCCACUGGAGUUCUCCUCAAUCCACUUCAGUAGAUAGCUAUGGCUAGGCCUCAUUGCAUUGCACUGUUACAUAACUGUGAUCAUGGGGCCAAAAGCUAGCUAUGUAUAGUGAAGUGCUUGGGGGAACUCCAGUUGGCAC\
) def
/coor [
[80.30619049 590.65863037]
[86.35253143 574.81945801]
[86.35253143 559.81945801]
[86.35253143 544.81945801]
[86.35253143 529.81945801]
[78.61522675 517.09222412]
[86.35253143 503.29205322]
[86.35253143 488.29205322]
[86.35253143 473.29205322]
[86.35253143 458.29205322]
[86.35253143 443.29205322]
[86.35253143 428.29205322]
[86.35253143 413.29205322]
[86.35253143 398.29205322]
[86.35253143 383.29205322]
[86.35253143 368.29205322]
[86.35253143 353.29205322]
[86.35253143 338.29205322]
[86.35253143 323.29205322]
[83.18259430 316.55108643]
[86.52091217 307.96343994]
[86.85042572 292.96704102]
[87.17993164 277.97067261]
[79.02323151 268.97241211]
[79.22201538 256.42715454]
[88.21730804 247.11302185]
[88.87617493 232.12748718]
[89.53503418 217.14196777]
[90.19390106 202.15644836]
[90.85276031 187.17092896]
[91.51162720 172.18540955]
[92.17048645 157.19987488]
[92.50000000 142.20350647]
[92.50000000 127.20349884]
[92.50000000 112.20349884]
[85.67605591 100.00000000]
[92.50000000 87.79650116]
[92.50000000 72.79650116]
[92.50000000 57.79650116]
[92.50000000 42.79650116]
[92.50000000 27.79650116]
[92.50000000 12.79650021]
[89.47370911 6.77755404]
[89.93138885 1.01490068]
[92.84398651 -2.85874295]
[93.50285339 -17.84426689]
[94.16171265 -32.82978821]
[94.82057953 -47.81531143]
[84.67880249 -65.17767334]
[95.58841705 -81.08739471]
[95.58841705 -96.08739471]
[95.58841705 -111.08739471]
[95.58841705 -126.08739471]
[95.58841705 -141.08738708]
[95.58841705 -156.08738708]
[95.58841705 -171.08738708]
[95.58841705 -186.08738708]
[92.43955231 -194.74629211]
[95.75680542 -201.41600037]
[92.79891205 -210.14198303]
[96.26187897 -216.73721313]
[96.92074585 -231.72273254]
[97.57960510 -246.70825195]
[98.23847198 -261.69378662]
[98.89733124 -276.67929077]
[99.55619812 -291.66482544]
[96.79721069 -297.81088257]
[97.50756073 -303.54788208]
[100.58749390 -307.28985596]
[101.90395355 -322.23196411]
[103.22040558 -337.17407227]
[95.81214142 -351.80450439]
[105.00366974 -365.38568115]
[121.33953857 -363.94644165]
[128.01480103 -348.96734619]
[118.16252899 -335.85763550]
[116.84606934 -320.91549683]
[115.52961731 -305.97338867]
[114.54171753 -291.00595093]
[113.88285828 -276.02044678]
[113.22399139 -261.03491211]
[112.56513214 -246.04939270]
[111.90626526 -231.06385803]
[111.24740601 -216.07833862]
[110.75318909 -201.08648682]
[110.58841705 -186.08738708]
[110.58841705 -171.08738708]
[110.58841705 -156.08738708]
[110.58841705 -141.08738708]
[110.58841705 -126.08739471]
[110.58841705 -111.08739471]
[110.58841705 -96.08739471]
[110.58841705 -81.08739471]
[118.49847412 -74.47054291]
[121.48303223 -64.36898041]
[118.30928040 -54.09419250]
[109.80609894 -47.15644836]
[109.14723969 -32.17092514]
[108.48837280 -17.18540192]
[107.82951355 -2.19987965]
[107.50000000 12.79650021]
[107.50000000 27.79650116]
[107.50000000 42.79650116]
[107.50000000 57.79650116]
[107.50000000 72.79650116]
[107.50000000 87.79650116]
[114.32394409 100.00000000]
[107.50000000 112.20349884]
[107.50000000 127.20349884]
[107.50000000 142.20350647]
[110.52629089 148.22244263]
[110.06861115 153.98509216]
[107.15601349 157.85874939]
[106.49714661 172.84426880]
[105.83828735 187.82978821]
[105.17942047 202.81530762]
[104.52056122 217.80084229]
[103.86169434 232.78636169]
[103.20283508 247.77188110]
[112.08906555 263.85906982]
[102.17631531 278.30020142]
[101.84680176 293.29656982]
[101.51729584 308.29293823]
[101.35253143 323.29205322]
[101.35253143 338.29205322]
[101.35253143 353.29205322]
[101.35253143 368.29205322]
[101.35253143 383.29205322]
[101.35253143 398.29205322]
[101.35253143 413.29205322]
[101.35253143 428.29205322]
[101.35253143 443.29205322]
[101.35253143 458.29205322]
[101.35253143 473.29205322]
[101.35253143 488.29205322]
[101.35253143 503.29205322]
[109.08982849 517.09222412]
[101.35253143 529.81945801]
[101.35253143 544.81945801]
[101.35253143 559.81945801]
[101.35253143 574.81945801]
[107.39886475 590.65863037]
] def
/pairs [
[2 141]
[3 140]
[4 139]
[5 138]
[7 136]
[8 135]
[9 134]
[10 133]
[11 132]
[12 131]
[13 130]
[14 129]
[15 128]
[16 127]
[17 126]
[18 125]
[19 124]
[21 123]
[22 122]
[23 121]
[26 119]
[27 118]
[28 117]
[29 116]
[30 115]
[31 114]
[32 113]
[33 110]
[34 109]
[35 108]
[37 106]
[38 105]
[39 104]
[40 103]
[41 102]
[42 101]
[45 100]
[46 99]
[47 98]
[48 97]
[50 93]
[51 92]
[52 91]
[53 90]
[54 89]
[55 88]
[56 87]
[57 86]
[59 85]
[61 84]
[62 83]
[63 82]
[64 81]
[65 80]
[66 79]
[69 78]
[70 77]
[71 76]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
