%!PS-Adobe-3.0 EPSF-3.0
%%Creator: PS_dot.c,v 1.38 2007/02/02 15:18:13 ivo Exp $, ViennaRNA-2.1.9
%%CreationDate: Thu Jul 16 15:13:58 2015
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 66 210 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: -d2 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  72 216 translate
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  72 6 mul size div dup scale
  size xmin sub xmax sub 2 div size ymin sub ymax sub 2 div
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
GUAUCACCGUGAGUUCCCUUCGAACACUUCACGUGGCACUAUUUCAAUGCCUACUGUGAAGUGUUUGGGGGAACUCUCGAUGUCAU\
) def
/coor [
[85.22571564 359.21502686]
[75.14887238 347.53338623]
[73.00988770 332.25500488]
[79.49131012 318.25521851]
[92.52494049 310.00122070]
[92.52494049 295.00122070]
[84.78763580 282.27395630]
[92.52494049 268.47378540]
[92.52494049 253.47378540]
[84.78763580 240.74652100]
[92.52494049 226.94635010]
[92.52494049 211.94635010]
[92.52494049 196.94635010]
[92.52494049 181.94635010]
[92.52494049 166.94635010]
[92.52494049 151.94635010]
[92.52494049 136.94635010]
[92.52494049 121.94634247]
[92.52494049 106.94634247]
[89.31526184 99.33141327]
[92.80552673 91.40725708]
[93.34706116 76.41703033]
[93.88860321 61.42681122]
[94.43013763 46.43658829]
[94.97167206 31.44636917]
[95.51320648 16.45614624]
[96.05474854 1.46592546]
[96.59628296 -13.52429581]
[97.13781738 -28.51451683]
[97.67935181 -43.50473785]
[98.22089386 -58.49496078]
[98.76242828 -73.48518372]
[99.03324127 -88.48273468]
[99.03324127 -103.48273468]
[98.76242828 -118.48029327]
[98.22089386 -133.47052002]
[97.67935181 -148.46073914]
[97.13781738 -163.45095825]
[83.81469727 -171.22900391]
[76.83207703 -184.98568726]
[78.41807556 -200.33131409]
[88.06661987 -212.36914062]
[102.69888306 -217.25793457]
[117.64576721 -213.43771362]
[128.13778687 -202.12748718]
[130.82695007 -186.93630981]
[124.85518646 -172.71162415]
[112.12803650 -163.99249268]
[112.66957855 -149.00227356]
[113.21111298 -134.01205444]
[113.75264740 -119.02182770]
[117.22084045 -112.29663086]
[114.03324127 -103.48273468]
[114.03324127 -88.48273468]
[117.25637817 -81.63671112]
[113.75264740 -72.94364929]
[113.21111298 -57.95342255]
[112.66957855 -42.96320343]
[112.12803650 -27.97298050]
[111.58650208 -12.98275948]
[111.04496765 2.00746179]
[110.50343323 16.99768257]
[109.96189117 31.98790359]
[109.42035675 46.97812653]
[108.87882233 61.96834564]
[108.33728790 76.95857239]
[107.79575348 91.94879150]
[107.52494049 106.94634247]
[107.52494049 121.94634247]
[107.52494049 136.94635010]
[107.52494049 151.94635010]
[107.52494049 166.94635010]
[107.52494049 181.94635010]
[107.52494049 196.94635010]
[107.52494049 211.94635010]
[107.52494049 226.94635010]
[115.26223755 240.74652100]
[107.52494049 253.47378540]
[107.52494049 268.47378540]
[115.26223755 282.27395630]
[107.52494049 295.00122070]
[107.52494049 310.00122070]
[120.55856323 318.25521851]
[127.03998566 332.25500488]
[124.90100861 347.53338623]
[114.82416534 359.21502686]
] def
/pairs [
[5 82]
[6 81]
[8 79]
[9 78]
[11 76]
[12 75]
[13 74]
[14 73]
[15 72]
[16 71]
[17 70]
[18 69]
[19 68]
[21 67]
[22 66]
[23 65]
[24 64]
[25 63]
[26 62]
[27 61]
[28 60]
[29 59]
[30 58]
[31 57]
[32 56]
[33 54]
[34 53]
[35 51]
[36 50]
[37 49]
[38 48]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
