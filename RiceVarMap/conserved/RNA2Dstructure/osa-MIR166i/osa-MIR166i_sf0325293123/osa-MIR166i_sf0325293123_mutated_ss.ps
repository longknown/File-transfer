%!PS-Adobe-3.0 EPSF-3.0
%%Creator: PS_dot.c,v 1.38 2007/02/02 15:18:13 ivo Exp $, ViennaRNA-2.1.9
%%CreationDate: Thu Jul 16 15:13:51 2015
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 66 210 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: -d2 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  72 216 translate
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  72 6 mul size div dup scale
  size xmin sub xmax sub 2 div size ymin sub ymax sub 2 div
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
AGAUAGGUGUUUGGAAUGCAGUUUGAUCCAAGAUCUGCCUAUAUAUAUGGUGUGUAUAUCAUAUCUUGUGAUAUGGGGGAUAUGCAACAAGUGUGUGACAGGGGUAGGUAGAUCUCGGAUCAGGCUUCAUUCCUCACACCAAUAC\
) def
/coor [
[85.14063263 504.68920898]
[73.69583893 494.52676392]
[68.29554749 480.20559692]
[70.18070221 465.01663208]
[78.91812134 452.45016479]
[92.50000000 445.39389038]
[92.50000000 430.39389038]
[92.50000000 415.39389038]
[92.50000000 400.39389038]
[92.50000000 385.39389038]
[81.81912994 375.07620239]
[81.60544586 359.86407471]
[92.50000000 348.73095703]
[92.50000000 333.73095703]
[92.50000000 318.73095703]
[92.50000000 303.73095703]
[92.50000000 288.73095703]
[92.50000000 273.73095703]
[84.76270294 261.00366211]
[92.50000000 247.20350647]
[92.50000000 232.20350647]
[92.50000000 217.20350647]
[92.50000000 202.20350647]
[92.50000000 187.20350647]
[92.50000000 172.20350647]
[92.50000000 157.20350647]
[92.50000000 142.20350647]
[92.50000000 127.20349884]
[92.50000000 112.20349884]
[85.67605591 100.00000000]
[92.50000000 87.79650116]
[92.50000000 72.79650116]
[92.50000000 57.79650116]
[92.50000000 42.79650116]
[92.50000000 27.79650116]
[92.50000000 12.79650021]
[92.50000000 -2.20349932]
[92.50000000 -17.20349884]
[92.50000000 -32.20349884]
[92.50000000 -47.20349884]
[92.50000000 -62.20349884]
[92.50000000 -77.20349884]
[91.37138367 -92.16098022]
[89.12055206 -106.99114227]
[86.86972046 -121.82130432]
[84.61888885 -136.65147400]
[82.36806488 -151.48162842]
[80.11723328 -166.31179810]
[65.91122437 -171.98071289]
[56.51215744 -183.92033386]
[54.36558151 -198.86216736]
[59.94887543 -212.77915955]
[71.66962433 -221.97099304]
[69.41879272 -236.80116272]
[67.16796112 -251.63131714]
[64.91712952 -266.46148682]
[62.66629791 -281.29165649]
[60.41546631 -296.12182617]
[58.16463470 -310.95196533]
[55.91380310 -325.78213501]
[53.02703094 -340.50173950]
[49.50965881 -355.08349609]
[45.99228668 -369.66528320]
[42.47491837 -384.24707031]
[38.95754623 -398.82882690]
[27.27039146 -410.33285522]
[31.65093040 -426.13610840]
[47.59283829 -429.98156738]
[58.69644928 -417.91336060]
[53.53931808 -402.34619141]
[57.05669022 -387.76443481]
[60.57406235 -373.18264771]
[64.09143066 -358.60089111]
[67.60880280 -344.01910400]
[70.00812531 -342.44003296]
[71.90245819 -339.78100586]
[72.86407471 -336.23846436]
[72.54775238 -332.16464233]
[70.74396515 -328.03295898]
[72.99479675 -313.20281982]
[75.24562836 -298.37265015]
[77.49645996 -283.54248047]
[79.74729156 -268.71231079]
[81.99812317 -253.88215637]
[84.24895477 -239.05198669]
[86.49978638 -224.22181702]
[100.42003632 -218.92163086]
[109.88124847 -207.28799438]
[112.26477814 -192.38211060]
[106.83161926 -178.19136047]
[94.94739532 -168.56263733]
[97.19822693 -153.73246765]
[99.44905853 -138.90229797]
[101.69989014 -124.07213593]
[103.95072174 -109.24197388]
[106.20154572 -94.41181183]
[115.45801544 -106.21511078]
[130.09751892 -109.48391724]
[143.49554443 -102.73908234]
[149.58938599 -89.03269958]
[145.62152100 -74.56700897]
[133.38745117 -65.88787079]
[118.42318726 -66.92266083]
[107.50000000 -77.20349884]
[107.50000000 -62.20349884]
[107.50000000 -47.20349884]
[107.50000000 -32.20349884]
[107.50000000 -17.20349884]
[107.50000000 -2.20349932]
[107.50000000 12.79650021]
[107.50000000 27.79650116]
[107.50000000 42.79650116]
[107.50000000 57.79650116]
[107.50000000 72.79650116]
[107.50000000 87.79650116]
[114.32394409 100.00000000]
[107.50000000 112.20349884]
[107.50000000 127.20349884]
[107.50000000 142.20350647]
[107.50000000 157.20350647]
[107.50000000 172.20350647]
[107.50000000 187.20350647]
[107.50000000 202.20350647]
[107.50000000 217.20350647]
[107.50000000 232.20350647]
[107.50000000 247.20350647]
[115.23729706 261.00366211]
[107.50000000 273.73095703]
[107.50000000 288.73095703]
[107.50000000 303.73095703]
[107.50000000 318.73095703]
[107.50000000 333.73095703]
[107.50000000 348.73095703]
[118.39455414 359.86407471]
[118.18087006 375.07620239]
[107.50000000 385.39389038]
[107.50000000 400.39389038]
[107.50000000 415.39389038]
[107.50000000 430.39389038]
[107.50000000 445.39389038]
[121.08187866 452.45016479]
[129.81929016 465.01663208]
[131.70445251 480.20559692]
[126.30416107 494.52676392]
[114.85936737 504.68920898]
] def
/pairs [
[6 140]
[7 139]
[8 138]
[9 137]
[10 136]
[13 133]
[14 132]
[15 131]
[16 130]
[17 129]
[18 128]
[20 126]
[21 125]
[22 124]
[23 123]
[24 122]
[25 121]
[26 120]
[27 119]
[28 118]
[29 117]
[31 115]
[32 114]
[33 113]
[34 112]
[35 111]
[36 110]
[37 109]
[38 108]
[39 107]
[40 106]
[41 105]
[42 104]
[43 96]
[44 95]
[45 94]
[46 93]
[47 92]
[48 91]
[53 86]
[54 85]
[55 84]
[56 83]
[57 82]
[58 81]
[59 80]
[60 79]
[61 74]
[62 73]
[63 72]
[64 71]
[65 70]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
