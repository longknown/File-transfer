%!PS-Adobe-3.0 EPSF-3.0
%%Creator: PS_dot.c,v 1.38 2007/02/02 15:18:13 ivo Exp $, ViennaRNA-2.1.9
%%CreationDate: Thu Jul 16 15:13:51 2015
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 66 210 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: -d2 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  72 216 translate
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  72 6 mul size div dup scale
  size xmin sub xmax sub 2 div size ymin sub ymax sub 2 div
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
AGAUAGGUGUUUGGAAUGCAGUUUGAUCCAAGAUCUGCCUAUAUAUUUGGUGUGUAUAUCAUAUCUUGUGAUAUGGGGGAUAUGCAACAGGUGUGUGACAGGGGUAGGUAGAUCUCGGAUCAGGCUUCAUUCCUCACACCAAUAC\
) def
/coor [
[85.14063263 504.68920898]
[73.69583893 494.52676392]
[68.29554749 480.20559692]
[70.18070221 465.01663208]
[78.91812134 452.45016479]
[92.50000000 445.39389038]
[92.50000000 430.39389038]
[92.50000000 415.39389038]
[92.50000000 400.39389038]
[92.50000000 385.39389038]
[81.81912994 375.07620239]
[81.60544586 359.86407471]
[92.50000000 348.73095703]
[92.50000000 333.73095703]
[92.50000000 318.73095703]
[92.50000000 303.73095703]
[92.50000000 288.73095703]
[92.50000000 273.73095703]
[84.76270294 261.00366211]
[92.50000000 247.20350647]
[92.50000000 232.20350647]
[92.50000000 217.20350647]
[92.50000000 202.20350647]
[92.50000000 187.20350647]
[92.50000000 172.20350647]
[92.50000000 157.20350647]
[92.50000000 142.20350647]
[92.50000000 127.20349884]
[92.50000000 112.20349884]
[85.67605591 100.00000000]
[92.50000000 87.79650116]
[92.50000000 72.79650116]
[92.50000000 57.79650116]
[92.50000000 42.79650116]
[92.50000000 27.79650116]
[92.50000000 12.79650021]
[92.50000000 -2.20349932]
[92.50000000 -17.20349884]
[92.50000000 -32.20349884]
[92.50000000 -47.20349884]
[92.50000000 -62.20349884]
[92.50000000 -77.20349884]
[91.04981995 -92.13323212]
[88.16304779 -106.85282898]
[85.27627563 -121.57242584]
[82.38949585 -136.29202271]
[79.50272369 -151.01162720]
[76.61595154 -165.73121643]
[73.72917938 -180.45082092]
[63.48064804 -192.50395203]
[68.62393188 -206.48237610]
[65.73715210 -221.20196533]
[62.85037994 -235.92156982]
[59.96360779 -250.64115906]
[57.07683563 -265.36074829]
[54.19005966 -280.08035278]
[51.30328751 -294.79995728]
[37.36114502 -309.29327393]
[44.23203659 -327.32220459]
[40.71466446 -341.90399170]
[37.19729614 -356.48574829]
[33.67992401 -371.06753540]
[30.16255379 -385.64929199]
[26.64518166 -400.23107910]
[23.12781143 -414.81283569]
[11.44065666 -426.31686401]
[15.82119560 -442.12011719]
[31.76310539 -445.96557617]
[42.86671448 -433.89736938]
[37.70958328 -418.33023071]
[41.22695541 -403.74844360]
[44.74432755 -389.16668701]
[48.26169586 -374.58489990]
[51.77906799 -360.00314331]
[55.29644012 -345.42135620]
[58.81380844 -330.83956909]
[68.04989624 -326.26550293]
[73.32002258 -317.15249634]
[72.65090179 -306.42568970]
[66.02288055 -297.68673706]
[68.90966034 -282.96713257]
[71.79643250 -268.24752808]
[74.68320465 -253.52793884]
[77.56997681 -238.80833435]
[80.45674896 -224.08874512]
[83.34352875 -209.36914062]
[93.38557434 -198.36885071]
[88.44877625 -183.33758545]
[91.33554840 -168.61799622]
[94.22232056 -153.89839172]
[97.10909271 -139.17880249]
[99.99587250 -124.45920563]
[102.88264465 -109.73960114]
[105.76941681 -95.02000427]
[113.22693634 -108.03482056]
[126.46553802 -115.08745575]
[141.42723083 -114.01608276]
[153.52586365 -105.14912415]
[159.05288696 -91.20452118]
[156.31413269 -76.45666504]
[146.14909363 -65.42616272]
[131.67362976 -61.49415207]
[117.32482910 -65.86589813]
[107.50000000 -77.20349884]
[107.50000000 -62.20349884]
[107.50000000 -47.20349884]
[107.50000000 -32.20349884]
[107.50000000 -17.20349884]
[107.50000000 -2.20349932]
[107.50000000 12.79650021]
[107.50000000 27.79650116]
[107.50000000 42.79650116]
[107.50000000 57.79650116]
[107.50000000 72.79650116]
[107.50000000 87.79650116]
[114.32394409 100.00000000]
[107.50000000 112.20349884]
[107.50000000 127.20349884]
[107.50000000 142.20350647]
[107.50000000 157.20350647]
[107.50000000 172.20350647]
[107.50000000 187.20350647]
[107.50000000 202.20350647]
[107.50000000 217.20350647]
[107.50000000 232.20350647]
[107.50000000 247.20350647]
[115.23729706 261.00366211]
[107.50000000 273.73095703]
[107.50000000 288.73095703]
[107.50000000 303.73095703]
[107.50000000 318.73095703]
[107.50000000 333.73095703]
[107.50000000 348.73095703]
[118.39455414 359.86407471]
[118.18087006 375.07620239]
[107.50000000 385.39389038]
[107.50000000 400.39389038]
[107.50000000 415.39389038]
[107.50000000 430.39389038]
[107.50000000 445.39389038]
[121.08187866 452.45016479]
[129.81929016 465.01663208]
[131.70445251 480.20559692]
[126.30416107 494.52676392]
[114.85936737 504.68920898]
] def
/pairs [
[6 140]
[7 139]
[8 138]
[9 137]
[10 136]
[13 133]
[14 132]
[15 131]
[16 130]
[17 129]
[18 128]
[20 126]
[21 125]
[22 124]
[23 123]
[24 122]
[25 121]
[26 120]
[27 119]
[28 118]
[29 117]
[31 115]
[32 114]
[33 113]
[34 112]
[35 111]
[36 110]
[37 109]
[38 108]
[39 107]
[40 106]
[41 105]
[42 104]
[43 94]
[44 93]
[45 92]
[46 91]
[47 90]
[48 89]
[49 88]
[51 86]
[52 85]
[53 84]
[54 83]
[55 82]
[56 81]
[57 80]
[59 76]
[60 75]
[61 74]
[62 73]
[63 72]
[64 71]
[65 70]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
