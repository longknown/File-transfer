%!PS-Adobe-3.0 EPSF-3.0
%%Creator: PS_dot.c,v 1.38 2007/02/02 15:18:13 ivo Exp $, ViennaRNA-2.1.9
%%CreationDate: Thu Jul 16 15:14:00 2015
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 66 210 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: -d2 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  72 216 translate
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  72 6 mul size div dup scale
  size xmin sub xmax sub 2 div size ymin sub ymax sub 2 div
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
UCCCUCCAUCCCAUAGUAUAAGGGAUUUGGGAAUGAUGUGACAUAUCCUAGUAUAAUGAAUCUGGACAAACCGUCUGUCCAAAUUCAUUGUCCUAGUAUGUGUCACAUAUACUCAAAAUCCCUUAUAUUAUGGGACGGAAGGGA\
) def
/coor [
[102.05918121 558.93078613]
[102.05918121 543.93078613]
[102.05918121 528.93078613]
[102.05918121 513.93078613]
[102.05918121 498.93078613]
[101.89669037 483.93167114]
[101.57171631 468.93518066]
[93.56050873 456.37850952]
[100.99701691 442.41397095]
[100.67205048 427.41748047]
[100.34708405 412.42098999]
[100.02211761 397.42453003]
[99.69715118 382.42803955]
[99.37218475 367.43157959]
[99.04721832 352.43508911]
[98.72225189 337.43859863]
[98.39728546 322.44213867]
[98.07231140 307.44564819]
[97.74734497 292.44915771]
[97.42237854 277.45269775]
[97.09741211 262.45620728]
[96.77244568 247.45973206]
[96.44747925 232.46325684]
[96.12251282 217.46676636]
[95.79754639 202.47029114]
[95.47257996 187.47381592]
[95.14761353 172.47732544]
[94.82264709 157.48085022]
[94.33524323 142.48876953]
[93.68546295 127.50285339]
[93.03568268 112.51693726]
[85.68949890 100.62049866]
[91.97840118 88.13284302]
[91.32862091 73.14692688]
[90.67884064 58.16100693]
[87.15881348 49.64990616]
[90.18087769 42.84411240]
[89.85591125 27.84763527]
[89.53093719 12.85115528]
[89.20597076 -2.14532447]
[88.88100433 -17.14180374]
[88.55603790 -32.13828278]
[88.23107147 -47.13476181]
[87.90610504 -62.13124084]
[87.58113861 -77.12772369]
[87.25617218 -92.12419891]
[79.22171783 -105.75350952]
[86.68147278 -118.64541626]
[86.35650635 -133.64189148]
[86.03153229 -148.63838196]
[85.70656586 -163.63485718]
[77.67211151 -177.26416016]
[85.13186646 -190.15608215]
[84.80690002 -205.15255737]
[84.48193359 -220.14903259]
[84.15696716 -235.14550781]
[83.83200073 -250.14199829]
[83.50703430 -265.13845825]
[83.18206787 -280.13494873]
[82.85709381 -295.13143921]
[82.53212738 -310.12789917]
[74.49767303 -323.75723267]
[81.95742798 -336.64913940]
[81.63246155 -351.64559937]
[81.30749512 -366.64208984]
[80.98252869 -381.63858032]
[80.65756226 -396.63504028]
[80.33259583 -411.63153076]
[68.02610016 -421.27954102]
[64.85101318 -436.59140015]
[72.30651093 -450.33731079]
[86.87232971 -456.02685547]
[101.67093658 -450.97360229]
[109.71488953 -437.56356812]
[107.20606995 -422.12857056]
[95.32907104 -411.95648193]
[95.65403748 -396.96002197]
[95.97900391 -381.96353149]
[96.30397034 -366.96704102]
[96.62893677 -351.97058105]
[96.95391083 -336.97409058]
[104.96511841 -324.41744995]
[97.52861023 -310.45288086]
[97.85357666 -295.45639038]
[98.17854309 -280.45993042]
[98.50350952 -265.46343994]
[98.82847595 -250.46696472]
[99.15344238 -235.47047424]
[99.47840881 -220.47399902]
[99.80337524 -205.47752380]
[100.12834930 -190.48104858]
[108.13955688 -177.92437744]
[100.70304871 -163.95982361]
[101.02801514 -148.96334839]
[101.35298157 -133.96687317]
[101.67794800 -118.97038269]
[109.68916321 -106.41372681]
[102.25265503 -92.44916534]
[102.57762146 -77.45269012]
[102.90258789 -62.45620728]
[103.22755432 -47.45972824]
[103.55252075 -32.46324921]
[103.87748718 -17.46677017]
[104.20245361 -2.47029138]
[104.52742004 12.52618790]
[104.85238647 27.52266693]
[105.17735291 42.51914597]
[105.66475677 57.51122665]
[106.31453705 72.49714661]
[106.96431732 87.48306274]
[114.31050110 99.37950134]
[108.02159882 111.86715698]
[108.67137909 126.85307312]
[109.32115936 141.83898926]
[112.84118652 150.35009766]
[109.81912231 157.15588379]
[110.14408875 172.15235901]
[110.46906281 187.14884949]
[110.79402924 202.14532471]
[111.11899567 217.14179993]
[111.44396210 232.13829041]
[111.76892853 247.13476562]
[112.09389496 262.13125610]
[112.41886139 277.12771606]
[112.74382782 292.12420654]
[113.06879425 307.12066650]
[113.39376068 322.11715698]
[113.71872711 337.11364746]
[114.04369354 352.11010742]
[114.36865997 367.10659790]
[114.69362640 382.10308838]
[115.01859283 397.09954834]
[115.34355927 412.09603882]
[115.66853333 427.09252930]
[115.99349976 442.08898926]
[124.02795410 455.71829224]
[116.56819916 468.61019897]
[116.89316559 483.60668945]
[120.22798157 492.19204712]
[117.05918121 498.93078613]
[117.05918121 513.93078613]
[117.05918121 528.93078613]
[117.05918121 543.93078613]
[117.05918121 558.93078613]
] def
/pairs [
[1 144]
[2 143]
[3 142]
[4 141]
[5 140]
[6 138]
[7 137]
[9 135]
[10 134]
[11 133]
[12 132]
[13 131]
[14 130]
[15 129]
[16 128]
[17 127]
[18 126]
[19 125]
[20 124]
[21 123]
[22 122]
[23 121]
[24 120]
[25 119]
[26 118]
[27 117]
[28 116]
[29 114]
[30 113]
[31 112]
[33 110]
[34 109]
[35 108]
[37 107]
[38 106]
[39 105]
[40 104]
[41 103]
[42 102]
[43 101]
[44 100]
[45 99]
[46 98]
[48 96]
[49 95]
[50 94]
[51 93]
[53 91]
[54 90]
[55 89]
[56 88]
[57 87]
[58 86]
[59 85]
[60 84]
[61 83]
[63 81]
[64 80]
[65 79]
[66 78]
[67 77]
[68 76]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
