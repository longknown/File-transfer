%!PS-Adobe-3.0 EPSF-3.0
%%Creator: PS_dot.c,v 1.38 2007/02/02 15:18:13 ivo Exp $, ViennaRNA-2.1.9
%%CreationDate: Thu Jul 16 15:13:49 2015
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 66 210 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: -d2 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  72 216 translate
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  72 6 mul size div dup scale
  size xmin sub xmax sub 2 div size ymin sub ymax sub 2 div
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
UAUUGUUUUGUUAUAAAUGUAAUACUACCUCCGUCCCAAAAUAUAGCCAUUUUUAGCUAUGAAUCUAGACAUUGUUUUUAGCUAUGAAUCUAGACAUACAAUGUCCAAAUUCAUAACUAAAAAUGCUUAUAUUUUGGAACGGAGUGAGUAUUAAAUUUGUAGUUUUGUGAUA\
) def
/coor [
[85.04424286 730.19189453]
[71.19830322 724.17584229]
[59.48964310 714.64642334]
[50.78712082 702.31079102]
[45.73651886 688.08422852]
[44.71262741 673.02258301]
[47.79142761 658.24340820]
[54.74444962 644.84350586]
[65.05573273 633.81713867]
[77.96011353 625.98266602]
[92.50000000 621.92132568]
[92.50000000 606.92132568]
[92.50000000 591.92132568]
[92.50000000 576.92132568]
[92.50000000 561.92132568]
[92.50000000 546.92132568]
[92.50000000 531.92132568]
[92.50000000 516.92132568]
[84.76270294 504.19406128]
[92.50000000 490.39389038]
[92.50000000 475.39389038]
[92.50000000 460.39389038]
[92.50000000 445.39389038]
[92.50000000 430.39389038]
[92.50000000 415.39389038]
[92.50000000 400.39389038]
[81.81912994 390.07620239]
[81.60544586 374.86407471]
[92.50000000 363.73095703]
[92.50000000 348.73095703]
[92.50000000 333.73095703]
[92.50000000 318.73095703]
[92.50000000 303.73095703]
[92.50000000 288.73095703]
[84.76270294 276.00366211]
[92.50000000 262.20349121]
[92.50000000 247.20350647]
[92.50000000 232.20350647]
[92.50000000 217.20350647]
[92.50000000 202.20350647]
[92.50000000 187.20350647]
[92.50000000 172.20350647]
[92.50000000 157.20350647]
[92.50000000 142.20350647]
[92.50000000 127.20349884]
[92.50000000 112.20349884]
[85.67605591 100.00000000]
[92.50000000 87.79650116]
[92.50000000 72.79650116]
[92.50000000 57.79650116]
[92.50000000 42.79650116]
[92.50000000 27.79650116]
[92.50000000 12.79650021]
[92.50000000 -2.20349932]
[92.50000000 -17.20349884]
[92.50000000 -32.20349884]
[84.76270294 -46.00367355]
[92.50000000 -58.73094177]
[92.50000000 -73.73094177]
[92.50000000 -88.73094177]
[92.50000000 -103.73094177]
[92.50000000 -118.73094177]
[92.50000000 -133.73094177]
[92.50000000 -148.73094177]
[80.11502075 -157.89164734]
[75.55226898 -172.41868591]
[80.36157990 -186.67822266]
[92.50000000 -195.26873779]
[92.50000000 -210.26873779]
[92.50000000 -225.26873779]
[92.50000000 -240.26873779]
[92.50000000 -255.26873779]
[92.50000000 -270.26873779]
[92.50000000 -285.26873779]
[92.50000000 -300.26873779]
[81.62551880 -317.21466064]
[91.92591858 -333.55441284]
[91.38124847 -348.54452515]
[90.83658600 -363.53463745]
[90.29192352 -378.52474976]
[89.74725342 -393.51486206]
[76.79611206 -402.06164551]
[71.37362671 -416.60040283]
[75.56484985 -431.54074097]
[87.75817108 -441.13775635]
[103.26501465 -441.70117188]
[116.12267303 -433.01440430]
[121.38713074 -418.41766357]
[117.03408051 -403.52368164]
[104.73736572 -394.05950928]
[105.28202820 -379.06939697]
[105.82669067 -364.07928467]
[106.37136078 -349.08920288]
[106.91602325 -334.09909058]
[115.02535248 -327.81057739]
[118.38690948 -317.88229370]
[115.65401459 -307.53518677]
[107.50000000 -300.26873779]
[107.50000000 -285.26873779]
[107.50000000 -270.26873779]
[107.50000000 -255.26873779]
[107.50000000 -240.26873779]
[107.50000000 -225.26873779]
[107.50000000 -210.26873779]
[107.50000000 -195.26873779]
[119.63842010 -186.67822266]
[124.44773102 -172.41868591]
[119.88497925 -157.89164734]
[107.50000000 -148.73094177]
[107.50000000 -133.73094177]
[107.50000000 -118.73094177]
[107.50000000 -103.73094177]
[107.50000000 -88.73094177]
[107.50000000 -73.73094177]
[107.50000000 -58.73094177]
[115.23729706 -46.00367355]
[107.50000000 -32.20349884]
[107.50000000 -17.20349884]
[107.50000000 -2.20349932]
[107.50000000 12.79650021]
[107.50000000 27.79650116]
[107.50000000 42.79650116]
[107.50000000 57.79650116]
[107.50000000 72.79650116]
[107.50000000 87.79650116]
[114.32394409 100.00000000]
[107.50000000 112.20349884]
[107.50000000 127.20349884]
[107.50000000 142.20350647]
[107.50000000 157.20350647]
[107.50000000 172.20350647]
[107.50000000 187.20350647]
[107.50000000 202.20350647]
[107.50000000 217.20350647]
[107.50000000 232.20350647]
[107.50000000 247.20350647]
[107.50000000 262.20349121]
[115.23729706 276.00366211]
[107.50000000 288.73095703]
[107.50000000 303.73095703]
[107.50000000 318.73095703]
[107.50000000 333.73095703]
[107.50000000 348.73095703]
[107.50000000 363.73095703]
[118.39455414 374.86407471]
[118.18087006 390.07620239]
[107.50000000 400.39389038]
[107.50000000 415.39389038]
[107.50000000 430.39389038]
[107.50000000 445.39389038]
[107.50000000 460.39389038]
[107.50000000 475.39389038]
[107.50000000 490.39389038]
[115.23729706 504.19406128]
[107.50000000 516.92132568]
[107.50000000 531.92132568]
[107.50000000 546.92132568]
[107.50000000 561.92132568]
[107.50000000 576.92132568]
[107.50000000 591.92132568]
[107.50000000 606.92132568]
[107.50000000 621.92132568]
[122.03988647 625.98266602]
[134.94427490 633.81713867]
[145.25555420 644.84350586]
[152.20857239 658.24340820]
[155.28736877 673.02258301]
[154.26348877 688.08422852]
[149.21287537 702.31079102]
[140.51036072 714.64642334]
[128.80169678 724.17584229]
[114.95575714 730.19189453]
] def
/pairs [
[11 162]
[12 161]
[13 160]
[14 159]
[15 158]
[16 157]
[17 156]
[18 155]
[20 153]
[21 152]
[22 151]
[23 150]
[24 149]
[25 148]
[26 147]
[29 144]
[30 143]
[31 142]
[32 141]
[33 140]
[34 139]
[36 137]
[37 136]
[38 135]
[39 134]
[40 133]
[41 132]
[42 131]
[43 130]
[44 129]
[45 128]
[46 127]
[48 125]
[49 124]
[50 123]
[51 122]
[52 121]
[53 120]
[54 119]
[55 118]
[56 117]
[58 115]
[59 114]
[60 113]
[61 112]
[62 111]
[63 110]
[64 109]
[68 105]
[69 104]
[70 103]
[71 102]
[72 101]
[73 100]
[74 99]
[75 98]
[77 94]
[78 93]
[79 92]
[80 91]
[81 90]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
