%!PS-Adobe-3.0 EPSF-3.0
%%Creator: PS_dot.c,v 1.38 2007/02/02 15:18:13 ivo Exp $, ViennaRNA-2.1.9
%%CreationDate: Thu Jul 16 15:13:58 2015
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 66 210 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: -d2 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  72 216 translate
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  72 6 mul size div dup scale
  size xmin sub xmax sub 2 div size ymin sub ymax sub 2 div
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
UUGUUACCUGGAGUUUCCUCAACACACUUCACAUCUGCUAGGCCCUAUUACAAUUGCGCAAUGUGGAGUCUGCAAUUGGUAGUAAAGUGUUUGGGGGAACUCUAGGUGGCAC\
) def
/coor [
[82.79161072 603.02758789]
[88.83794403 587.18841553]
[88.83794403 572.18841553]
[88.83794403 557.18841553]
[88.83794403 542.18841553]
[88.83794403 527.18841553]
[88.83794403 512.18841553]
[88.83794403 497.18844604]
[88.83794403 482.18844604]
[88.83794403 467.18844604]
[88.83794403 452.18844604]
[88.83794403 437.18844604]
[88.83794403 422.18844604]
[88.83794403 407.18844604]
[88.83794403 392.18844604]
[88.83794403 377.18844604]
[88.83794403 362.18844604]
[88.83794403 347.18844604]
[88.83794403 332.18844604]
[88.83794403 317.18844604]
[88.83794403 302.18844604]
[88.83794403 287.18844604]
[85.64613342 280.40429688]
[89.05224609 271.77291870]
[89.46922302 256.77871704]
[89.88619232 241.78450012]
[90.30316162 226.79029846]
[90.72013855 211.79609680]
[91.13710785 196.80189514]
[83.75659180 183.86445618]
[91.87451935 170.28469849]
[92.29149628 155.29049683]
[92.50000000 140.29194641]
[92.50000000 125.29194641]
[92.50000000 110.29194641]
[91.87464142 95.30498505]
[90.62501526 80.35713196]
[89.37538910 65.40927124]
[85.49485016 56.98052979]
[88.30470276 50.02948761]
[87.47108459 35.05266953]
[86.63745880 20.07584953]
[85.80384064 5.09903193]
[84.76211548 -9.86475086]
[83.51248932 -24.81260872]
[82.05519867 -39.74164963]
[80.39053345 -54.64899445]
[78.72586823 -69.55633545]
[77.06120300 -84.46368408]
[67.84018707 -97.31993866]
[74.11724854 -110.82726288]
[61.61583710 -120.49629974]
[59.69594955 -136.18354797]
[69.49662018 -148.58203125]
[85.20328522 -150.33595276]
[97.49745941 -140.40473938]
[99.08522034 -124.68041229]
[89.02458954 -112.49192810]
[98.12654114 -100.70194244]
[91.96854401 -86.12834930]
[93.63320923 -71.22100067]
[95.29787445 -56.31365967]
[96.96254730 -41.40631866]
[100.88752747 -35.01829910]
[98.46034241 -26.06223488]
[99.70996857 -11.11437798]
[103.45586395 -4.61972094]
[100.78065491 4.26541042]
[101.61428070 19.24222946]
[102.44789886 34.21904755]
[103.28152466 49.19586563]
[104.32324982 64.15964508]
[105.57287598 79.10750580]
[106.82250214 94.05535889]
[109.51836395 97.03164673]
[110.82347870 101.21898651]
[110.21286774 105.93736267]
[107.50000000 110.29194641]
[107.50000000 125.29194641]
[107.50000000 140.29194641]
[110.66486359 149.01467896]
[107.28569794 155.70747375]
[106.86872864 170.70167542]
[114.21941376 184.71159363]
[106.13130951 197.21887207]
[105.71434021 212.21307373]
[105.29737091 227.20727539]
[104.88039398 242.20147705]
[104.46342468 257.19567871]
[104.04645538 272.18988037]
[103.83794403 287.18844604]
[103.83794403 302.18844604]
[103.83794403 317.18844604]
[103.83794403 332.18844604]
[103.83794403 347.18844604]
[103.83794403 362.18844604]
[103.83794403 377.18844604]
[103.83794403 392.18844604]
[103.83794403 407.18844604]
[103.83794403 422.18844604]
[103.83794403 437.18844604]
[103.83794403 452.18844604]
[103.83794403 467.18844604]
[103.83794403 482.18844604]
[103.83794403 497.18844604]
[103.83794403 512.18841553]
[103.83794403 527.18841553]
[103.83794403 542.18841553]
[103.83794403 557.18841553]
[103.83794403 572.18841553]
[103.83794403 587.18841553]
[109.88428497 603.02758789]
] def
/pairs [
[2 111]
[3 110]
[4 109]
[5 108]
[6 107]
[7 106]
[8 105]
[9 104]
[10 103]
[11 102]
[12 101]
[13 100]
[14 99]
[15 98]
[16 97]
[17 96]
[18 95]
[19 94]
[20 93]
[21 92]
[22 91]
[24 90]
[25 89]
[26 88]
[27 87]
[28 86]
[29 85]
[31 83]
[32 82]
[33 80]
[34 79]
[35 78]
[36 74]
[37 73]
[38 72]
[40 71]
[41 70]
[42 69]
[43 68]
[44 66]
[45 65]
[46 63]
[47 62]
[48 61]
[49 60]
[51 58]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
