%!PS-Adobe-3.0 EPSF-3.0
%%Creator: PS_dot.c,v 1.38 2007/02/02 15:18:13 ivo Exp $, ViennaRNA-2.1.9
%%CreationDate: Thu Jul 16 15:13:57 2015
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 66 210 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: -d2 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  72 216 translate
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  72 6 mul size div dup scale
  size xmin sub xmax sub 2 div size ymin sub ymax sub 2 div
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
UGGGGAAGCAUCCAAAGGGAUCGCAUUGAUCCUUCAUCGCUCUCGCUCGCUUCCAUGGCGGUCGUCGUCUACAAGCAGCUUGACGGAUCAUGCGAUCCUUUUGGAGGCUUCCUCU\
) def
/coor [
[82.70100403 618.49780273]
[88.74734497 602.65863037]
[88.74734497 587.65863037]
[88.74734497 572.65863037]
[88.74734497 557.65863037]
[88.74734497 542.65863037]
[88.74734497 527.65863037]
[88.74734497 512.65863037]
[88.74734497 497.65866089]
[81.01004791 484.93139648]
[88.74734497 471.13122559]
[88.74734497 456.13122559]
[88.74734497 441.13122559]
[88.74734497 426.13122559]
[88.74734497 411.13122559]
[88.74734497 396.13122559]
[88.74734497 381.13122559]
[88.74734497 366.13122559]
[88.74734497 351.13122559]
[88.74734497 336.13122559]
[88.74734497 321.13122559]
[88.74734497 306.13122559]
[88.74734497 291.13122559]
[88.74734497 276.13122559]
[88.74734497 261.13122559]
[88.74734497 246.13121033]
[85.55823517 239.35240173]
[88.95596313 230.72639465]
[89.36215210 215.73190308]
[89.76834106 200.73739624]
[90.17453003 185.74290466]
[90.58071899 170.74839783]
[83.19090271 157.81626892]
[91.29907227 144.23068237]
[91.70526123 129.23617554]
[92.11145020 114.24168396]
[84.58692932 105.24328613]
[85.06331635 93.52310944]
[93.29331207 85.16506958]
[94.10539246 70.18707275]
[94.91748047 55.20907211]
[95.52667236 40.22144699]
[95.93286133 25.22694778]
[94.51314545 10.29428387]
[91.28858948 -4.35502386]
[80.76555634 -16.16926575]
[85.58597565 -30.26227188]
[82.36141968 -44.91157913]
[79.13686371 -59.56088638]
[75.91230774 -74.21019745]
[72.68775177 -88.85950470]
[59.99895096 -98.67652893]
[59.90695953 -114.71932220]
[72.48233795 -124.68122101]
[88.07833099 -120.92031097]
[94.73103333 -106.32164001]
[87.33705902 -92.08406067]
[90.56161499 -77.43475342]
[93.78617096 -62.78544617]
[97.01072693 -48.13613510]
[100.23528290 -33.48682785]
[110.52767944 -22.72040367]
[105.93789673 -7.57958078]
[109.16246033 7.06972790]
[116.79803467 -5.84142828]
[130.11439514 -12.74609470]
[145.06637573 -11.54681015]
[157.11195374 -2.60788727]
[162.59196472 11.35525799]
[159.84173584 26.10097885]
[149.69671631 37.14990234]
[135.23870850 41.14564514]
[120.85968018 36.87440109]
[110.92736053 25.63313866]
[110.52117157 40.62763596]
[113.52554321 47.49032211]
[109.89547729 56.02115250]
[109.08339691 70.99915314]
[108.27130890 85.97715759]
[116.26706696 100.66120148]
[107.10594940 114.64787292]
[106.69976044 129.64237976]
[106.29357147 144.63687134]
[113.65433502 158.64151001]
[105.57522583 171.15458679]
[105.16902924 186.14909363]
[104.76284027 201.14358521]
[104.35665131 216.13809204]
[103.95046234 231.13258362]
[103.74734497 246.13121033]
[103.74734497 261.13122559]
[103.74734497 276.13122559]
[103.74734497 291.13122559]
[103.74734497 306.13122559]
[103.74734497 321.13122559]
[103.74734497 336.13122559]
[103.74734497 351.13122559]
[103.74734497 366.13122559]
[103.74734497 381.13122559]
[103.74734497 396.13122559]
[103.74734497 411.13122559]
[103.74734497 426.13122559]
[103.74734497 441.13122559]
[103.74734497 456.13122559]
[103.74734497 471.13122559]
[111.48464203 484.93139648]
[103.74734497 497.65866089]
[103.74734497 512.65863037]
[103.74734497 527.65863037]
[103.74734497 542.65863037]
[103.74734497 557.65863037]
[103.74734497 572.65863037]
[103.74734497 587.65863037]
[103.74734497 602.65863037]
[109.79368591 618.49780273]
] def
/pairs [
[2 114]
[3 113]
[4 112]
[5 111]
[6 110]
[7 109]
[8 108]
[9 107]
[11 105]
[12 104]
[13 103]
[14 102]
[15 101]
[16 100]
[17 99]
[18 98]
[19 97]
[20 96]
[21 95]
[22 94]
[23 93]
[24 92]
[25 91]
[26 90]
[28 89]
[29 88]
[30 87]
[31 86]
[32 85]
[34 83]
[35 82]
[36 81]
[39 79]
[40 78]
[41 77]
[42 75]
[43 74]
[44 64]
[45 63]
[47 61]
[48 60]
[49 59]
[50 58]
[51 57]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
