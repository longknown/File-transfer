%!PS-Adobe-3.0 EPSF-3.0
%%Creator: PS_dot.c,v 1.38 2007/02/02 15:18:13 ivo Exp $, ViennaRNA-2.1.9
%%CreationDate: Thu Jul 16 15:13:56 2015
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 66 210 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: -d2 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  72 216 translate
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  72 6 mul size div dup scale
  size xmin sub xmax sub 2 div size ymin sub ymax sub 2 div
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
GGUGAGCCAGGAAGAGGAAGAGAGACUCUAAGAGCAGUAGGAAUGGGAACAUGAAGGAAAGCCAAAUUAAGCUCUAACCUCUGGUAUUGGAGAUUUGGUCUGAUGAUUUUCCUGAUGCCUCCCAUUCCUAUAGUUCUUAGGUGCUCGUUCCUCUUACUUUCAGCUAACACC\
) def
/coor [
[116.69413757 470.69476318]
[116.69413757 455.69476318]
[116.69413757 440.69476318]
[116.69413757 425.69476318]
[116.42017365 410.69726562]
[115.87234497 395.70727539]
[115.32451630 380.71728516]
[103.86157227 365.17184448]
[113.47071838 347.47854614]
[112.37578583 332.51858521]
[111.28086090 317.55859375]
[110.04935455 302.60922241]
[108.68137360 287.67172241]
[107.31340027 272.73425293]
[105.94541931 257.79675293]
[104.57744598 242.85926819]
[103.20947266 227.92176819]
[101.84149170 212.98428345]
[100.47351837 198.04678345]
[91.36614990 190.05041504]
[90.12380219 177.59124756]
[97.95867157 167.31506348]
[96.86374664 152.35508728]
[95.76881409 137.39509583]
[94.53730774 122.44573975]
[93.16933441 107.50824738]
[89.34416199 100.37666321]
[91.91533661 92.28584290]
[90.82040405 77.32585907]
[89.72547913 62.36587143]
[88.63054657 47.40588760]
[87.53561401 32.44590378]
[86.44068909 17.48591995]
[85.34575653 2.52593541]
[84.25082397 -12.43404865]
[75.52681732 -25.63261986]
[82.31444550 -38.89072418]
[81.21952057 -53.85070801]
[80.12458801 -68.81069183]
[79.02965546 -83.77067566]
[77.93473053 -98.73065948]
[76.83979797 -113.69064331]
[75.74487305 -128.65063477]
[74.64994049 -143.61061096]
[73.55500793 -158.57060242]
[72.46008301 -173.53057861]
[71.36515045 -188.49057007]
[70.27021790 -203.45054626]
[59.56998062 -218.41580200]
[67.77787018 -233.90922546]
[66.40989685 -248.84671021]
[65.04191589 -263.78421021]
[55.63100433 -272.63970947]
[54.81771088 -285.13421631]
[62.49372482 -294.51318359]
[61.39879608 -309.47317505]
[60.30386734 -324.43313599]
[59.20893478 -339.39312744]
[58.11400604 -354.35311890]
[57.01907730 -369.31311035]
[54.83506012 -384.15325928]
[51.57360458 -398.79440308]
[48.31215286 -413.43551636]
[45.05070114 -428.07666016]
[41.78924942 -442.71780396]
[38.52779388 -457.35894775]
[35.26634216 -472.00009155]
[32.15375519 -475.14688110]
[30.40362549 -478.76199341]
[29.99421120 -482.35214233]
[30.74343681 -485.48318481]
[32.34277725 -487.82800293]
[30.15876007 -502.66815186]
[27.97474289 -517.50830078]
[25.79072571 -532.34844971]
[23.60670853 -547.18859863]
[21.15201378 -561.98638916]
[18.42745972 -576.73687744]
[15.70290756 -591.48736572]
[6.88017464 -605.96478271]
[18.34943771 -618.45043945]
[33.52218628 -610.88580322]
[30.45339203 -594.21191406]
[33.17794418 -579.46142578]
[35.90250015 -564.71093750]
[39.28931427 -561.29620361]
[40.54362869 -555.70568848]
[38.44685745 -549.37261963]
[40.63087463 -534.53247070]
[42.81489182 -519.69232178]
[44.99891281 -504.85217285]
[47.18292999 -490.01202393]
[49.90748215 -475.26153564]
[53.16893387 -460.62039185]
[56.43038559 -445.97924805]
[59.69183731 -431.33810425]
[62.95329285 -416.69699097]
[66.21474457 -402.05584717]
[69.47619629 -387.41470337]
[76.92723846 -400.43322754]
[90.54884338 -406.71429443]
[105.28775024 -403.92782593]
[115.67623138 -393.10748291]
[117.86042023 -378.26736450]
[111.03005219 -364.91275024]
[97.71900940 -357.99783325]
[82.86533356 -360.08786011]
[71.97905731 -370.40802002]
[73.07398987 -355.44805908]
[74.16892242 -340.48806763]
[75.26384735 -325.52807617]
[76.35877991 -310.56808472]
[77.45371246 -295.60812378]
[88.08639526 -281.66674805]
[79.97940826 -265.15219116]
[81.34738922 -250.21469116]
[82.71536255 -235.27720642]
[91.82273102 -227.28083801]
[93.06507874 -214.82167053]
[85.23020172 -204.54548645]
[86.32513428 -189.58549500]
[87.42006683 -174.62551880]
[88.51499176 -159.66552734]
[89.60992432 -144.70555115]
[90.70485687 -129.74555969]
[91.79978180 -114.78557587]
[92.89471436 -99.82559204]
[93.98963928 -84.86560822]
[95.08457184 -69.90562439]
[96.17950439 -54.94564056]
[97.27442932 -39.98565674]
[105.92012024 -27.85712242]
[99.21080780 -13.52897835]
[100.30574036 1.43100572]
[101.40067291 16.39098930]
[102.49559784 31.35097504]
[103.59053040 46.31095886]
[104.68546295 61.27094269]
[105.78038788 76.23092651]
[106.87532043 91.19091034]
[108.10682678 106.14027405]
[109.47480011 121.07776642]
[113.38640594 129.37406921]
[110.72879791 136.30017090]
[111.82373047 151.26016235]
[112.91865540 166.22013855]
[123.61889648 181.18537903]
[115.41100311 196.67881775]
[116.77898407 211.61630249]
[118.14695740 226.55380249]
[119.51493835 241.49128723]
[120.88291168 256.42877197]
[122.25089264 271.36627197]
[123.61886597 286.30377197]
[124.98684692 301.24124146]
[128.89845276 309.53753662]
[126.24084473 316.46365356]
[127.33576965 331.42364502]
[128.43070984 346.38363647]
[137.09445190 353.03646851]
[140.57510376 363.15811157]
[137.94554138 373.30630493]
[130.31451416 380.16946411]
[130.86233521 395.15945435]
[131.41017151 410.14944458]
[134.62237549 415.99627686]
[134.40437317 421.72167969]
[131.69413757 425.69476318]
[131.69413757 440.69476318]
[131.69413757 455.69476318]
[131.69413757 470.69476318]
] def
/pairs [
[1 171]
[2 170]
[3 169]
[4 168]
[5 165]
[6 164]
[7 163]
[9 159]
[10 158]
[11 157]
[12 155]
[13 154]
[14 153]
[15 152]
[16 151]
[17 150]
[18 149]
[19 148]
[22 146]
[23 145]
[24 144]
[25 142]
[26 141]
[28 140]
[29 139]
[30 138]
[31 137]
[32 136]
[33 135]
[34 134]
[35 133]
[37 131]
[38 130]
[39 129]
[40 128]
[41 127]
[42 126]
[43 125]
[44 124]
[45 123]
[46 122]
[47 121]
[48 120]
[50 117]
[51 116]
[52 115]
[55 113]
[56 112]
[57 111]
[58 110]
[59 109]
[60 108]
[61 99]
[62 98]
[63 97]
[64 96]
[65 95]
[66 94]
[67 93]
[72 92]
[73 91]
[74 90]
[75 89]
[76 88]
[77 85]
[78 84]
[79 83]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
