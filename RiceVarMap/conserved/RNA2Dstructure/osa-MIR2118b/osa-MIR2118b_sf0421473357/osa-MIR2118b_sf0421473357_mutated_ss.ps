%!PS-Adobe-3.0 EPSF-3.0
%%Creator: PS_dot.c,v 1.38 2007/02/02 15:18:13 ivo Exp $, ViennaRNA-2.1.9
%%CreationDate: Thu Jul 16 15:13:55 2015
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 66 210 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: -d2 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  72 216 translate
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  72 6 mul size div dup scale
  size xmin sub xmax sub 2 div size ymin sub ymax sub 2 div
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
AUGAGCGAGGAAGAGGAAGAAAGAGGUAGUCUAAGAGCAGUGGGAAUGGGAACAUAGAGGAAAAAUGAGCUCUCAGUGUUCACUUCUGGAAGUGGAGGUGGAUAUUUGUCUCAGUAUUUUUCCCGAUGCCUCCCAUUCCUAUCGUUCUUAGGUGCUACUUCCUCUUCCUUUCAGCUCAU\
) def
/coor [
[90.36664581 793.42700195]
[90.36664581 778.42700195]
[90.36664581 763.42700195]
[90.36664581 748.42700195]
[90.36664581 733.42700195]
[90.36664581 718.42700195]
[89.97399139 703.43212891]
[89.18895721 688.45269775]
[88.40391541 673.47326660]
[87.61887360 658.49377441]
[86.83383942 643.51434326]
[86.04879761 628.53491211]
[85.26375580 613.55548096]
[84.47872162 598.57604980]
[83.69367981 583.59655762]
[82.90863800 568.61712646]
[82.12360382 553.63769531]
[81.33856201 538.65826416]
[80.55352020 523.67883301]
[73.65755463 519.74462891]
[68.83445740 513.32019043]
[66.93720245 505.41714478]
[68.35046387 497.31777954]
[72.91543579 490.36688232]
[79.94389343 485.74847412]
[80.20568085 470.75076294]
[80.46746826 455.75305176]
[80.72925568 440.75534058]
[77.69374084 433.99368286]
[81.12876129 425.49877930]
[81.65225220 410.50790405]
[82.17574310 395.51705933]
[82.69924164 380.52618408]
[83.22273254 365.53530884]
[83.74622345 350.54446411]
[84.26971436 335.55358887]
[84.79320526 320.56274414]
[85.31670380 305.57186890]
[78.02828979 292.58233643]
[86.24249268 279.06057739]
[86.76598358 264.06973267]
[87.28948212 249.07885742]
[87.81297302 234.08799744]
[88.33646393 219.09713745]
[88.85995483 204.10627747]
[89.38345337 189.11541748]
[89.90694427 174.12455750]
[90.43043518 159.13368225]
[90.95392609 144.14282227]
[91.47741699 129.15196228]
[92.00091553 114.16110229]
[83.74143219 99.57425690]
[92.75300598 85.43966675]
[93.01479340 70.44194794]
[93.27658081 55.44423294]
[85.78130341 41.51112747]
[93.73954773 28.92082977]
[90.75382233 20.25780106]
[94.13905334 13.66426373]
[94.66255188 -1.32659864]
[95.18604279 -16.31746101]
[95.70953369 -31.30832291]
[96.23302460 -46.29918671]
[96.75651550 -61.29004669]
[97.28001404 -76.28091431]
[97.41091156 -91.28034210]
[97.14912415 -106.27805328]
[96.88733673 -121.27577209]
[96.62554932 -136.27348328]
[87.89691925 -145.79432678]
[88.00308990 -158.30915833]
[96.34056091 -167.09768677]
[87.77941895 -176.76940918]
[88.10398865 -189.28048706]
[96.59356689 -197.92214966]
[96.85535431 -212.91987610]
[97.11714172 -227.91758728]
[97.37892914 -242.91529846]
[97.64071655 -257.91302490]
[97.90249634 -272.91073608]
[98.16428375 -287.90844727]
[98.42607117 -302.90615845]
[98.68785858 -317.90386963]
[98.94964600 -332.90158081]
[99.21143341 -347.89932251]
[99.47321320 -362.89703369]
[99.73500061 -377.89474487]
[99.99678802 -392.89245605]
[91.57740784 -406.96533203]
[99.79051208 -421.15960693]
[116.18716431 -420.87338257]
[123.89989471 -406.40115356]
[114.99450684 -392.63067627]
[114.73271942 -377.63296509]
[114.47093201 -362.63525391]
[114.20914459 -347.63751221]
[113.94735718 -332.63980103]
[113.68556976 -317.64208984]
[113.42378998 -302.64437866]
[113.16200256 -287.64666748]
[112.90021515 -272.64895630]
[112.63842773 -257.65124512]
[112.37664032 -242.65351868]
[112.11486053 -227.65580750]
[111.85307312 -212.65808105]
[111.59128571 -197.66036987]
[120.91876221 -182.80955505]
[111.34056091 -167.09768677]
[120.92579651 -152.41191101]
[111.62326813 -136.53527832]
[111.88505554 -121.53755951]
[112.14683533 -106.53984070]
[112.40862274 -91.54212189]
[114.70356750 -88.83054352]
[115.78433228 -84.86295319]
[115.07065582 -80.22913361]
[112.27087402 -75.75741577]
[111.74738312 -60.76655579]
[111.22389221 -45.77569199]
[110.70039368 -30.78483009]
[110.17690277 -15.79396820]
[109.65341187 -0.80310619]
[109.12992096 14.18775654]
[108.73726654 29.18261528]
[116.25126648 42.04298401]
[108.27429962 55.70602036]
[108.01251221 70.70373535]
[107.75072479 85.70145416]
[115.33000183 94.56739807]
[115.02467346 106.22747040]
[106.99177551 114.68459320]
[106.46828461 129.67546082]
[105.94478607 144.66632080]
[105.42129517 159.65718079]
[104.89780426 174.64804077]
[104.37431335 189.63890076]
[103.85082245 204.62977600]
[103.32732391 219.62063599]
[102.80383301 234.61149597]
[102.28034210 249.60235596]
[101.75685120 264.59323120]
[101.23336029 279.58407593]
[108.48432159 293.64587402]
[100.30756378 306.09536743]
[99.78407288 321.08624268]
[99.26057434 336.07708740]
[98.73708344 351.06796265]
[98.21359253 366.05880737]
[97.69010162 381.04968262]
[97.16661072 396.04052734]
[96.64311218 411.03140259]
[96.11962128 426.02227783]
[95.72696686 441.01712036]
[95.46517944 456.01483154]
[95.20339966 471.01254272]
[94.94161224 486.01028442]
[107.25898743 504.71331787]
[95.53296661 522.89379883]
[96.31800842 537.87322998]
[97.10304260 552.85266113]
[97.88808441 567.83209229]
[98.67312622 582.81152344]
[99.45816040 597.79101562]
[100.24320221 612.77044678]
[101.02824402 627.74987793]
[101.81327820 642.72930908]
[102.59832001 657.70874023]
[103.38336182 672.68817139]
[104.16839600 687.66766357]
[104.95343781 702.64709473]
[107.83084106 707.06927490]
[108.62527466 711.68994141]
[107.61392212 715.67578125]
[105.36664581 718.42700195]
[105.36664581 733.42700195]
[105.36664581 748.42700195]
[105.36664581 763.42700195]
[105.36664581 778.42700195]
[105.36664581 793.42700195]
] def
/pairs [
[1 179]
[2 178]
[3 177]
[4 176]
[5 175]
[6 174]
[7 170]
[8 169]
[9 168]
[10 167]
[11 166]
[12 165]
[13 164]
[14 163]
[15 162]
[16 161]
[17 160]
[18 159]
[19 158]
[25 156]
[26 155]
[27 154]
[28 153]
[30 152]
[31 151]
[32 150]
[33 149]
[34 148]
[35 147]
[36 146]
[37 145]
[38 144]
[40 142]
[41 141]
[42 140]
[43 139]
[44 138]
[45 137]
[46 136]
[47 135]
[48 134]
[49 133]
[50 132]
[51 131]
[53 128]
[54 127]
[55 126]
[57 124]
[59 123]
[60 122]
[61 121]
[62 120]
[63 119]
[64 118]
[65 117]
[66 113]
[67 112]
[68 111]
[69 110]
[72 108]
[75 106]
[76 105]
[77 104]
[78 103]
[79 102]
[80 101]
[81 100]
[82 99]
[83 98]
[84 97]
[85 96]
[86 95]
[87 94]
[88 93]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
