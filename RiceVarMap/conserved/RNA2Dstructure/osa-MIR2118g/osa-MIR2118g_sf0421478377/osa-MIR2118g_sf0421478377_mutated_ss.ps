%!PS-Adobe-3.0 EPSF-3.0
%%Creator: PS_dot.c,v 1.38 2007/02/02 15:18:13 ivo Exp $, ViennaRNA-2.1.9
%%CreationDate: Thu Jul 16 15:13:55 2015
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 66 210 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: -d2 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  72 216 translate
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  72 6 mul size div dup scale
  size xmin sub xmax sub 2 div size ymin sub ymax sub 2 div
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
GUGAACUUGGGAAGAGGAAGACAGAGGGUCUAAGAGCUGUAGGAAUGGGAACAUGGAGGAAAGUGCAAGCUCCAUGUUUGUGGAGACUUGGCUUGCAACUUUCCUAAUGCCUCCCAUUCCUAUUGUUCUUAGGAGCUCCUUCCUCUUCCUUUGGUCUCAC\
) def
/coor [
[96.85753632 599.96923828]
[96.85753632 584.96923828]
[96.85753632 569.96923828]
[96.85753632 554.96923828]
[96.71119690 539.96997070]
[96.41851807 524.97283936]
[96.12583923 509.97567749]
[86.25254059 495.49362183]
[95.21376038 479.43380737]
[94.62851715 464.44522095]
[94.04327393 449.45666504]
[93.45803833 434.46807861]
[92.87279510 419.47949219]
[92.28755188 404.49090576]
[91.70230865 389.50234985]
[91.11707306 374.51376343]
[90.53182983 359.52517700]
[89.94658661 344.53659058]
[89.36134338 329.54803467]
[88.77610779 314.55944824]
[86.40172577 311.88854980]
[85.22959137 307.91665649]
[85.86508179 303.23403931]
[88.62119293 298.68225098]
[88.91387177 283.68508911]
[89.20654297 268.68795776]
[78.72902679 258.16381836]
[78.81220245 242.95042419]
[89.92190552 232.03199768]
[90.21458435 217.03485107]
[90.50725555 202.03770447]
[90.79993439 187.04055786]
[91.09261322 172.04341125]
[91.38528442 157.04626465]
[91.67796326 142.04913330]
[91.97064209 127.05197906]
[92.26331329 112.05484009]
[85.67877960 99.72051239]
[92.73954010 87.65248871]
[93.03221893 72.65534210]
[93.32489014 57.65819550]
[93.61756897 42.66105270]
[93.91024780 27.66390800]
[94.20291901 12.66676331]
[94.49559784 -2.33038092]
[94.78827667 -17.32752609]
[95.08094788 -32.32466888]
[95.37362671 -47.32181549]
[95.66630554 -62.31895828]
[95.95897675 -77.31610107]
[86.68611145 -93.19800568]
[96.27496338 -107.86994171]
[96.27496338 -122.86994171]
[96.27496338 -137.86993408]
[87.70635223 -147.55468750]
[88.04362488 -160.07981873]
[96.55805206 -168.71679688]
[96.85073090 -183.71394348]
[97.14340973 -198.71109009]
[97.43608093 -213.70823669]
[97.72875977 -228.70538330]
[98.02143860 -243.70252991]
[98.31410980 -258.69967651]
[98.60678864 -273.69680786]
[98.75313568 -288.69610596]
[98.75313568 -303.69610596]
[98.75313568 -318.69610596]
[98.75313568 -333.69610596]
[98.75313568 -348.69610596]
[98.75313568 -363.69610596]
[97.87554932 -378.67041016]
[96.12339020 -393.56771851]
[94.37123108 -408.46502686]
[92.61907196 -423.36233521]
[90.86691284 -438.25964355]
[80.63607025 -451.07614136]
[86.87113953 -466.24371338]
[103.15802765 -468.15930176]
[112.74216461 -454.85232544]
[105.76422119 -440.01181030]
[107.51638031 -425.11450195]
[109.26853943 -410.21719360]
[111.02070618 -395.31988525]
[112.77286530 -380.42257690]
[123.13895416 -391.26434326]
[138.13005066 -391.78097534]
[149.21794128 -381.67855835]
[150.09484863 -366.70419312]
[140.26194763 -355.37664795]
[125.31301117 -354.13995361]
[113.75313568 -363.69610596]
[113.75313568 -348.69610596]
[113.75313568 -333.69610596]
[113.75313568 -318.69610596]
[113.75313568 -303.69610596]
[113.75313568 -288.69610596]
[116.91387939 -281.97326660]
[113.60393524 -273.40414429]
[113.31125641 -258.40698242]
[113.01857758 -243.40985107]
[112.72590637 -228.41270447]
[112.43322754 -213.41555786]
[112.14054871 -198.41841125]
[111.84787750 -183.42126465]
[111.55519867 -168.42411804]
[120.85594940 -153.56788635]
[111.27496338 -137.86993408]
[111.27496338 -122.86994171]
[111.27496338 -107.86994171]
[119.61924744 -99.06847382]
[119.71206665 -86.53913879]
[110.95612335 -77.02342987]
[110.66344452 -62.02628326]
[110.37077332 -47.02913666]
[110.07809448 -32.03199387]
[109.78541565 -17.03484917]
[109.49274445 -2.03770447]
[109.20006561 12.95944023]
[108.90738678 27.95658493]
[108.61471558 42.95372772]
[108.32203674 57.95087433]
[108.02935791 72.94802094]
[107.73668671 87.94515991]
[114.32122040 100.27948761]
[107.26045990 112.34751129]
[106.96778107 127.34465790]
[106.67510986 142.34179688]
[106.38243103 157.33894348]
[106.08975220 172.33609009]
[105.79708099 187.33323669]
[105.50440216 202.33038330]
[105.21172333 217.32752991]
[104.91905212 232.32467651]
[115.59429932 243.66824341]
[115.08384705 258.87332153]
[104.20368958 268.98062134]
[103.91101074 283.97778320]
[103.61833954 298.97491455]
[103.76468658 313.97421265]
[104.34992218 328.96276855]
[104.93516541 343.95135498]
[105.52040863 358.93994141]
[106.10565186 373.92852783]
[106.69088745 388.91708374]
[107.27613068 403.90567017]
[107.86137390 418.89425659]
[108.44661713 433.88284302]
[109.03185272 448.87139893]
[109.61709595 463.85998535]
[110.20233917 478.84857178]
[119.14228821 488.19161987]
[119.29395294 500.72039795]
[111.12298584 509.68298340]
[111.41566467 524.68011475]
[111.70833588 539.67730713]
[115.01828766 548.24639893]
[111.85753632 554.96923828]
[111.85753632 569.96923828]
[111.85753632 584.96923828]
[111.85753632 599.96923828]
] def
/pairs [
[1 160]
[2 159]
[3 158]
[4 157]
[5 155]
[6 154]
[7 153]
[9 150]
[10 149]
[11 148]
[12 147]
[13 146]
[14 145]
[15 144]
[16 143]
[17 142]
[18 141]
[19 140]
[20 139]
[24 138]
[25 137]
[26 136]
[29 133]
[30 132]
[31 131]
[32 130]
[33 129]
[34 128]
[35 127]
[36 126]
[37 125]
[39 123]
[40 122]
[41 121]
[42 120]
[43 119]
[44 118]
[45 117]
[46 116]
[47 115]
[48 114]
[49 113]
[50 112]
[52 109]
[53 108]
[54 107]
[57 105]
[58 104]
[59 103]
[60 102]
[61 101]
[62 100]
[63 99]
[64 98]
[65 96]
[66 95]
[67 94]
[68 93]
[69 92]
[70 91]
[71 84]
[72 83]
[73 82]
[74 81]
[75 80]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
