%!PS-Adobe-3.0 EPSF-3.0
%%Creator: PS_dot.c,v 1.38 2007/02/02 15:18:13 ivo Exp $, ViennaRNA-2.1.9
%%CreationDate: Thu Jul 16 15:13:53 2015
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 66 210 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: -d2 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  72 216 translate
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  72 6 mul size div dup scale
  size xmin sub xmax sub 2 div size ymin sub ymax sub 2 div
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
UGAGUCCUGGUAGCCAAGGAUGACUUGCCUGUAUAUUUAUAUAUAUAUGUGUGUGUGAUCAAUGGAUGGAUUGAUCAAGCUGCUUGCAGGCUCAUGCAUAUAUAUGUACAGGCAGUCUCCUUGGCUAGCCCGGCUACC\
) def
/coor [
[53.82053375 744.76867676]
[53.63043594 728.96557617]
[64.73015594 717.71514893]
[64.39116669 702.71899414]
[61.06722641 696.04675293]
[64.21782684 687.38092041]
[64.21782684 672.38092041]
[56.48052597 659.65368652]
[64.21782684 645.85351562]
[64.21782684 630.85351562]
[64.21782684 615.85351562]
[64.04831696 600.85443115]
[63.70932770 585.85827637]
[63.37033463 570.86212158]
[63.03134537 555.86596680]
[62.69235229 540.86975098]
[62.35335922 525.87359619]
[62.01436615 510.87744141]
[61.67537689 495.88125610]
[61.33638382 480.88510132]
[58.01244736 474.21289062]
[61.16304779 465.54705811]
[61.16304779 450.54705811]
[61.16304779 435.54705811]
[61.16304779 420.54705811]
[57.99074554 413.80142212]
[61.33638382 405.20901489]
[61.67537689 390.21286011]
[62.01436615 375.21670532]
[62.35335922 360.22052002]
[62.69235229 345.22436523]
[63.03134537 330.22817993]
[63.37033463 315.23202515]
[63.70932770 300.23583984]
[51.79751205 309.35223389]
[36.90223694 307.58285522]
[27.45762062 295.92956543]
[28.81147385 280.99078369]
[40.19720459 271.22528076]
[55.16789246 272.16253662]
[65.24707031 283.27282715]
[67.61032867 268.46017456]
[69.97358704 253.64750671]
[72.33684540 238.83483887]
[74.70010376 224.02218628]
[77.06336212 209.20951843]
[79.42661285 194.39685059]
[81.78987122 179.58419800]
[84.15312958 164.77153015]
[86.51638794 149.95886230]
[88.87964630 135.14619446]
[91.24290466 120.33353424]
[93.60616302 105.52087402]
[84.50202179 104.40773010]
[76.51885223 96.25687408]
[73.93000793 82.42169952]
[71.90211487 67.55941010]
[69.87421417 52.69712448]
[67.84632111 37.83483505]
[65.81842804 22.97254562]
[63.79052734 8.11025715]
[61.76263428 -6.75203180]
[59.73473740 -21.61432076]
[47.00113297 -30.97545815]
[44.69906616 -46.61118698]
[54.19430542 -59.24510574]
[69.85350037 -61.38173676]
[82.38632202 -51.75345230]
[84.35727692 -36.07254410]
[74.59702301 -23.64221764]
[76.62492371 -8.77992821]
[78.65281677 6.08236122]
[80.68071747 20.94465065]
[82.70861053 35.80693817]
[84.73650360 50.66922760]
[86.76440430 65.53151703]
[88.79229736 80.39380646]
[103.19764709 84.57541656]
[112.86828613 73.10900116]
[122.53892517 61.64258194]
[132.20956421 50.17616653]
[129.35473633 34.80138397]
[137.09547424 21.21407890]
[151.77687073 15.82976151]
[166.46679688 21.19074059]
[174.22912598 34.76572800]
[171.39872742 50.14502716]
[159.31201172 60.06700516]
[143.67597961 59.84680557]
[134.00534058 71.31322479]
[124.33470917 82.77964020]
[114.66407013 94.24605560]
[108.41883087 107.88413239]
[106.05557251 122.69679260]
[103.69231415 137.50946045]
[101.32905579 152.32211304]
[98.96579742 167.13478088]
[96.60253906 181.94744873]
[94.23928070 196.76011658]
[91.87602234 211.57276917]
[89.51276398 226.38543701]
[87.14950562 241.19810486]
[84.78624725 256.01077271]
[82.42298889 270.82342529]
[80.05973053 285.63610840]
[78.70549774 300.57482910]
[78.36650085 315.57101440]
[78.02751160 330.56716919]
[77.68852234 345.56335449]
[77.34952545 360.55950928]
[77.01053619 375.55569458]
[76.67154694 390.55184937]
[76.33255005 405.54803467]
[76.16304779 420.54705811]
[76.16304779 435.54705811]
[76.16304779 450.54705811]
[76.16304779 465.54705811]
[76.33255005 480.54611206]
[76.67154694 495.54226685]
[77.01053619 510.53845215]
[77.34952545 525.53460693]
[77.68852234 540.53076172]
[78.02751160 555.52697754]
[78.36650085 570.52313232]
[78.70549774 585.51928711]
[79.04448700 600.51544189]
[82.39012909 609.10784912]
[79.21782684 615.85351562]
[79.21782684 630.85351562]
[79.21782684 645.85351562]
[86.95512390 659.65368652]
[79.21782684 672.38092041]
[79.21782684 687.38092041]
[79.38733673 702.38000488]
[79.72632599 717.37615967]
[91.32308197 728.11352539]
[91.84728241 743.90911865]
[80.98792267 755.39166260]
] def
/pairs [
[3 135]
[4 134]
[6 133]
[7 132]
[9 130]
[10 129]
[11 128]
[12 126]
[13 125]
[14 124]
[15 123]
[16 122]
[17 121]
[18 120]
[19 119]
[20 118]
[22 117]
[23 116]
[24 115]
[25 114]
[27 113]
[28 112]
[29 111]
[30 110]
[31 109]
[32 108]
[33 107]
[34 106]
[41 105]
[42 104]
[43 103]
[44 102]
[45 101]
[46 100]
[47 99]
[48 98]
[49 97]
[50 96]
[51 95]
[52 94]
[53 93]
[56 77]
[57 76]
[58 75]
[59 74]
[60 73]
[61 72]
[62 71]
[63 70]
[78 92]
[79 91]
[80 90]
[81 89]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
