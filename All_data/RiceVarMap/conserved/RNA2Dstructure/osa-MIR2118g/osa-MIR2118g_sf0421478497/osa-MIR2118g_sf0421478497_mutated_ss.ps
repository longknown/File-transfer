%!PS-Adobe-3.0 EPSF-3.0
%%Creator: PS_dot.c,v 1.38 2007/02/02 15:18:13 ivo Exp $, ViennaRNA-2.1.9
%%CreationDate: Thu Jul 16 15:13:55 2015
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 66 210 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: -d2 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  72 216 translate
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  72 6 mul size div dup scale
  size xmin sub xmax sub 2 div size ymin sub ymax sub 2 div
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
GUGAACUUGGGAAAAGGAAGACAGAGGGUCUAAGAGCUGUAGGAAUGGGAACAUGGAGGAAAGUGCAAGCUCCAUGUUUGUGGAGACUUGGCUUGCAACUUUCCUAAUGCCUCCCAUUCCUAUUGUUCUUAGGUGCUCCUUCCUCUUCCUUUGGUCUCAC\
) def
/coor [
[99.77882385 439.86621094]
[99.77882385 424.86621094]
[99.77882385 409.86621094]
[99.77882385 394.86621094]
[99.63247681 379.86694336]
[99.33979797 364.86978149]
[99.04712677 349.87265015]
[89.17382050 335.39059448]
[98.13504028 319.33078003]
[97.54980469 304.34219360]
[96.96456146 289.35363770]
[96.37931824 274.36505127]
[95.79407501 259.37646484]
[87.56610107 246.96076965]
[94.75907898 232.86921692]
[94.17383575 217.88064575]
[93.58860016 202.89205933]
[93.00335693 187.90348816]
[92.41811371 172.91490173]
[91.83287048 157.92633057]
[89.45849609 155.25543213]
[88.28636169 151.28355408]
[88.92185211 146.60092163]
[91.67796326 142.04913330]
[91.97064209 127.05197906]
[92.26331329 112.05484009]
[85.67877960 99.72051239]
[92.73954010 87.65248871]
[93.03221893 72.65534210]
[93.32489014 57.65819550]
[93.61756897 42.66105270]
[93.91024780 27.66390800]
[94.20291901 12.66676331]
[94.49559784 -2.33038092]
[94.78827667 -17.32752609]
[95.08094788 -32.32466888]
[95.37362671 -47.32181549]
[87.90706635 -61.27032852]
[95.89122772 -73.84420776]
[96.18389893 -88.84135437]
[96.47657776 -103.83849335]
[96.76925659 -118.83563995]
[97.06192780 -133.83277893]
[97.35460663 -148.82992554]
[97.64728546 -163.82707214]
[97.93995667 -178.82421875]
[98.23263550 -193.82136536]
[98.52531433 -208.81851196]
[98.81798553 -223.81565857]
[99.11066437 -238.81278992]
[89.83779144 -254.69470215]
[99.42665100 -269.36663818]
[99.42665100 -284.36663818]
[99.42665100 -299.36663818]
[90.85803986 -309.05139160]
[91.19530487 -321.57650757]
[99.70973969 -330.21350098]
[100.00241852 -345.21063232]
[100.29508972 -360.20779419]
[100.58776855 -375.20492554]
[100.88044739 -390.20208740]
[101.17311859 -405.19921875]
[101.46579742 -420.19635010]
[101.75847626 -435.19351196]
[101.90481567 -450.19277954]
[101.90481567 -465.19277954]
[101.90481567 -480.19277954]
[101.90481567 -495.19277954]
[101.90481567 -510.19277954]
[101.90481567 -525.19281006]
[101.02723694 -540.16711426]
[99.27507782 -555.06439209]
[97.52291107 -569.96173096]
[95.77075195 -584.85900879]
[94.01859283 -599.75634766]
[83.78775024 -612.57281494]
[90.02282715 -627.74041748]
[106.30970764 -629.65600586]
[115.89385223 -616.34899902]
[108.91590881 -601.50848389]
[110.66806793 -586.61120605]
[112.42022705 -571.71386719]
[114.17238617 -556.81658936]
[115.92454529 -541.91925049]
[126.29064178 -552.76104736]
[141.28173828 -553.27764893]
[152.36961365 -543.17523193]
[153.24653625 -528.20092773]
[143.41362000 -516.87335205]
[128.46469116 -515.63665771]
[116.90481567 -525.19281006]
[116.90481567 -510.19277954]
[116.90481567 -495.19277954]
[116.90481567 -480.19277954]
[116.90481567 -465.19277954]
[116.90481567 -450.19277954]
[120.06556702 -443.46997070]
[116.75561523 -434.90081787]
[116.46294403 -419.90368652]
[116.17026520 -404.90655518]
[115.87758636 -389.90939331]
[115.58491516 -374.91226196]
[115.29223633 -359.91510010]
[114.99955750 -344.91796875]
[114.70688629 -329.92080688]
[124.00763702 -315.06457520]
[114.42665100 -299.36663818]
[114.42665100 -284.36663818]
[114.42665100 -269.36663818]
[122.77093506 -260.56515503]
[122.86375427 -248.03582764]
[114.10781097 -238.52012634]
[113.81513214 -223.52297974]
[113.52245331 -208.52583313]
[113.22978210 -193.52868652]
[112.93710327 -178.53153992]
[112.64442444 -163.53439331]
[112.35175323 -148.53724670]
[112.05907440 -133.54011536]
[111.76639557 -118.54296875]
[111.47372437 -103.54582214]
[111.18104553 -88.54867554]
[110.88836670 -73.55152893]
[118.37586212 -60.67571259]
[110.37077332 -47.02913666]
[110.07809448 -32.03199387]
[109.78541565 -17.03484917]
[109.49274445 -2.03770447]
[109.20006561 12.95944023]
[108.90738678 27.95658493]
[108.61471558 42.95372772]
[108.32203674 57.95087433]
[108.02935791 72.94802094]
[107.73668671 87.94515991]
[114.32122040 100.27948761]
[107.26045990 112.34751129]
[106.96778107 127.34465790]
[106.67510986 142.34179688]
[106.82144928 157.34109497]
[107.40669250 172.32966614]
[107.99193573 187.31825256]
[108.57717896 202.30682373]
[109.16241455 217.29541016]
[109.74765778 232.28398132]
[118.01749420 245.77177429]
[110.78265381 258.79122925]
[111.36789703 273.77981567]
[111.95314026 288.76837158]
[112.53838348 303.75695801]
[113.12361908 318.74554443]
[122.06356812 328.08859253]
[122.21524048 340.61737061]
[114.04427338 349.57995605]
[114.33694458 364.57711792]
[114.62962341 379.57424927]
[117.93956757 388.14337158]
[114.77882385 394.86621094]
[114.77882385 409.86621094]
[114.77882385 424.86621094]
[114.77882385 439.86621094]
] def
/pairs [
[1 160]
[2 159]
[3 158]
[4 157]
[5 155]
[6 154]
[7 153]
[9 150]
[10 149]
[11 148]
[12 147]
[13 146]
[15 144]
[16 143]
[17 142]
[18 141]
[19 140]
[20 139]
[24 138]
[25 137]
[26 136]
[28 134]
[29 133]
[30 132]
[31 131]
[32 130]
[33 129]
[34 128]
[35 127]
[36 126]
[37 125]
[39 123]
[40 122]
[41 121]
[42 120]
[43 119]
[44 118]
[45 117]
[46 116]
[47 115]
[48 114]
[49 113]
[50 112]
[52 109]
[53 108]
[54 107]
[57 105]
[58 104]
[59 103]
[60 102]
[61 101]
[62 100]
[63 99]
[64 98]
[65 96]
[66 95]
[67 94]
[68 93]
[69 92]
[70 91]
[71 84]
[72 83]
[73 82]
[74 81]
[75 80]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
