%!PS-Adobe-3.0 EPSF-3.0
%%Creator: PS_dot.c,v 1.38 2007/02/02 15:18:13 ivo Exp $, ViennaRNA-2.1.9
%%CreationDate: Thu Jul 16 15:13:57 2015
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 66 210 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: -d2 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  72 216 translate
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  72 6 mul size div dup scale
  size xmin sub xmax sub 2 div size ymin sub ymax sub 2 div
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
UGGGGAAGCAUCCAAAGGGAUCGCAUUGAUCCUUCAUCGCUCUCGCUCGCUUCCAUGGCGGUCAUCGUCUACAAGCAGCUUGACGGAUCAUGCGAUCCUUUUGGAGGCUUCCUCU\
) def
/coor [
[84.29257202 559.74530029]
[90.33891296 543.90618896]
[90.33891296 528.90618896]
[90.33891296 513.90618896]
[90.33891296 498.90618896]
[90.33891296 483.90618896]
[90.33891296 468.90618896]
[90.33891296 453.90618896]
[90.33891296 438.90618896]
[82.60160828 426.17892456]
[90.33891296 412.37875366]
[90.33891296 397.37875366]
[90.33891296 382.37875366]
[90.33891296 367.37875366]
[90.33891296 352.37875366]
[90.33891296 337.37875366]
[90.33891296 322.37875366]
[90.33891296 307.37875366]
[90.33891296 292.37875366]
[90.33891296 277.37875366]
[90.33891296 262.37875366]
[90.33891296 247.37873840]
[90.33891296 232.37873840]
[90.33891296 217.37873840]
[90.33891296 202.37873840]
[90.33891296 187.37873840]
[87.14980316 180.59992981]
[90.54752350 171.97392273]
[90.95371246 156.97943115]
[91.35990906 141.98492432]
[91.76609802 126.99042511]
[92.17228699 111.99592590]
[85.68130493 99.61211395]
[92.83321381 87.59787750]
[93.23940277 72.60337830]
[93.64559174 57.60888290]
[85.31638336 47.64708710]
[86.04099274 35.08548355]
[94.87702179 26.70251846]
[95.68910217 11.72451782]
[96.50119019 -3.25348377]
[84.75038910 6.06953335]
[69.75151825 5.88526440]
[58.23330688 -3.72362542]
[55.36299133 -18.44644165]
[62.42824936 -31.67830276]
[76.25949097 -37.48319626]
[90.65180969 -33.25695801]
[99.14864349 -20.89536858]
[102.76870728 -35.45198822]
[106.38877869 -50.00860214]
[110.00885010 -64.56522369]
[100.33892822 -74.49305725]
[96.89832306 -87.80585480]
[100.48987579 -100.96610260]
[110.06245422 -110.53186798]
[123.01551819 -114.05694580]
[127.02844238 -128.51019287]
[131.04136658 -142.96343994]
[135.05429077 -157.41668701]
[128.44197083 -172.03369141]
[135.87525940 -186.25077820]
[151.65200806 -189.16181946]
[163.66961670 -178.53372192]
[162.70921326 -162.51943970]
[149.50753784 -153.40376282]
[145.49461365 -138.95051575]
[141.48168945 -124.49726868]
[137.46876526 -110.04402161]
[148.07243347 -97.59283447]
[149.22467041 -81.11322021]
[140.27960205 -67.02842712]
[124.56546783 -60.94515228]
[120.94539642 -46.38853455]
[117.32532501 -31.83191872]
[113.70526123 -17.27530098]
[111.47918701 -2.44140005]
[110.66710663 12.53660107]
[109.85502625 27.51460266]
[118.65126801 42.63389969]
[108.64009094 58.01507187]
[108.23390198 73.00957489]
[107.82771301 88.00407410]
[114.31869507 100.38788605]
[107.16678619 112.40212250]
[106.76059723 127.39662170]
[106.35440826 142.39111328]
[105.94821167 157.38562012]
[105.54202271 172.38011169]
[105.33891296 187.37873840]
[105.33891296 202.37873840]
[105.33891296 217.37873840]
[105.33891296 232.37873840]
[105.33891296 247.37873840]
[105.33891296 262.37875366]
[105.33891296 277.37875366]
[105.33891296 292.37875366]
[105.33891296 307.37875366]
[105.33891296 322.37875366]
[105.33891296 337.37875366]
[105.33891296 352.37875366]
[105.33891296 367.37875366]
[105.33891296 382.37875366]
[105.33891296 397.37875366]
[105.33891296 412.37875366]
[113.07621002 426.17892456]
[105.33891296 438.90618896]
[105.33891296 453.90618896]
[105.33891296 468.90618896]
[105.33891296 483.90618896]
[105.33891296 498.90618896]
[105.33891296 513.90618896]
[105.33891296 528.90618896]
[105.33891296 543.90618896]
[111.38524628 559.74530029]
] def
/pairs [
[2 114]
[3 113]
[4 112]
[5 111]
[6 110]
[7 109]
[8 108]
[9 107]
[11 105]
[12 104]
[13 103]
[14 102]
[15 101]
[16 100]
[17 99]
[18 98]
[19 97]
[20 96]
[21 95]
[22 94]
[23 93]
[24 92]
[25 91]
[26 90]
[28 89]
[29 88]
[30 87]
[31 86]
[32 85]
[34 83]
[35 82]
[36 81]
[39 79]
[40 78]
[41 77]
[49 76]
[50 75]
[51 74]
[52 73]
[57 69]
[58 68]
[59 67]
[60 66]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
