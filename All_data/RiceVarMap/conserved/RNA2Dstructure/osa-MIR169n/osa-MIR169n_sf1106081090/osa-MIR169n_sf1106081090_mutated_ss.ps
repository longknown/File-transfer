%!PS-Adobe-3.0 EPSF-3.0
%%Creator: PS_dot.c,v 1.38 2007/02/02 15:18:13 ivo Exp $, ViennaRNA-2.1.9
%%CreationDate: Thu Jul 16 15:13:53 2015
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 66 210 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: -d2 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  72 216 translate
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  72 6 mul size div dup scale
  size xmin sub xmax sub 2 div size ymin sub ymax sub 2 div
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
CUCCCUUUGGUAGCCAAGAAUGACUUGCCUAUGUGUUUUGCCUUGUGUUGGCUCAUCCAUCCAUCUAUCAGCCGUUGCAGAUUUGCAGUGACAGAUUAAAGGGUUUCAGAAAGAAAUUCUUGUGAUGGAUGUGCAAUGUGGCUGCAUGGGCCGGUCUUCUUGGCUAGCCAGAGUGGC\
) def
/coor [
[60.49312210 899.47692871]
[52.78322983 885.00317383]
[61.69131851 871.23443604]
[61.95604324 856.23675537]
[62.08841324 841.23736572]
[62.08841324 826.23736572]
[62.08841324 811.23736572]
[62.08841324 796.23736572]
[62.08841324 781.23736572]
[62.08841324 766.23736572]
[62.08841324 751.23736572]
[61.95604324 736.23791504]
[61.69131851 721.24029541]
[61.42658997 706.24261475]
[61.16186523 691.24493408]
[60.89713669 676.24731445]
[60.63240814 661.24963379]
[60.36768341 646.25195312]
[60.10295486 631.25427246]
[59.83822632 616.25665283]
[56.56652451 609.60424805]
[59.70352173 600.99249268]
[59.70352173 585.99249268]
[59.70352173 570.99249268]
[59.70352173 555.99249268]
[51.96622086 543.26519775]
[59.70352173 529.46502686]
[59.70352173 514.46502686]
[59.70352173 499.46505737]
[59.70352173 484.46505737]
[59.70352173 469.46505737]
[59.70352173 454.46505737]
[59.70352173 439.46505737]
[59.70352173 424.46505737]
[59.70352173 409.46505737]
[57.78701782 407.38018799]
[56.59378052 404.39923096]
[56.47356415 400.79861450]
[57.66791534 396.97750854]
[60.27025986 393.41629028]
[61.32834244 378.45367432]
[62.38642883 363.49102783]
[54.99871445 356.37847900]
[52.71339417 346.15576172]
[56.52562714 336.16326904]
[65.39665222 329.80392456]
[66.98212433 314.88796997]
[68.56760406 299.97198486]
[70.15308380 285.05599976]
[71.73856354 270.14004517]
[69.31158447 263.13516235]
[73.48590851 254.97563171]
[67.37599182 241.39189148]
[76.75493622 228.65039062]
[78.60340881 213.76472473]
[80.45188904 198.87904358]
[82.30036163 183.99337769]
[84.14883423 169.10771179]
[85.99731445 154.22204590]
[87.84578705 139.33638000]
[89.69426727 124.45070648]
[91.41130829 109.54930878]
[57.87997055 86.22105408]
[52.94363785 72.05656433]
[48.00730515 57.89208221]
[43.07096863 43.72759628]
[31.22316170 33.24237061]
[34.34108353 18.67776108]
[29.40475082 4.51327610]
[24.46841812 -9.65120888]
[21.02491570 -12.40741634]
[18.87235069 -15.78286934]
[18.04623985 -19.28951645]
[18.41791344 -22.47882652]
[19.72212410 -24.99252319]
[15.79723549 -39.46992874]
[11.87234688 -53.94733429]
[7.94745779 -68.42473602]
[4.02256870 -82.90214539]
[-7.98258543 -94.07390594]
[-4.04692316 -109.99378967]
[11.78088284 -114.28477478]
[23.21854401 -102.53266907]
[18.49997330 -86.82703400]
[22.42486191 -72.34962463]
[26.34975052 -57.87222290]
[30.27463913 -43.39481735]
[34.19952774 -28.91741180]
[38.63290024 -14.58754158]
[43.56923294 -0.42305723]
[48.50556946 13.74142742]
[60.00029755 23.21351814]
[57.23545456 38.79126358]
[62.17178726 52.95574951]
[67.10812378 67.12023163]
[72.04445648 81.28472137]
[79.39049530 82.79654694]
[94.08258820 85.82020569]
[101.42863464 87.33203888]
[111.55706024 76.26791382]
[121.68549347 65.20378113]
[131.81391907 54.13965607]
[141.94235229 43.07553101]
[152.07078552 32.01140213]
[162.19921875 20.94727707]
[172.32763672 9.88315010]
[182.45606995 -1.18097723]
[183.18774414 -17.20733643]
[196.25793457 -26.51055145]
[211.64030457 -21.95399094]
[217.53482056 -7.03305817]
[209.41970825 6.80618334]
[193.52020264 8.94745255]
[183.39176941 20.01157951]
[173.26333618 31.07570648]
[163.13490295 42.13983536]
[153.00648499 53.20396042]
[142.87805176 64.26808929]
[132.74961853 75.33221436]
[122.62118530 86.39633942]
[112.49275970 97.46047211]
[106.32728577 111.13478088]
[108.53646088 120.02986145]
[104.57993317 126.29917908]
[102.73146057 141.18484497]
[100.88298035 156.07052612]
[99.03450775 170.95619202]
[97.18602753 185.84185791]
[95.33755493 200.72752380]
[93.48908234 215.61318970]
[91.64060211 230.49887085]
[97.61830902 245.14733887]
[88.37158203 256.82412720]
[86.65453339 271.72552490]
[85.06906128 286.64147949]
[83.48358154 301.55746460]
[81.89810181 316.47344971]
[80.31262207 331.38940430]
[89.33166504 349.39562988]
[77.34906006 364.54910278]
[76.29097748 379.51174927]
[75.23289490 394.47439575]
[74.70352173 409.46505737]
[74.70352173 424.46505737]
[74.70352173 439.46505737]
[74.70352173 454.46505737]
[74.70352173 469.46505737]
[74.70352173 484.46505737]
[74.70352173 499.46505737]
[74.70352173 514.46502686]
[74.70352173 529.46502686]
[82.44082642 543.26519775]
[74.70352173 555.99249268]
[74.70352173 570.99249268]
[74.70352173 585.99249268]
[74.70352173 600.99249268]
[74.83589172 615.99188232]
[75.10061646 630.98956299]
[75.36534882 645.98724365]
[75.63007355 660.98492432]
[75.89479828 675.98254395]
[76.15953064 690.98022461]
[76.42425537 705.97790527]
[76.68898010 720.97552490]
[76.95371246 735.97320557]
[80.24220276 744.52825928]
[77.08841705 751.23736572]
[77.08841705 766.23736572]
[77.08841705 781.23736572]
[77.08841705 796.23736572]
[77.08841705 811.23736572]
[77.08841705 826.23736572]
[77.08841705 841.23736572]
[80.22541046 849.84912109]
[76.95371246 856.50152588]
[76.68898010 871.49914551]
[85.10559845 885.57366943]
] def
/pairs [
[3 176]
[4 175]
[5 173]
[6 172]
[7 171]
[8 170]
[9 169]
[10 168]
[11 167]
[12 165]
[13 164]
[14 163]
[15 162]
[16 161]
[17 160]
[18 159]
[19 158]
[20 157]
[22 156]
[23 155]
[24 154]
[25 153]
[27 151]
[28 150]
[29 149]
[30 148]
[31 147]
[32 146]
[33 145]
[34 144]
[35 143]
[40 142]
[41 141]
[42 140]
[46 138]
[47 137]
[48 136]
[49 135]
[50 134]
[52 133]
[54 131]
[55 130]
[56 129]
[57 128]
[58 127]
[59 126]
[60 125]
[61 124]
[62 122]
[63 96]
[64 95]
[65 94]
[66 93]
[68 91]
[69 90]
[70 89]
[75 88]
[76 87]
[77 86]
[78 85]
[79 84]
[99 121]
[100 120]
[101 119]
[102 118]
[103 117]
[104 116]
[105 115]
[106 114]
[107 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
