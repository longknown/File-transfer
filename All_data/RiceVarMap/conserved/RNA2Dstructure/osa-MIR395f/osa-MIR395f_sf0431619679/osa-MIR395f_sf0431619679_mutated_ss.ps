%!PS-Adobe-3.0 EPSF-3.0
%%Creator: PS_dot.c,v 1.38 2007/02/02 15:18:13 ivo Exp $, ViennaRNA-2.1.9
%%CreationDate: Thu Jul 16 15:13:58 2015
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 66 210 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: -d2 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  72 216 translate
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  72 6 mul size div dup scale
  size xmin sub xmax sub 2 div size ymin sub ymax sub 2 div
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
UUAUCGCGGGUUCCCUUCAAUCACUUCACAUGGUACUAUUUCAAGGCCUACUAUGUGAAUUGUUUGGGGAAACUCUCGAUGU\
) def
/coor [
[88.24059296 313.62252808]
[94.28693390 297.78338623]
[94.28693390 282.78338623]
[94.28693390 267.78338623]
[94.28693390 252.78340149]
[94.28693390 237.78340149]
[86.54962921 225.05612183]
[94.28693390 211.25595093]
[94.28693390 196.25595093]
[94.28693390 181.25595093]
[94.28693390 166.25595093]
[94.28693390 151.25595093]
[94.00306702 136.25863647]
[93.43544769 121.26937866]
[92.86782074 106.28012848]
[89.75331116 101.72227478]
[89.56438446 95.72370911]
[92.86782074 90.14488220]
[93.43544769 75.15562439]
[94.00306702 60.16636658]
[86.79352570 46.08329010]
[95.00690460 33.65792465]
[95.57453156 18.66866684]
[88.36499023 4.58558893]
[96.57836914 -7.83977652]
[97.14598846 -22.82903290]
[97.71360779 -37.81829071]
[98.28123474 -52.80754471]
[98.84885406 -67.79679871]
[99.41647339 -82.78605652]
[99.98410034 -97.77531433]
[100.55171967 -112.76457214]
[101.11934662 -127.75382996]
[101.68696594 -142.74308777]
[102.25458527 -157.73234558]
[101.97072601 -172.72966003]
[100.83629608 -187.68669128]
[88.68599701 -197.79341125]
[87.32419586 -213.53892517]
[97.55881500 -225.58169556]
[113.31784058 -226.77694702]
[125.25172424 -216.41557312]
[126.28029633 -200.64479065]
[115.79333496 -188.82112122]
[116.92776489 -173.86408997]
[119.60045624 -171.20892334]
[120.98354340 -167.02510071]
[120.32460022 -162.00321960]
[117.24384308 -157.16471863]
[116.67622375 -142.17546082]
[116.10859680 -127.18620300]
[115.54097748 -112.19694519]
[114.97335815 -97.20769501]
[114.40573120 -82.21843719]
[113.83811188 -67.22917938]
[113.27048492 -52.23992157]
[112.70286560 -37.25066757]
[112.13524628 -22.26140976]
[111.56761932 -7.27215433]
[118.81776428 5.73879290]
[110.56378174 19.23628998]
[109.99616241 34.22554779]
[117.24629974 47.23649216]
[108.99232483 60.73398972]
[108.42470551 75.72324371]
[107.85707855 90.71250153]
[107.85707855 105.71250153]
[108.42470551 120.70175934]
[108.99232483 135.69100952]
[112.51664734 144.39691162]
[109.28693390 151.25595093]
[109.28693390 166.25595093]
[109.28693390 181.25595093]
[109.28693390 196.25595093]
[109.28693390 211.25595093]
[117.02423096 225.05612183]
[109.28693390 237.78340149]
[109.28693390 252.78340149]
[109.28693390 267.78338623]
[109.28693390 282.78338623]
[109.28693390 297.78338623]
[115.33326721 313.62252808]
] def
/pairs [
[2 81]
[3 80]
[4 79]
[5 78]
[6 77]
[8 75]
[9 74]
[10 73]
[11 72]
[12 71]
[13 69]
[14 68]
[15 67]
[18 66]
[19 65]
[20 64]
[22 62]
[23 61]
[25 59]
[26 58]
[27 57]
[28 56]
[29 55]
[30 54]
[31 53]
[32 52]
[33 51]
[34 50]
[35 49]
[36 45]
[37 44]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
