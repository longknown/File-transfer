%!PS-Adobe-3.0 EPSF-3.0
%%Creator: PS_dot.c,v 1.38 2007/02/02 15:18:13 ivo Exp $, ViennaRNA-2.1.9
%%CreationDate: Thu Jul 16 15:13:58 2015
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 66 210 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: -d2 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  72 216 translate
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  72 6 mul size div dup scale
  size xmin sub xmax sub 2 div size ymin sub ymax sub 2 div
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
GCUGAACCCAGAGGAGUGGUACUGAGAACACAGGUGCCAAUACAAUGUAUCGUGAGCUACUGUAUAAUGGAGUAAUUCUGUAACUGUGUUCUCAGGUCACCCCUUUGGGUUUCUU\
) def
/coor [
[79.40834808 592.86724854]
[71.65680695 579.28613281]
[74.49942780 563.90905762]
[86.59400940 553.99670410]
[86.59400940 538.99670410]
[86.59400940 523.99670410]
[86.59400940 508.99670410]
[86.59400940 493.99670410]
[86.59400940 478.99670410]
[86.59400940 463.99670410]
[86.59400940 448.99670410]
[86.59400940 433.99670410]
[86.59400940 418.99670410]
[86.59400940 403.99670410]
[78.85671234 391.26943970]
[86.59400940 377.46926880]
[86.59400940 362.46926880]
[86.59400940 347.46926880]
[86.59400940 332.46926880]
[78.22478485 323.62020874]
[78.18130493 311.03781128]
[87.03762817 301.54156494]
[87.44381714 286.54705811]
[87.85000610 271.55255127]
[88.25619507 256.55804443]
[88.66239166 241.56355286]
[89.06858063 226.56906128]
[89.47476959 211.57455444]
[89.88095856 196.58006287]
[90.28715515 181.58555603]
[90.69334412 166.59106445]
[91.09953308 151.59655762]
[91.50572205 136.60206604]
[71.88892365 124.93252563]
[62.64548874 104.06254578]
[67.18638611 81.69343567]
[83.83595276 66.07968903]
[80.21588898 51.52307510]
[76.59581757 36.96645737]
[72.58289337 22.51320839]
[68.18005371 8.17392540]
[63.77721405 -6.16535664]
[59.37437439 -20.50463867]
[54.97153854 -34.84392166]
[50.24837494 -39.77521133]
[49.01585770 -45.49597931]
[50.74127579 -50.07994080]
[47.12120819 -64.63655853]
[43.50114059 -79.19317627]
[32.66204071 -90.71812439]
[37.09906387 -104.93650055]
[25.33110809 -116.35784912]
[29.60014343 -132.19158936]
[45.51454926 -136.14932251]
[56.70295334 -124.15967560]
[51.65568161 -108.55656433]
[62.23584747 -98.07279968]
[58.05775833 -82.81324768]
[61.67782593 -68.25662994]
[65.29789734 -53.70000839]
[69.31082153 -39.24676132]
[73.71366119 -24.90747833]
[78.11649323 -10.56819534]
[82.51933289 3.77108693]
[86.92217255 18.11036873]
[90.76389313 21.14862251]
[92.65716553 26.68593216]
[91.15243530 33.34638977]
[94.77249908 47.90300751]
[98.39257050 62.45962524]
[106.44008636 62.98123550]
[114.19095612 65.20803833]
[121.28814697 69.03746796]
[127.40473938 74.29311371]
[132.25898743 80.73290253]
[135.62730408 88.06018829]
[137.35450745 95.93745422]
[137.36105347 104.00185394]
[135.64665222 111.88191986]
[132.29025269 119.21466064]
[127.44647217 125.66233063]
[121.33841705 130.92790222]
[114.24745941 134.76885986]
[106.50022125 137.00825500]
[106.09403229 152.00274658]
[105.68784332 166.99725342]
[105.28165436 181.99174500]
[104.87545776 196.98625183]
[104.46926880 211.98074341]
[104.06307983 226.97525024]
[103.65689087 241.96974182]
[103.25069427 256.96423340]
[102.84450531 271.95874023]
[102.43831635 286.95324707]
[102.03212738 301.94775391]
[111.19589233 317.84835815]
[101.59400940 332.46926880]
[101.59400940 347.46926880]
[101.59400940 362.46926880]
[101.59400940 377.46926880]
[109.33130646 391.26943970]
[101.59400940 403.99670410]
[101.59400940 418.99670410]
[101.59400940 433.99670410]
[101.59400940 448.99670410]
[101.59400940 463.99670410]
[101.59400940 478.99670410]
[101.59400940 493.99670410]
[101.59400940 508.99670410]
[101.59400940 523.99670410]
[101.59400940 538.99670410]
[101.59400940 553.99670410]
[113.68859100 563.90905762]
[116.53121185 579.28613281]
[108.77967072 592.86724854]
] def
/pairs [
[4 112]
[5 111]
[6 110]
[7 109]
[8 108]
[9 107]
[10 106]
[11 105]
[12 104]
[13 103]
[14 102]
[16 100]
[17 99]
[18 98]
[19 97]
[22 95]
[23 94]
[24 93]
[25 92]
[26 91]
[27 90]
[28 89]
[29 88]
[30 87]
[31 86]
[32 85]
[33 84]
[37 70]
[38 69]
[39 68]
[40 65]
[41 64]
[42 63]
[43 62]
[44 61]
[47 60]
[48 59]
[49 58]
[51 56]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
