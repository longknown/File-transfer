%!PS-Adobe-3.0 EPSF-3.0
%%Creator: PS_dot.c,v 1.38 2007/02/02 15:18:13 ivo Exp $, ViennaRNA-2.1.9
%%CreationDate: Thu Jul 16 15:13:58 2015
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 66 210 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: -d2 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  72 216 translate
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  72 6 mul size div dup scale
  size xmin sub xmax sub 2 div size ymin sub ymax sub 2 div
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
UUGUUACCUGGAGUUUCCUCAACACACUUCACAUCUGCUAGGCCCUAUUACAAUUGCGCAAUGUGGGGUCUGCAAUUGGUAGUGAAGUGUUUGGGGGAACUCUAGGUGGCAC\
) def
/coor [
[82.67556000 559.30377197]
[88.72190094 543.46459961]
[88.72190094 528.46459961]
[88.72190094 513.46459961]
[88.72190094 498.46463013]
[88.72190094 483.46463013]
[88.72190094 468.46463013]
[88.72190094 453.46463013]
[88.72190094 438.46463013]
[88.72190094 423.46463013]
[88.72190094 408.46463013]
[88.72190094 393.46463013]
[88.72190094 378.46463013]
[88.72190094 363.46463013]
[88.72190094 348.46463013]
[88.72190094 333.46463013]
[88.72190094 318.46463013]
[88.72190094 303.46463013]
[88.72190094 288.46463013]
[88.72190094 273.46463013]
[88.72190094 258.46463013]
[88.72190094 243.46461487]
[85.53008270 236.68046570]
[88.93620300 228.04908752]
[89.35317230 213.05488586]
[89.77014160 198.06068420]
[90.18711853 183.06648254]
[90.60408783 168.07228088]
[91.02105713 153.07807922]
[91.43803406 138.08387756]
[91.85500336 123.08966827]
[92.27197266 108.09546661]
[92.48048401 93.09691620]
[92.48048401 78.09691620]
[92.48048401 63.09691620]
[91.85512543 48.10995483]
[90.60549927 33.16209793]
[89.35587311 18.21424294]
[85.47533417 9.78549767]
[88.28518677 2.83445358]
[87.45156097 -12.14236450]
[86.61794281 -27.11918259]
[85.78431702 -42.09600067]
[84.95069885 -57.07281876]
[84.11708069 -72.04963684]
[83.28345490 -87.02645111]
[82.44983673 -102.00327301]
[81.61621094 -116.98008728]
[67.25926208 -121.97472382]
[55.90985870 -132.08706665]
[49.29870224 -145.77505493]
[48.43394852 -160.95137024]
[53.44746780 -175.30174255]
[63.57472992 -186.63783264]
[77.27140808 -193.23098755]
[92.44884491 -194.07577515]
[106.79261017 -189.04338074]
[118.11537170 -178.90121460]
[124.69049072 -165.19587708]
[125.51531219 -150.01733398]
[120.46405792 -135.68020630]
[110.30700684 -124.37079620]
[96.59303284 -117.81371307]
[97.42665100 -102.83689117]
[98.26027679 -87.86007690]
[99.09389496 -72.88325500]
[99.92752075 -57.90644073]
[100.76113892 -42.92962265]
[101.59475708 -27.95280457]
[102.42838287 -12.97598553]
[103.26200104 2.00083208]
[104.30372620 16.96461487]
[105.55335236 31.91247177]
[106.80297852 46.86032867]
[109.38330078 49.45649719]
[110.76056671 53.48734283]
[110.24874878 58.33732224]
[107.48048401 63.09691620]
[107.48048401 78.09691620]
[107.48048401 93.09691620]
[110.66651917 100.63509369]
[107.26618195 108.51243591]
[106.84920502 123.50663757]
[106.43223572 138.50083923]
[106.01526642 153.49504089]
[105.59828949 168.48925781]
[105.18132019 183.48345947]
[104.76434326 198.47766113]
[104.34737396 213.47186279]
[103.93040466 228.46606445]
[103.72190094 243.46461487]
[103.72190094 258.46463013]
[103.72190094 273.46463013]
[103.72190094 288.46463013]
[103.72190094 303.46463013]
[103.72190094 318.46463013]
[103.72190094 333.46463013]
[103.72190094 348.46463013]
[103.72190094 363.46463013]
[103.72190094 378.46463013]
[103.72190094 393.46463013]
[103.72190094 408.46463013]
[103.72190094 423.46463013]
[103.72190094 438.46463013]
[103.72190094 453.46463013]
[103.72190094 468.46463013]
[103.72190094 483.46463013]
[103.72190094 498.46463013]
[103.72190094 513.46459961]
[103.72190094 528.46459961]
[103.72190094 543.46459961]
[109.76823425 559.30377197]
] def
/pairs [
[2 111]
[3 110]
[4 109]
[5 108]
[6 107]
[7 106]
[8 105]
[9 104]
[10 103]
[11 102]
[12 101]
[13 100]
[14 99]
[15 98]
[16 97]
[17 96]
[18 95]
[19 94]
[20 93]
[21 92]
[22 91]
[24 90]
[25 89]
[26 88]
[27 87]
[28 86]
[29 85]
[30 84]
[31 83]
[32 82]
[33 80]
[34 79]
[35 78]
[36 74]
[37 73]
[38 72]
[40 71]
[41 70]
[42 69]
[43 68]
[44 67]
[45 66]
[46 65]
[47 64]
[48 63]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
