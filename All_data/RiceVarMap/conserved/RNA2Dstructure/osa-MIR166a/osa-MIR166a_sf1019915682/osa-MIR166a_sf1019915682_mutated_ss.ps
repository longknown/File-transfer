%!PS-Adobe-3.0 EPSF-3.0
%%Creator: PS_dot.c,v 1.38 2007/02/02 15:18:13 ivo Exp $, ViennaRNA-2.1.9
%%CreationDate: Thu Jul 16 15:13:51 2015
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 66 210 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: -d2 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  72 216 translate
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  72 6 mul size div dup scale
  size xmin sub xmax sub 2 div size ymin sub ymax sub 2 div
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
UGAAGCUAUUUGCUUCUGAGUGGAAUGUUGUCUGGUUCAAGGUCUCAUACACCUUGCGGUUUUGAGGAUGAUUUGUGCAAGGUUUUUCAUUCCUCUCAUCCGUGGGAUCUCGGACCAGGCUUCAUUCCCCUCAGAGAUAGCUUCA\
) def
/coor [
[62.13518906 594.74615479]
[62.13518906 579.74615479]
[62.13518906 564.74615479]
[62.13518906 549.74615479]
[62.13518906 534.74615479]
[62.13518906 519.74615479]
[62.13518906 504.74615479]
[62.13518906 489.74615479]
[62.13518906 474.74615479]
[62.13518906 459.74615479]
[60.17304230 457.64849854]
[58.95504379 454.61938477]
[58.85093689 450.95010376]
[60.11371613 447.06405640]
[62.83604813 443.47055054]
[64.12551880 428.52609253]
[65.41499329 413.58160400]
[66.70446777 398.63714600]
[67.99393463 383.69265747]
[69.28340912 368.74819946]
[62.66884613 355.40289307]
[71.56383514 342.31893921]
[72.85330963 327.37448120]
[74.14277649 312.42999268]
[75.43225098 297.48553467]
[76.72172546 282.54107666]
[78.01119232 267.59658813]
[68.25682068 256.39892578]
[69.35163879 241.22473145]
[81.16291809 231.06936646]
[82.45238495 216.12489319]
[83.74185944 201.18041992]
[85.03133392 186.23594666]
[86.32080078 171.29147339]
[87.61027527 156.34700012]
[88.89974976 141.40252686]
[90.18921661 126.45806122]
[91.47869110 111.51358795]
[85.72908020 98.76864624]
[93.57683563 87.19693756]
[94.86631012 72.25246429]
[96.15577698 57.30799484]
[97.44525146 42.36352158]
[98.73472595 27.41905022]
[100.02419281 12.47457695]
[101.31366730 -2.46989584]
[90.55266571 7.98002911]
[75.88145447 11.10338688]
[61.79712677 5.94278717]
[52.61690903 -5.91991186]
[51.15478134 -20.84848022]
[57.85891724 -34.26692200]
[70.67432404 -42.06212997]
[85.67275238 -41.84466934]
[98.25677490 -33.68119812]
[104.56943512 -20.07168198]
[108.71089172 -34.48862839]
[112.85234833 -48.90557480]
[116.99379730 -63.32252121]
[106.44816589 -74.40118408]
[102.88726044 -89.17334747]
[107.17005157 -103.64829254]
[118.05033112 -113.96699524]
[132.53712463 -117.43087006]
[136.67857361 -131.84780884]
[140.82003784 -146.26475525]
[144.96148682 -160.68170166]
[149.10293579 -175.09864807]
[153.08905029 -189.55932617]
[156.91934204 -204.06204224]
[160.74964905 -218.56475830]
[148.44885254 -227.45603943]
[140.19389343 -240.19261169]
[137.10118103 -255.05194092]
[139.58898926 -270.02441406]
[147.32083130 -283.08517456]
[159.25108337 -292.46780396]
[173.76623535 -296.90341187]
[188.90325928 -295.79208374]
[202.61499023 -289.28417969]
[213.04701233 -278.25979614]
[218.78851318 -264.20989990]
[219.06297302 -249.03462219]
[213.83329773 -234.78628540]
[203.80673218 -223.39189148]
[190.33929443 -216.39239502]
[175.25236511 -214.73445129]
[171.42205811 -200.23173523]
[167.59176636 -185.72901917]
[168.93449402 -178.40574646]
[163.51988220 -170.95719910]
[159.37843323 -156.54025269]
[155.23698425 -142.12330627]
[151.09552002 -127.70635986]
[146.95407104 -113.28941345]
[157.39382935 -102.66506195]
[161.13887024 -88.14505005]
[157.08642578 -73.60393524]
[146.22837830 -62.97380447]
[131.41075134 -59.18106842]
[127.26929474 -44.76412201]
[123.12783813 -30.34717369]
[118.98638153 -15.93022728]
[116.25814056 -1.18042386]
[114.96866608 13.76404858]
[113.67919922 28.70852089]
[112.38972473 43.65299225]
[111.10025024 58.59746552]
[109.81078339 73.54193878]
[108.52130890 88.48641205]
[114.27091980 101.23135376]
[106.42316437 112.80306244]
[105.13368988 127.74753571]
[103.84422302 142.69200134]
[102.55474854 157.63647461]
[101.26527405 172.58094788]
[99.97580719 187.52542114]
[98.68633270 202.46989441]
[97.39685822 217.41436768]
[96.10739136 232.35884094]
[106.00455475 244.38729858]
[104.48395538 259.52474976]
[92.95566559 268.88604736]
[91.66619110 283.83053589]
[90.37672424 298.77499390]
[89.08724976 313.71948242]
[87.79777527 328.66394043]
[86.50830841 343.60842896]
[93.03063965 358.02264404]
[84.22788239 370.03765869]
[82.93840790 384.98214722]
[81.64893341 399.92660522]
[80.35946655 414.87109375]
[79.06999207 429.81555176]
[77.78051758 444.76004028]
[77.13518524 459.74615479]
[77.13518524 474.74615479]
[77.13518524 489.74615479]
[77.13518524 504.74615479]
[77.13518524 519.74615479]
[77.13518524 534.74615479]
[77.13518524 549.74615479]
[77.13518524 564.74615479]
[77.13518524 579.74615479]
[77.13518524 594.74615479]
] def
/pairs [
[1 145]
[2 144]
[3 143]
[4 142]
[5 141]
[6 140]
[7 139]
[8 138]
[9 137]
[10 136]
[15 135]
[16 134]
[17 133]
[18 132]
[19 131]
[20 130]
[22 128]
[23 127]
[24 126]
[25 125]
[26 124]
[27 123]
[30 120]
[31 119]
[32 118]
[33 117]
[34 116]
[35 115]
[36 114]
[37 113]
[38 112]
[40 110]
[41 109]
[42 108]
[43 107]
[44 106]
[45 105]
[46 104]
[56 103]
[57 102]
[58 101]
[59 100]
[64 95]
[65 94]
[66 93]
[67 92]
[68 91]
[69 89]
[70 88]
[71 87]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
