%!PS-Adobe-3.0 EPSF-3.0
%%Creator: PS_dot.c,v 1.38 2007/02/02 15:18:13 ivo Exp $, ViennaRNA-2.1.9
%%CreationDate: Thu Jul 16 15:13:51 2015
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 66 210 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: -d2 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  72 216 translate
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  72 6 mul size div dup scale
  size xmin sub xmax sub 2 div size ymin sub ymax sub 2 div
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
UGAAGCUAUUUGCUUCUGAGUGGAAUGUUGUCUGGUUCAAGGUCUCAUGCACCUUGCGGUUUUGAGGAUGAUUUGUGCAAGGUUUUUCAUUCCUCUCAUCCGUGGGAUCUCGGACCAGGCUUCAUUCCCCUCAGAGAUAGCUUCA\
) def
/coor [
[51.03743744 742.08892822]
[51.03743744 727.08892822]
[51.03743744 712.08892822]
[51.03743744 697.08892822]
[51.03743744 682.08892822]
[51.03743744 667.08892822]
[51.03743744 652.08892822]
[51.03743744 637.08892822]
[51.03743744 622.08892822]
[51.03743744 607.08892822]
[49.07529068 604.99127197]
[47.85729599 601.96215820]
[47.75318527 598.29290771]
[49.01596451 594.40679932]
[51.73829651 590.81335449]
[53.02777100 575.86883545]
[54.31724167 560.92437744]
[55.60671234 545.97991943]
[56.89618683 531.03546143]
[58.18565750 516.09094238]
[51.57109451 502.74566650]
[60.46608353 489.66171265]
[61.75555420 474.71725464]
[63.04502869 459.77276611]
[64.33450317 444.82830811]
[65.62397003 429.88381958]
[66.91344452 414.93936157]
[57.15906525 403.74169922]
[58.25388718 388.56750488]
[70.06516266 378.41213989]
[71.35463715 363.46768188]
[72.64411163 348.52319336]
[73.93357849 333.57873535]
[75.22305298 318.63424683]
[76.51252747 303.68978882]
[77.80199432 288.74530029]
[79.09146881 273.80084229]
[80.38094330 258.85635376]
[73.76638031 245.51106262]
[82.66136932 232.42710876]
[83.95083618 217.48263550]
[85.24031067 202.53816223]
[86.52978516 187.59370422]
[87.81925201 172.64923096]
[89.10872650 157.70475769]
[90.39820099 142.76028442]
[91.68767548 127.81580353]
[92.97714233 112.87133789]
[87.31152344 98.98246002]
[75.93693542 89.20397949]
[64.56234741 79.42549133]
[48.60984039 73.68495178]
[49.70994568 56.76673508]
[66.27153015 53.14041519]
[74.34083557 68.05090332]
[85.71542358 77.82939148]
[97.09001160 87.60787201]
[111.46156311 83.31155396]
[115.60301971 68.89460754]
[105.05738068 57.81594086]
[101.49647522 43.04378128]
[105.77927399 28.56883621]
[116.65955353 18.25013542]
[131.14634705 14.78626060]
[135.28779602 0.36931360]
[139.42924500 -14.04763317]
[143.57070923 -28.46458054]
[147.71215820 -42.88152695]
[151.69827271 -57.34219742]
[155.52856445 -71.84490967]
[159.35887146 -86.34763336]
[147.05807495 -95.23892212]
[138.80311584 -107.97548676]
[135.71040344 -122.83480835]
[138.19819641 -137.80729675]
[145.93005371 -150.86802673]
[157.86029053 -160.25067139]
[172.37545776 -164.68627930]
[187.51248169 -163.57496643]
[201.22419739 -157.06706238]
[211.65623474 -146.04266357]
[217.39773560 -131.99276733]
[217.67219543 -116.81748962]
[212.44252014 -102.56916046]
[202.41595459 -91.17475891]
[188.94851685 -84.17527008]
[173.86158752 -82.51733398]
[170.03128052 -68.01461029]
[166.20098877 -53.51189804]
[167.54371643 -46.18861389]
[162.12910461 -38.74007034]
[157.98765564 -24.32312584]
[153.84619141 -9.90617847]
[149.70474243 4.51076841]
[145.56329346 18.92771530]
[156.00305176 29.55206680]
[159.74809265 44.07207870]
[155.69564819 58.61319351]
[144.83760071 69.24332428]
[130.01997375 73.03606415]
[125.87850952 87.45301056]
[107.92161560 114.16080475]
[106.63214111 129.10528564]
[105.34267426 144.04975891]
[104.05319977 158.99421692]
[102.76372528 173.93869019]
[101.47425842 188.88316345]
[100.18478394 203.82763672]
[98.89530945 218.77210999]
[97.60584259 233.71658325]
[104.12816620 248.13081360]
[95.32541656 260.14584351]
[94.03594208 275.09030151]
[92.74646759 290.03479004]
[91.45700073 304.97924805]
[90.16752625 319.92373657]
[88.87805176 334.86819458]
[87.58858490 349.81265259]
[86.29911041 364.75714111]
[85.00963593 379.70159912]
[94.90680695 391.73007202]
[93.38620758 406.86752319]
[81.85791779 416.22882080]
[80.56844330 431.17330933]
[79.27896881 446.11776733]
[77.98950195 461.06225586]
[76.70002747 476.00671387]
[75.41055298 490.95120239]
[81.93288422 505.36541748]
[73.13012695 517.38043213]
[71.84066010 532.32489014]
[70.55118561 547.26940918]
[69.26171112 562.21386719]
[67.97224426 577.15832520]
[66.68276978 592.10278320]
[66.03743744 607.08892822]
[66.03743744 622.08892822]
[66.03743744 637.08892822]
[66.03743744 652.08892822]
[66.03743744 667.08892822]
[66.03743744 682.08892822]
[66.03743744 697.08892822]
[66.03743744 712.08892822]
[66.03743744 727.08892822]
[66.03743744 742.08892822]
] def
/pairs [
[1 145]
[2 144]
[3 143]
[4 142]
[5 141]
[6 140]
[7 139]
[8 138]
[9 137]
[10 136]
[15 135]
[16 134]
[17 133]
[18 132]
[19 131]
[20 130]
[22 128]
[23 127]
[24 126]
[25 125]
[26 124]
[27 123]
[30 120]
[31 119]
[32 118]
[33 117]
[34 116]
[35 115]
[36 114]
[37 113]
[38 112]
[40 110]
[41 109]
[42 108]
[43 107]
[44 106]
[45 105]
[46 104]
[47 103]
[48 102]
[49 57]
[50 56]
[51 55]
[58 101]
[59 100]
[64 95]
[65 94]
[66 93]
[67 92]
[68 91]
[69 89]
[70 88]
[71 87]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
