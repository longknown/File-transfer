%!PS-Adobe-3.0 EPSF-3.0
%%Creator: PS_dot.c,v 1.38 2007/02/02 15:18:13 ivo Exp $, ViennaRNA-2.1.9
%%CreationDate: Thu Jul 16 15:13:57 2015
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 66 210 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: -d2 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  72 216 translate
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  72 6 mul size div dup scale
  size xmin sub xmax sub 2 div size ymin sub ymax sub 2 div
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
UCGGCCUGAGGAAACUAGUGGAGGACUCCAAAGGGAUCGCAUUGAUCUGGCUAGCUAUCUCGAUCGAUCGCCUCAUCGAUCGACGACGACGUGCGUGAUCGAUCAGUGCAAUCCCUUUGGAAUUUUCCGCUU\
) def
/coor [
[-36.31557846 590.45886230]
[-36.91073608 605.57513428]
[-42.14984131 619.76690674]
[-51.51962280 631.64385986]
[-64.10212708 640.04241943]
[-78.66464996 644.13977051]
[-93.78049469 643.53448486]
[-107.96877289 638.28588867]
[-119.83945465 628.90814209]
[-128.22958374 616.32000732]
[-132.31716919 601.75476074]
[-131.70175171 586.63934326]
[-126.44363403 572.45458984]
[-117.05794525 560.59014893]
[-104.46419525 552.20849609]
[-89.89620209 548.13067627]
[-74.78117371 548.75616455]
[-69.57695770 534.68792725]
[-64.37274170 520.61968994]
[-59.16851807 506.55139160]
[-53.96429825 492.48312378]
[-48.76007843 478.41485596]
[-43.55586243 464.34658813]
[-38.35164261 450.27832031]
[-33.14742279 436.21005249]
[-35.98841476 421.58892822]
[-23.94377899 411.33038330]
[-18.73955917 397.26211548]
[-13.53534031 383.19384766]
[-8.33112144 369.12557983]
[-3.12690163 355.05734253]
[2.07731771 340.98907471]
[7.28153706 326.92080688]
[12.48575687 312.85253906]
[17.68997574 298.78427124]
[22.89419556 284.71600342]
[28.09841537 270.64773560]
[25.25742340 256.02658081]
[37.30205917 245.76805115]
[42.50627518 231.69979858]
[47.71049500 217.63153076]
[52.91471481 203.56326294]
[58.11893463 189.49499512]
[63.32315445 175.42672729]
[68.52737427 161.35845947]
[73.73159027 147.29019165]
[78.93581390 133.22193909]
[78.29998016 125.78629303]
[84.43266296 118.88528442]
[89.96770477 104.94386292]
[95.33770752 90.93804169]
[88.98249054 76.71661377]
[94.46071625 62.52352905]
[108.05783844 56.55244446]
[113.26206207 42.48417664]
[105.65837097 26.78052521]
[111.60267639 10.73505688]
[126.98526001 4.04434776]
[131.85575867 -10.14291096]
[136.55834961 -24.38670158]
[141.09240723 -38.68503952]
[145.62644958 -52.98337555]
[145.24334717 -62.20763016]
[150.44012451 -67.56360626]
[155.31060791 -81.75086975]
[160.18110657 -95.93812561]
[165.05160522 -110.12538147]
[169.92208862 -124.31264496]
[174.79258728 -138.49990845]
[179.66307068 -152.68716431]
[172.49758911 -166.77372742]
[177.47091675 -181.77511597]
[191.63244629 -188.79127502]
[206.58041382 -183.65962219]
[213.44645691 -169.42469788]
[208.15705872 -154.53181458]
[193.85032654 -147.81666565]
[188.97984314 -133.62940979]
[184.10934448 -119.44215393]
[179.23886108 -105.25489044]
[174.36836243 -91.06763458]
[169.49787903 -76.88037872]
[164.62738037 -62.69311905]
[159.92478943 -48.44932556]
[155.39073181 -34.15098953]
[150.85668945 -19.85265350]
[151.84295654 -12.45533657]
[146.04301453 -5.27241898]
[141.17251587 8.91483974]
[148.41569519 19.63835716]
[148.12594604 32.77086639]
[140.18441772 43.47808838]
[127.33032990 47.68839645]
[122.12610626 61.75666428]
[128.56382751 75.13916016]
[123.48641968 89.48052216]
[109.40597534 96.14226532]
[109.78091431 104.27742004]
[103.90912628 110.47890472]
[98.37408447 124.42033386]
[93.00408173 138.42614746]
[87.79985809 152.49441528]
[82.59564209 166.56268311]
[77.39141846 180.63095093]
[72.18720245 194.69921875]
[66.98297882 208.76748657]
[61.77876282 222.83573914]
[56.57454300 236.90400696]
[51.37032318 250.97227478]
[53.83907318 266.59967041]
[42.16667938 275.85195923]
[36.96245956 289.92022705]
[31.75824165 303.98849487]
[26.55402184 318.05676270]
[21.34980202 332.12503052]
[16.14558411 346.19326782]
[10.94136429 360.26153564]
[5.73714447 374.32980347]
[0.53292525 388.39807129]
[-4.67129421 402.46633911]
[-9.87551308 416.53460693]
[-7.40676212 432.16201782]
[-19.07915688 441.41427612]
[-24.28337479 455.48254395]
[-29.48759460 469.55081177]
[-34.69181442 483.61907959]
[-39.89603424 497.68734741]
[-45.10025406 511.75561523]
[-50.30447388 525.82385254]
[-55.50869370 539.89215088]
[-60.71290970 553.96038818]
[-48.82966995 563.32220459]
] def
/pairs [
[17 131]
[18 130]
[19 129]
[20 128]
[21 127]
[22 126]
[23 125]
[24 124]
[25 123]
[27 121]
[28 120]
[29 119]
[30 118]
[31 117]
[32 116]
[33 115]
[34 114]
[35 113]
[36 112]
[37 111]
[39 109]
[40 108]
[41 107]
[42 106]
[43 105]
[44 104]
[45 103]
[46 102]
[47 101]
[49 100]
[50 99]
[51 97]
[54 94]
[55 93]
[58 89]
[59 88]
[60 86]
[61 85]
[62 84]
[64 83]
[65 82]
[66 81]
[67 80]
[68 79]
[69 78]
[70 77]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
