%!PS-Adobe-3.0 EPSF-3.0
%%Creator: PS_dot.c,v 1.38 2007/02/02 15:18:13 ivo Exp $, ViennaRNA-2.1.9
%%CreationDate: Thu Jul 16 15:13:51 2015
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 66 210 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: -d2 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  72 216 translate
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  72 6 mul size div dup scale
  size xmin sub xmax sub 2 div size ymin sub ymax sub 2 div
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
GGUGGCUUGUGGGGAAUGUUGGCUGGCUCGAGGCAUCCACAUCUUAAUUCCUCUCCGGCGAUCGAGCCGGCUCGGGCGUGUGGAAGCGUCGGACCAGGCUUCAUUCCUCGCAAGCCGAU\
) def
/coor [
[85.57711029 544.92407227]
[82.21823120 529.23657227]
[92.50000000 516.92132568]
[92.50000000 501.92132568]
[92.50000000 486.92132568]
[92.50000000 471.92132568]
[92.50000000 456.92132568]
[92.50000000 441.92132568]
[92.50000000 426.92132568]
[92.50000000 411.92132568]
[92.50000000 396.92132568]
[92.50000000 381.92132568]
[92.50000000 366.92132568]
[92.50000000 351.92132568]
[92.50000000 336.92132568]
[92.50000000 321.92132568]
[92.50000000 306.92132568]
[92.50000000 291.92132568]
[81.81912994 281.60363770]
[81.60544586 266.39151001]
[92.50000000 255.25839233]
[84.76270294 242.53111267]
[92.50000000 228.73094177]
[92.50000000 213.73094177]
[92.50000000 198.73094177]
[92.50000000 183.73094177]
[84.76270294 171.00367737]
[92.50000000 157.20350647]
[92.50000000 142.20350647]
[92.50000000 127.20349884]
[92.50000000 112.20349884]
[85.67605591 100.00000000]
[92.50000000 87.79650116]
[92.50000000 72.79650116]
[84.76270294 58.99632645]
[92.50000000 46.26905823]
[92.50000000 31.26905632]
[92.50000000 16.26905632]
[92.50000000 1.26905644]
[92.50000000 -13.73094368]
[92.50000000 -28.73094368]
[92.50000000 -43.73094177]
[85.85101318 -47.87663651]
[81.15363312 -54.06180954]
[78.98356628 -61.44747162]
[79.57781219 -69.05332947]
[82.80981445 -75.88785553]
[88.21234894 -81.07756805]
[95.04447174 -83.97859192]
[97.00236511 -98.85026550]
[98.96025848 -113.72193909]
[87.87694550 -124.42083740]
[85.24938965 -139.41914368]
[91.87879944 -152.92895508]
[105.03465271 -159.86158752]
[106.99254608 -174.73326111]
[108.95043945 -189.60493469]
[110.90833282 -204.47660828]
[112.86622620 -219.34828186]
[103.04755402 -231.73251343]
[104.94464874 -247.42253113]
[117.43199921 -257.10971069]
[133.10108948 -255.04684448]
[142.65570068 -242.45777893]
[140.42729187 -226.81137085]
[127.73789978 -217.39038086]
[125.78000641 -202.51870728]
[123.82211304 -187.64703369]
[121.86421967 -172.77536011]
[119.90632629 -157.90370178]
[130.81961060 -147.80229187]
[133.72653198 -133.03700256]
[127.30666351 -119.22981262]
[113.83193207 -111.76404572]
[111.87403870 -96.89237213]
[109.91614532 -82.02069855]
[121.03221893 -62.52692032]
[107.50000000 -43.73094177]
[107.50000000 -28.73094368]
[107.50000000 -13.73094368]
[107.50000000 1.26905644]
[107.50000000 16.26905632]
[107.50000000 31.26905632]
[107.50000000 46.26905823]
[115.23729706 58.99632645]
[107.50000000 72.79650116]
[107.50000000 87.79650116]
[114.32394409 100.00000000]
[107.50000000 112.20349884]
[107.50000000 127.20349884]
[107.50000000 142.20350647]
[107.50000000 157.20350647]
[115.23729706 171.00367737]
[107.50000000 183.73094177]
[107.50000000 198.73094177]
[107.50000000 213.73094177]
[107.50000000 228.73094177]
[115.23729706 242.53111267]
[107.50000000 255.25839233]
[118.39455414 266.39151001]
[118.18087006 281.60363770]
[107.50000000 291.92132568]
[107.50000000 306.92132568]
[107.50000000 321.92132568]
[107.50000000 336.92132568]
[107.50000000 351.92132568]
[107.50000000 366.92132568]
[107.50000000 381.92132568]
[107.50000000 396.92132568]
[107.50000000 411.92132568]
[107.50000000 426.92132568]
[107.50000000 441.92132568]
[107.50000000 456.92132568]
[107.50000000 471.92132568]
[107.50000000 486.92132568]
[107.50000000 501.92132568]
[107.50000000 516.92132568]
[117.78176880 529.23657227]
[114.42288971 544.92407227]
] def
/pairs [
[3 117]
[4 116]
[5 115]
[6 114]
[7 113]
[8 112]
[9 111]
[10 110]
[11 109]
[12 108]
[13 107]
[14 106]
[15 105]
[16 104]
[17 103]
[18 102]
[21 99]
[23 97]
[24 96]
[25 95]
[26 94]
[28 92]
[29 91]
[30 90]
[31 89]
[33 87]
[34 86]
[36 84]
[37 83]
[38 82]
[39 81]
[40 80]
[41 79]
[42 78]
[49 76]
[50 75]
[51 74]
[55 70]
[56 69]
[57 68]
[58 67]
[59 66]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
