%!PS-Adobe-3.0 EPSF-3.0
%%Creator: PS_dot.c,v 1.38 2007/02/02 15:18:13 ivo Exp $, ViennaRNA-2.1.9
%%CreationDate: Thu Jul 16 15:14:02 2015
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 66 210 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: -d2 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  72 216 translate
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  72 6 mul size div dup scale
  size xmin sub xmax sub 2 div size ymin sub ymax sub 2 div
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
CCCCGUCCUAUAAUAUAAGGGAUUUUGAGUUUUUGCUUGCACUGUUUGACCACUCGUCUUAUUUAAAUUUUUUUUGGAAUUAUUAUUAUUUUUGACUUAUUUUAUUAUCCAAAGUACUUUAAGCAUAACUUUUCGUUUUUUAUAUUUGUACAAAUUUUUUGAAUAAAACGAGUGGUCAAACAAUACAAACAAAAACUCAAAAUCCCUUAUAUUAUGGGACGGAGG\
) def
/coor [
[106.17423248 1106.18627930]
[106.17423248 1091.18627930]
[106.06997681 1076.18664551]
[105.86146545 1061.18798828]
[105.65296173 1046.18945312]
[105.44445801 1031.19091797]
[105.23595428 1016.19238281]
[105.02744293 1001.19384766]
[104.81893921 986.19525146]
[104.61043549 971.19671631]
[104.40192413 956.19818115]
[104.19342041 941.19964600]
[103.98491669 926.20104980]
[103.77640533 911.20251465]
[103.56790161 896.20397949]
[103.35939789 881.20544434]
[103.15088654 866.20684814]
[102.94238281 851.20831299]
[102.73387909 836.20977783]
[102.52537537 821.21124268]
[102.31686401 806.21264648]
[102.10836029 791.21411133]
[101.89985657 776.21557617]
[101.69134521 761.21704102]
[101.48284149 746.21844482]
[101.27433777 731.21990967]
[101.06582642 716.22137451]
[100.85732269 701.22283936]
[100.64881897 686.22424316]
[100.44030762 671.22570801]
[100.23180389 656.22717285]
[100.02330017 641.22863770]
[99.81479645 626.23004150]
[99.60628510 611.23150635]
[99.39778137 596.23297119]
[91.48431396 583.61444092]
[99.02903748 569.70806885]
[98.82053375 554.70953369]
[98.61203003 539.71099854]
[86.35536957 531.29003906]
[81.34831238 517.09869385]
[85.70868683 502.50967407]
[97.96513367 493.17767334]
[97.75662994 478.17913818]
[97.54811859 463.18057251]
[97.33961487 448.18203735]
[97.13111115 433.18347168]
[96.92259979 418.18493652]
[96.71409607 403.18637085]
[96.50559235 388.18783569]
[96.29708099 373.18927002]
[96.08857727 358.19073486]
[95.88007355 343.19216919]
[95.67156219 328.19363403]
[95.46305847 313.19506836]
[95.25455475 298.19653320]
[95.04605103 283.19796753]
[87.13258362 270.57949829]
[94.67730713 256.67309570]
[94.46879578 241.67454529]
[94.26029205 226.67599487]
[94.05178833 211.67744446]
[93.84328461 196.67889404]
[93.63477325 181.68034363]
[93.42626953 166.68179321]
[93.21776581 151.68324280]
[93.00925446 136.68469238]
[78.54190063 131.60916138]
[67.03421021 120.95892334]
[60.57465744 106.29057312]
[60.48274994 89.91519928]
[67.04983521 74.53495789]
[79.44588470 62.79712296]
[71.52855682 50.05679703]
[63.61122513 37.31647110]
[55.69389725 24.57614517]
[47.77656937 11.83581829]
[39.85924149 -0.90450764]
[25.73822212 4.30910015]
[10.85671711 6.57310295]
[-4.17588472 5.79479074]
[-18.74400902 2.00603533]
[-32.25109863 -4.63801622]
[-44.14404678 -13.86529446]
[-53.93584442 -25.29794693]
[-61.22552872 -38.46781540]
[-65.71458435 -52.83560181]
[-67.21919250 -67.81295013]
[-65.67773438 -82.78655243]
[-61.15333939 -97.14324951]
[-53.83127213 -110.29514313]
[-44.01137161 -121.70366669]
[-32.09575272 -130.90165710]
[-18.57235718 -137.51245117]
[-3.99495554 -141.26535034]
[11.03951550 -142.00666809]
[25.91540527 -139.70605469]
[40.02355194 -134.45771790]
[52.78623962 -126.47657013]
[63.68083954 -116.08943176]
[72.26123047 -103.72166443]
[78.17604828 -89.87969971]
[81.18308258 -75.13037872]
[81.15920258 -60.07765961]
[78.10537720 -45.33794785]
[72.14666748 -31.51482773]
[63.52707291 -19.17434692]
[52.59956741 -8.82183647]
[60.51689529 3.91848993]
[68.43422699 16.65881538]
[76.35155487 29.39914131]
[84.26888275 42.13946915]
[92.18621063 54.87979507]
[107.18584442 54.77553940]
[114.92531586 41.92638779]
[122.66477966 29.07723999]
[130.40425110 16.22809029]
[119.71819305 4.68236732]
[112.72215271 -9.39222336]
[109.97498322 -24.85298920]
[111.69097137 -40.44726944]
[117.72309113 -54.91391754]
[127.57563019 -67.08531189]
[140.44485474 -75.98156738]
[155.28462219 -80.88945770]
[170.89140320 -81.41954041]
[186.00183105 -77.53710938]
[193.56195068 -90.49259949]
[201.12205505 -103.44808197]
[198.44866943 -119.26682281]
[209.25634766 -131.12319946]
[225.25436401 -129.92201233]
[234.17042542 -116.58471680]
[229.16487122 -101.34253693]
[214.07754517 -95.88796997]
[206.51744080 -82.93248749]
[198.95732117 -69.97699738]
[209.00863647 -59.76588821]
[216.07777405 -47.28908920]
[219.67669678 -33.39523697]
[219.55361938 -19.03123665]
[215.71067810 -5.17771292]
[208.40414429 7.21792603]
[198.12741089 17.30628967]
[185.57760620 24.39419937]
[171.60836792 27.99232292]
[157.17178345 27.84893990]
[143.25340271 23.96755981]
[135.51393127 36.81670761]
[127.77446747 49.66585922]
[120.03499603 62.51500702]
[131.06349182 72.08072662]
[138.03622437 84.61627960]
[140.26560974 98.52840424]
[137.65470886 112.11475372]
[130.68835449 123.77213287]
[120.35456848 132.18557739]
[108.00780487 136.47618103]
[108.21631622 151.47473145]
[108.42481995 166.47328186]
[108.63332367 181.47183228]
[108.84183502 196.47038269]
[109.05033875 211.46893311]
[109.25884247 226.46748352]
[109.46734619 241.46603394]
[109.67585754 256.46459961]
[117.60424042 270.15588379]
[110.04460144 282.98947144]
[110.25310516 297.98800659]
[110.46160889 312.98657227]
[110.67011261 327.98510742]
[110.87862396 342.98367310]
[111.08712769 357.98223877]
[111.29563141 372.98077393]
[111.50414276 387.97933960]
[111.71264648 402.97787476]
[111.92115021 417.97644043]
[112.12966156 432.97497559]
[112.33816528 447.97354126]
[112.54666901 462.97207642]
[112.75518036 477.97064209]
[112.96368408 492.96917725]
[125.47480011 501.95684814]
[130.23904419 516.41906738]
[125.62841034 530.74407959]
[113.61058044 539.50250244]
[113.81908417 554.50103760]
[114.02758789 569.49957275]
[121.95597076 583.19085693]
[114.39633179 596.02447510]
[114.60483551 611.02301025]
[114.81334686 626.02154541]
[115.02185059 641.02008057]
[115.23035431 656.01867676]
[115.43886566 671.01721191]
[115.64736938 686.01574707]
[115.85587311 701.01428223]
[116.06437683 716.01287842]
[116.27288818 731.01141357]
[116.48139191 746.00994873]
[116.68989563 761.00848389]
[116.89840698 776.00708008]
[117.10691071 791.00561523]
[117.31541443 806.00415039]
[117.52392578 821.00274658]
[117.73242950 836.00128174]
[117.94093323 850.99981689]
[118.14944458 865.99835205]
[118.35794830 880.99694824]
[118.56645203 895.99548340]
[118.77495575 910.99401855]
[118.98346710 925.99255371]
[119.19197083 940.99114990]
[119.40047455 955.98968506]
[119.60898590 970.98822021]
[119.81748962 985.98675537]
[120.02599335 1000.98535156]
[120.23450470 1015.98388672]
[120.44300842 1030.98242188]
[120.65151215 1045.98095703]
[120.86002350 1060.97949219]
[121.06852722 1075.97802734]
[124.31405640 1084.50463867]
[121.17423248 1091.18627930]
[121.17423248 1106.18627930]
] def
/pairs [
[1 225]
[2 224]
[3 222]
[4 221]
[5 220]
[6 219]
[7 218]
[8 217]
[9 216]
[10 215]
[11 214]
[12 213]
[13 212]
[14 211]
[15 210]
[16 209]
[17 208]
[18 207]
[19 206]
[20 205]
[21 204]
[22 203]
[23 202]
[24 201]
[25 200]
[26 199]
[27 198]
[28 197]
[29 196]
[30 195]
[31 194]
[32 193]
[33 192]
[34 191]
[35 190]
[37 188]
[38 187]
[39 186]
[43 182]
[44 181]
[45 180]
[46 179]
[47 178]
[48 177]
[49 176]
[50 175]
[51 174]
[52 173]
[53 172]
[54 171]
[55 170]
[56 169]
[57 168]
[59 166]
[60 165]
[61 164]
[62 163]
[63 162]
[64 161]
[65 160]
[66 159]
[67 158]
[73 113]
[74 112]
[75 111]
[76 110]
[77 109]
[78 108]
[114 151]
[115 150]
[116 149]
[117 148]
[127 137]
[128 136]
[129 135]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
