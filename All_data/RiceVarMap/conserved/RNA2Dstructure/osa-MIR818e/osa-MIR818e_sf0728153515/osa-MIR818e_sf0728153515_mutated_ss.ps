%!PS-Adobe-3.0 EPSF-3.0
%%Creator: PS_dot.c,v 1.38 2007/02/02 15:18:13 ivo Exp $, ViennaRNA-2.1.9
%%CreationDate: Thu Jul 16 15:14:02 2015
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 66 210 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: -d2 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  72 216 translate
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  72 6 mul size div dup scale
  size xmin sub xmax sub 2 div size ymin sub ymax sub 2 div
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
CCCCGUCCUAUAAUAUAAGGGAUUUUGAGUUUUUGCUUGCACUGUUUGACCACUCGUCUUAUUUAAAUUUUUUUUGGAAUUAUUAUUAUUUUUGACUUAUUUUAUUAUCCAAAGUACUUUAAGCAUAACUUUUCGUUUUUUAUAUUUGCACAAAUUUUUUGAAUAAAACGAGUGGUCAAACAAUACAAACAAAAACUUAAAAUCCCUUAUAUUAUGGGACGGAGG\
) def
/coor [
[106.89923859 1158.33850098]
[106.89923859 1143.33850098]
[106.79498291 1128.33886719]
[106.58647919 1113.34033203]
[106.37796783 1098.34179688]
[106.16946411 1083.34326172]
[105.96096039 1068.34460449]
[105.75244904 1053.34606934]
[105.54394531 1038.34753418]
[105.33544159 1023.34899902]
[105.12693787 1008.35046387]
[104.91842651 993.35192871]
[104.70992279 978.35333252]
[104.50141907 963.35479736]
[104.29290771 948.35626221]
[104.08440399 933.35772705]
[103.87590027 918.35913086]
[103.66738892 903.36059570]
[103.45888519 888.36206055]
[103.25038147 873.36352539]
[103.04187012 858.36492920]
[102.83336639 843.36639404]
[102.62486267 828.36785889]
[102.41635895 813.36932373]
[102.20784760 798.37072754]
[101.99934387 783.37219238]
[101.79084015 768.37365723]
[101.58232880 753.37512207]
[101.37382507 738.37652588]
[101.16532135 723.37799072]
[100.95681000 708.37945557]
[100.74830627 693.38092041]
[100.53980255 678.38232422]
[100.33129120 663.38378906]
[100.12278748 648.38525391]
[92.20932007 635.76672363]
[99.75404358 621.86035156]
[99.54553986 606.86181641]
[99.33703613 591.86328125]
[87.08037567 583.44232178]
[82.07331848 569.25097656]
[86.43370056 554.66192627]
[98.69013977 545.32995605]
[98.48163605 530.33142090]
[98.27312469 515.33288574]
[98.06462097 500.33432007]
[97.85611725 485.33575439]
[97.64761353 470.33721924]
[97.43910217 455.33865356]
[97.23059845 440.34011841]
[97.02209473 425.34155273]
[96.81358337 410.34301758]
[96.60507965 395.34445190]
[96.39657593 380.34591675]
[96.18806458 365.34735107]
[95.97956085 350.34881592]
[95.77105713 335.35025024]
[87.85758972 322.73175049]
[95.40231323 308.82537842]
[95.19380951 293.82681274]
[94.98529816 278.82827759]
[94.77679443 263.82971191]
[94.56829071 248.83117676]
[94.35977936 233.83261108]
[94.15127563 218.83406067]
[93.94277191 203.83551025]
[93.73426819 188.83695984]
[81.47760773 180.41601562]
[76.47055054 166.22470093]
[80.83092499 151.63565063]
[93.08737183 142.30368042]
[92.87886047 127.30512238]
[92.67035675 112.30657196]
[85.67743683 100.19911194]
[92.33109283 87.90193176]
[92.12258148 72.90338135]
[84.19420624 59.21209335]
[91.75384521 46.37850189]
[91.54533386 31.37994957]
[83.61695862 17.68866158]
[91.17659760 4.85506868]
[90.96808624 -10.14348221]
[90.75958252 -25.14203262]
[85.81616211 -31.97775078]
[85.47901917 -39.53387833]
[88.93610382 -45.26818848]
[86.44554138 -60.05998230]
[83.95497894 -74.85176849]
[81.46440887 -89.64356232]
[71.54315948 -101.96749878]
[77.05985260 -115.80278778]
[74.56929016 -130.59457397]
[72.07872009 -145.38636780]
[69.58815765 -160.17816162]
[67.09759521 -174.96995544]
[54.50574493 -184.13963318]
[52.19067001 -199.17610168]
[61.01016235 -211.12399292]
[58.51959610 -225.91578674]
[56.02902985 -240.70756531]
[53.53846741 -255.49935913]
[51.04790115 -270.29116821]
[48.55733490 -285.08294678]
[34.98480606 -292.84957886]
[29.62847328 -307.54119873]
[35.01743317 -322.22088623]
[48.60718918 -329.95733643]
[63.98106766 -327.09762573]
[73.87999725 -314.99203491]
[73.62999725 -299.35644531]
[63.34912491 -287.57351685]
[65.83969116 -272.78170776]
[68.33025360 -257.98992920]
[70.82082367 -243.19813538]
[73.31138611 -228.40634155]
[75.80195618 -213.61456299]
[88.04769135 -205.21351624]
[90.78419495 -190.24801636]
[81.88938141 -177.46052551]
[84.37995148 -162.66873169]
[86.87051392 -147.87693787]
[89.36108398 -133.08514404]
[91.85164642 -118.29335785]
[101.59475708 -107.02742767]
[96.25620270 -92.13412476]
[98.74676514 -77.34233856]
[101.23733521 -62.55054474]
[103.72789764 -47.75875473]
[109.82531738 -61.46355057]
[120.82955933 -71.65702057]
[134.96006775 -76.68978882]
[149.93043518 -75.74752808]
[163.31838989 -68.98271179]
[172.95765686 -57.48991013]
[177.28857422 -43.12873840]
[175.61035156 -28.22291565]
[168.19453430 -15.18429184]
[156.24105835 -6.12259150]
[141.68406677 -2.50405264]
[126.87895203 -4.91417599]
[114.22128296 -12.96298885]
[105.75813293 -25.35053825]
[105.96663666 -10.35198784]
[106.17514801 4.64656258]
[114.08861542 17.26505280]
[106.54388428 31.17144394]
[106.75239563 46.16999435]
[114.66586304 58.78848648]
[107.12113953 72.69487762]
[107.32964325 87.69342804]
[114.32256317 99.80088806]
[107.66890717 112.09806824]
[107.87741852 127.09661865]
[108.08592224 142.09516907]
[120.59703827 151.08283997]
[125.36128235 165.54504395]
[120.75064850 179.87005615]
[108.73281860 188.62846375]
[108.94132233 203.62701416]
[109.14982605 218.62556458]
[109.35832977 233.62411499]
[109.56684113 248.62266541]
[109.77534485 263.62121582]
[109.98384857 278.61975098]
[110.19235992 293.61831665]
[110.40086365 308.61685181]
[118.32924652 322.30816650]
[110.76960754 335.14175415]
[110.97811127 350.14028931]
[111.18661499 365.13885498]
[111.39512634 380.13739014]
[111.60363007 395.13595581]
[111.81213379 410.13449097]
[112.02064514 425.13305664]
[112.22914886 440.13159180]
[112.43765259 455.13015747]
[112.64616394 470.12869263]
[112.85466766 485.12725830]
[113.06317139 500.12579346]
[113.27167511 515.12432861]
[113.48018646 530.12292480]
[113.68869019 545.12145996]
[126.19980621 554.10913086]
[130.96405029 568.57135010]
[126.35341644 582.89636230]
[114.33558655 591.65472412]
[114.54409027 606.65332031]
[114.75259399 621.65185547]
[122.68097687 635.34313965]
[115.12133789 648.17675781]
[115.32984924 663.17529297]
[115.53835297 678.17382812]
[115.74685669 693.17236328]
[115.95536041 708.17095947]
[116.16387177 723.16949463]
[116.37237549 738.16802979]
[116.58087921 753.16656494]
[116.78939056 768.16516113]
[116.99789429 783.16369629]
[117.20639801 798.16223145]
[117.41490936 813.16076660]
[117.62341309 828.15936279]
[117.83191681 843.15789795]
[118.04042816 858.15643311]
[118.24893188 873.15496826]
[118.45743561 888.15356445]
[118.66593933 903.15209961]
[118.87445068 918.15063477]
[119.08295441 933.14916992]
[119.29145813 948.14776611]
[119.49996948 963.14630127]
[119.70847321 978.14483643]
[119.91697693 993.14337158]
[120.12548828 1008.14196777]
[120.33399200 1023.14050293]
[120.54249573 1038.13903809]
[120.75100708 1053.13757324]
[120.95951080 1068.13610840]
[121.16801453 1083.13476562]
[121.37651825 1098.13330078]
[121.58502960 1113.13183594]
[121.79353333 1128.13037109]
[125.03906250 1136.65698242]
[121.89923859 1143.33850098]
[121.89923859 1158.33850098]
] def
/pairs [
[1 225]
[2 224]
[3 222]
[4 221]
[5 220]
[6 219]
[7 218]
[8 217]
[9 216]
[10 215]
[11 214]
[12 213]
[13 212]
[14 211]
[15 210]
[16 209]
[17 208]
[18 207]
[19 206]
[20 205]
[21 204]
[22 203]
[23 202]
[24 201]
[25 200]
[26 199]
[27 198]
[28 197]
[29 196]
[30 195]
[31 194]
[32 193]
[33 192]
[34 191]
[35 190]
[37 188]
[38 187]
[39 186]
[43 182]
[44 181]
[45 180]
[46 179]
[47 178]
[48 177]
[49 176]
[50 175]
[51 174]
[52 173]
[53 172]
[54 171]
[55 170]
[56 169]
[57 168]
[59 166]
[60 165]
[61 164]
[62 163]
[63 162]
[64 161]
[65 160]
[66 159]
[67 158]
[71 154]
[72 153]
[73 152]
[75 150]
[76 149]
[78 147]
[79 146]
[81 144]
[82 143]
[83 142]
[86 128]
[87 127]
[88 126]
[89 125]
[91 123]
[92 122]
[93 121]
[94 120]
[95 119]
[98 116]
[99 115]
[100 114]
[101 113]
[102 112]
[103 111]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
