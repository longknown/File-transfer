%!PS-Adobe-3.0 EPSF-3.0
%%Creator: PS_dot.c,v 1.38 2007/02/02 15:18:13 ivo Exp $, ViennaRNA-2.1.9
%%CreationDate: Thu Jul 16 15:13:50 2015
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 66 210 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: -d2 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  72 216 translate
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  72 6 mul size div dup scale
  size xmin sub xmax sub 2 div size ymin sub ymax sub 2 div
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
GGAGGAAGAGAGGGGUGAGAGGUGAGGCUGACAGAAGAGAGUGAGCACACAUGGUGACUUUCUUGCAUGCUGAAUGGACUCAUGCUUGAAGCUAUGUGUGCUCACUUCUCUCUCUGUCAGCCAUUUGAUCUCUCUUUCUCUCUUUCUCC\
) def
/coor [
[96.06330109 600.29309082]
[96.06330109 585.29309082]
[96.06330109 570.29309082]
[96.06330109 555.29309082]
[96.06330109 540.29309082]
[96.06330109 525.29309082]
[96.06330109 510.29309082]
[96.06330109 495.29309082]
[96.06330109 480.29309082]
[96.06330109 465.29309082]
[96.06330109 450.29309082]
[96.06330109 435.29309082]
[96.06330109 420.29309082]
[96.06330109 405.29309082]
[96.06330109 390.29309082]
[92.89720154 383.55969238]
[96.22366333 374.97976685]
[96.53780365 359.98306274]
[96.85193634 344.98635864]
[97.16607666 329.98965454]
[97.48020935 314.99291992]
[97.79434967 299.99621582]
[98.10848236 284.99951172]
[90.63941956 272.11300659]
[98.66403198 258.47787476]
[98.50695801 243.47869873]
[97.87882233 228.49186707]
[97.25068665 213.50502014]
[96.62255096 198.51817322]
[95.99441528 183.53134155]
[95.36627960 168.54449463]
[94.73814392 153.55764771]
[94.11000824 138.57081604]
[93.48188019 123.58396912]
[92.85374451 108.59712219]
[92.06870270 93.61768341]
[91.12684631 78.64727783]
[90.18498993 63.67687988]
[89.24312592 48.70647812]
[88.30126953 33.73607635]
[87.20269775 18.77635956]
[85.94753265 3.82896709]
[84.69235992 -11.11842537]
[83.43719482 -26.06581879]
[82.18202972 -41.01321030]
[80.92685699 -55.96060562]
[79.67169189 -70.90799713]
[78.41652679 -85.85539246]
[77.16135406 -100.80278015]
[75.90618896 -115.75017548]
[74.65102386 -130.69757080]
[73.39585114 -145.64495850]
[72.14068604 -160.59236145]
[70.88552094 -175.53974915]
[69.63034821 -190.48713684]
[66.92601013 -194.07595825]
[65.67350006 -197.95236206]
[65.78002167 -201.61138916]
[66.99430084 -204.63334656]
[68.94960785 -206.72915649]
[68.94960785 -221.72915649]
[68.94960785 -236.72915649]
[58.05505753 -247.86227417]
[58.26873779 -263.07440186]
[68.94960785 -273.39208984]
[68.94960785 -288.39208984]
[68.94960785 -303.39208984]
[68.94960785 -318.39208984]
[68.94960785 -333.39208984]
[60.37582016 -343.08587646]
[60.72193146 -355.62075806]
[69.25363159 -364.25445557]
[58.13527679 -375.48645020]
[58.29918289 -391.28988647]
[69.64810181 -402.28887939]
[85.44892883 -401.95788574]
[96.32730103 -390.49331665]
[95.82928467 -374.69686890]
[84.25033569 -363.94030762]
[93.53251648 -349.08035278]
[83.94960785 -333.39208984]
[83.94960785 -318.39208984]
[83.94960785 -303.39208984]
[83.94960785 -288.39208984]
[83.94960785 -273.39208984]
[94.63047791 -263.07440186]
[94.84416199 -247.86227417]
[83.94960785 -236.72915649]
[83.94960785 -221.72915649]
[83.94960785 -206.72915649]
[84.57774353 -191.74230957]
[85.83290863 -176.79492188]
[87.08808136 -161.84751892]
[88.34324646 -146.90013123]
[89.59841156 -131.95274353]
[90.85358429 -117.00534058]
[92.10874939 -102.05795288]
[93.36391449 -87.11055756]
[94.61908722 -72.16316223]
[95.87425232 -57.21577072]
[97.12941742 -42.26837921]
[98.38459015 -27.32098579]
[99.63975525 -12.37359333]
[100.89492035 2.57379937]
[102.15009308 17.52119255]
[105.86852264 23.96603584]
[103.27167511 32.79421997]
[104.21353149 47.76462173]
[105.15538788 62.73501968]
[106.09724426 77.70542145]
[107.03910065 92.67581940]
[110.66871643 99.93746185]
[107.84058380 107.96898651]
[108.46871948 122.95583344]
[109.09685516 137.94267273]
[109.72499084 152.92951965]
[110.35312653 167.91635132]
[110.98125458 182.90319824]
[111.60939026 197.89004517]
[112.23752594 212.87689209]
[112.86566162 227.86372375]
[113.49379730 242.85057068]
[116.36945343 247.36532593]
[117.10534668 252.05944824]
[116.00134277 256.07183838]
[113.66074371 258.79202271]
[121.10733795 272.75119019]
[113.10519409 285.31365967]
[112.79105377 300.31036377]
[112.47692108 315.30706787]
[112.16278076 330.30377197]
[111.84864807 345.30047607]
[111.53451538 360.29721069]
[111.22037506 375.29391479]
[111.06330109 390.29309082]
[111.06330109 405.29309082]
[111.06330109 420.29309082]
[111.06330109 435.29309082]
[111.06330109 450.29309082]
[111.06330109 465.29309082]
[111.06330109 480.29309082]
[111.06330109 495.29309082]
[111.06330109 510.29309082]
[111.06330109 525.29309082]
[111.06330109 540.29309082]
[111.06330109 555.29309082]
[111.06330109 570.29309082]
[111.06330109 585.29309082]
[111.06330109 600.29309082]
] def
/pairs [
[1 149]
[2 148]
[3 147]
[4 146]
[5 145]
[6 144]
[7 143]
[8 142]
[9 141]
[10 140]
[11 139]
[12 138]
[13 137]
[14 136]
[15 135]
[17 134]
[18 133]
[19 132]
[20 131]
[21 130]
[22 129]
[23 128]
[25 126]
[26 122]
[27 121]
[28 120]
[29 119]
[30 118]
[31 117]
[32 116]
[33 115]
[34 114]
[35 113]
[36 111]
[37 110]
[38 109]
[39 108]
[40 107]
[41 105]
[42 104]
[43 103]
[44 102]
[45 101]
[46 100]
[47 99]
[48 98]
[49 97]
[50 96]
[51 95]
[52 94]
[53 93]
[54 92]
[55 91]
[60 90]
[61 89]
[62 88]
[65 85]
[66 84]
[67 83]
[68 82]
[69 81]
[72 79]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
