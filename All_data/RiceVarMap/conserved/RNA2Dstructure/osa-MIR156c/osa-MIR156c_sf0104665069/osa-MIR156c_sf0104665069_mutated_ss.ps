%!PS-Adobe-3.0 EPSF-3.0
%%Creator: PS_dot.c,v 1.38 2007/02/02 15:18:13 ivo Exp $, ViennaRNA-2.1.9
%%CreationDate: Thu Jul 16 15:13:51 2015
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 66 210 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: -d2 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  72 216 translate
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  72 6 mul size div dup scale
  size xmin sub xmax sub 2 div size ymin sub ymax sub 2 div
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
GGAGGAAGAGAGGGGUGAGAGGUGAGGCUGACAGAAGAGAGUGAGCACACAUGGUGACUUUCUUGCAUGCUGAAUGGACUCAUGCUUGAAGCUACGUGUGCUCACUUCUCUCUCUGUCAGCCAUUUGAUCUCUCUUUCUCUCUUUCUCC\
) def
/coor [
[100.79737854 675.30187988]
[100.79737854 660.30187988]
[100.79737854 645.30187988]
[100.79737854 630.30187988]
[100.79737854 615.30187988]
[100.79737854 600.30187988]
[100.79737854 585.30187988]
[100.79737854 570.30187988]
[100.79737854 555.30187988]
[100.79737854 540.30187988]
[100.79737854 525.30187988]
[100.79737854 510.30191040]
[100.79737854 495.30191040]
[100.79737854 480.30191040]
[100.79737854 465.30191040]
[97.63128662 458.56851196]
[100.95774841 449.98858643]
[101.27188110 434.99188232]
[101.58602142 419.99517822]
[101.90015411 404.99847412]
[102.21429443 390.00173950]
[102.52842712 375.00503540]
[102.84256744 360.00833130]
[95.37350464 347.12182617]
[103.39811707 333.48669434]
[103.24103546 318.48751831]
[102.61289978 303.50067139]
[101.98476410 288.51385498]
[101.35663605 273.52700806]
[100.72850037 258.54016113]
[100.10036469 243.55331421]
[99.47222900 228.56646729]
[98.84409332 213.57963562]
[98.21595764 198.59278870]
[97.58782196 183.60594177]
[96.80278778 168.62649536]
[95.86092377 153.65609741]
[94.91906738 138.68569946]
[93.97721100 123.71530151]
[93.03535461 108.74489594]
[91.93678284 93.78517914]
[90.68161011 78.83779144]
[89.42644501 63.89039612]
[88.17127991 48.94300079]
[86.91610718 33.99560928]
[85.66094208 19.04821587]
[84.40577698 4.10082388]
[83.15060425 -10.84656906]
[81.89543915 -25.79396248]
[80.64027405 -40.74135590]
[71.77533722 -53.84568787]
[78.42050934 -67.17576599]
[77.16534424 -82.12315369]
[75.91017914 -97.07054901]
[74.65500641 -112.01794434]
[71.95066833 -115.60675812]
[70.69815826 -119.48316956]
[70.80467987 -123.14219666]
[72.01895905 -126.16414642]
[73.97426605 -128.25994873]
[73.97426605 -143.25994873]
[73.97426605 -158.25994873]
[63.07971573 -169.39308167]
[63.29339600 -184.60520935]
[73.97426605 -194.92289734]
[73.97426605 -209.92289734]
[73.97426605 -224.92289734]
[73.97426605 -239.92289734]
[73.97426605 -254.92289734]
[65.40047455 -264.61666870]
[65.74658966 -277.15158081]
[74.27828979 -285.78524780]
[63.15993500 -297.01724243]
[63.32384109 -312.82067871]
[74.67276001 -323.81967163]
[90.47358704 -323.48867798]
[101.35195923 -312.02410889]
[100.85394287 -296.22766113]
[89.27499390 -285.47113037]
[98.55717468 -270.61117554]
[88.97426605 -254.92289734]
[88.97426605 -239.92289734]
[88.97426605 -224.92289734]
[88.97426605 -209.92289734]
[88.97426605 -194.92289734]
[99.65514374 -184.60520935]
[99.86882019 -169.39308167]
[88.97426605 -158.25994873]
[88.97426605 -143.25994873]
[88.97426605 -128.25994873]
[89.60240173 -113.27310944]
[90.85756683 -98.32571411]
[92.11273956 -83.37832642]
[93.36790466 -68.43093109]
[102.14305878 -56.39573669]
[95.58766174 -41.99652100]
[96.84283447 -27.04912949]
[98.09799957 -12.10173702]
[99.35316467 2.84565616]
[100.60833740 17.79304886]
[101.86350250 32.74044037]
[103.11866760 47.68783569]
[104.37384033 62.63522720]
[105.62900543 77.58261871]
[106.88417053 92.53001404]
[110.66506958 99.71405029]
[108.00575256 107.80303955]
[108.94760895 122.77344513]
[109.88947296 137.74383545]
[110.83132935 152.71424866]
[111.77318573 167.68464661]
[115.45602417 176.11773682]
[112.57466888 182.97781372]
[113.20280457 197.96464539]
[113.83093262 212.95149231]
[114.45906830 227.93833923]
[115.08720398 242.92518616]
[115.71533966 257.91201782]
[116.34347534 272.89886475]
[116.97161102 287.88571167]
[117.59974670 302.87255859]
[118.22788239 317.85940552]
[121.10353851 322.37414551]
[121.83942413 327.06826782]
[120.73542786 331.08065796]
[118.39482117 333.80084229]
[125.84141541 347.76000977]
[117.83927917 360.32247925]
[117.52513885 375.31918335]
[117.21100616 390.31588745]
[116.89686584 405.31259155]
[116.58273315 420.30929565]
[116.26859283 435.30603027]
[115.95446014 450.30273438]
[115.79737854 465.30191040]
[115.79737854 480.30191040]
[115.79737854 495.30191040]
[115.79737854 510.30191040]
[115.79737854 525.30187988]
[115.79737854 540.30187988]
[115.79737854 555.30187988]
[115.79737854 570.30187988]
[115.79737854 585.30187988]
[115.79737854 600.30187988]
[115.79737854 615.30187988]
[115.79737854 630.30187988]
[115.79737854 645.30187988]
[115.79737854 660.30187988]
[115.79737854 675.30187988]
] def
/pairs [
[1 149]
[2 148]
[3 147]
[4 146]
[5 145]
[6 144]
[7 143]
[8 142]
[9 141]
[10 140]
[11 139]
[12 138]
[13 137]
[14 136]
[15 135]
[17 134]
[18 133]
[19 132]
[20 131]
[21 130]
[22 129]
[23 128]
[25 126]
[26 122]
[27 121]
[28 120]
[29 119]
[30 118]
[31 117]
[32 116]
[33 115]
[34 114]
[35 113]
[36 111]
[37 110]
[38 109]
[39 108]
[40 107]
[41 105]
[42 104]
[43 103]
[44 102]
[45 101]
[46 100]
[47 99]
[48 98]
[49 97]
[50 96]
[52 94]
[53 93]
[54 92]
[55 91]
[60 90]
[61 89]
[62 88]
[65 85]
[66 84]
[67 83]
[68 82]
[69 81]
[72 79]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
