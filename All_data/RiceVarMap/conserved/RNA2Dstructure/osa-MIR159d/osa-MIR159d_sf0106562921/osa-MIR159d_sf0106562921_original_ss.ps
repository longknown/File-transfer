%!PS-Adobe-3.0 EPSF-3.0
%%Creator: PS_dot.c,v 1.38 2007/02/02 15:18:13 ivo Exp $, ViennaRNA-2.1.9
%%CreationDate: Thu Jul 16 15:13:51 2015
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 66 210 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: -d2 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  72 216 translate
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  72 6 mul size div dup scale
  size xmin sub xmax sub 2 div size ymin sub ymax sub 2 div
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
UGAUGUGAGGAGGAGCUCCUUUCGAUCCAAUUCAGGAGAGGAAGUGGUGGGAUGCAGCUGCCGGUUCAUGGAUACCUCUGCAGUUCAUGCCGGUAGGCCUGCACUUGCAUGGGUUUGCAUGACCUGGGAGAUGAACCUGCCAUUGUGUUCCUCUAUUGAUUGGAUUGAAGGGAGCUCCGGCUACACCUA\
) def
/coor [
[96.58795929 880.10137939]
[84.20716858 870.74743652]
[79.72119904 855.89300537]
[84.85501099 841.24975586]
[97.63453674 832.44842529]
[97.88254547 817.45050049]
[98.13055420 802.45251465]
[98.25456238 787.45306396]
[98.25456238 772.45306396]
[87.57369232 762.13537598]
[87.36000824 746.92321777]
[98.25456238 735.79010010]
[98.25456238 720.79010010]
[98.25456238 705.79010010]
[98.25456238 690.79010010]
[98.25456238 675.79010010]
[98.25456238 660.79010010]
[98.25456238 645.79010010]
[98.25456238 630.79010010]
[98.25456238 615.79010010]
[98.25456238 600.79010010]
[98.25456238 585.79010010]
[98.25456238 570.79010010]
[98.25456238 555.79010010]
[98.25456238 540.79010010]
[98.25456238 525.79010010]
[98.25456238 510.79013062]
[98.25456238 495.79013062]
[98.25456238 480.79013062]
[98.25456238 465.79013062]
[98.25456238 450.79013062]
[95.10492706 444.08920288]
[98.38062286 435.54263306]
[98.62863159 420.54467773]
[98.87664032 405.54672241]
[91.35083008 392.69326782]
[99.31523895 379.02288818]
[99.56325531 364.02496338]
[99.81126404 349.02700806]
[100.05927277 334.02905273]
[100.30728149 319.03109741]
[100.55529022 304.03314209]
[100.80329895 289.03521729]
[100.55529022 274.03726196]
[99.81153107 259.05569458]
[99.06777954 244.07415771]
[98.32402039 229.09260559]
[97.58026123 214.11105347]
[96.83650970 199.12950134]
[96.09275055 184.14796448]
[95.34899139 169.16641235]
[86.99014282 156.83843994]
[94.03366089 142.67160034]
[90.55564880 136.13510132]
[93.40354156 127.43659973]
[92.90759277 112.44480133]
[85.68388367 100.47359467]
[92.10060883 88.05114746]
[91.60466003 73.05934906]
[83.41531372 59.52254486]
[90.72757721 46.54640961]
[90.23162079 31.55460930]
[89.73567200 16.56281090]
[89.23972321 1.57101202]
[81.05036926 -11.96579361]
[88.36263275 -24.94192886]
[87.86668396 -39.93372726]
[87.37073517 -54.92552567]
[86.87478638 -69.91732788]
[86.37883759 -84.90912628]
[78.18948364 -98.44593048]
[85.50174713 -111.42206573]
[77.31240082 -124.95886993]
[84.62466431 -137.93499756]
[84.12870789 -152.92680359]
[83.63275909 -167.91860962]
[83.13681030 -182.91040039]
[74.94745636 -196.44720459]
[82.25971985 -209.42333984]
[81.76377106 -224.41514587]
[81.26782227 -239.40693665]
[80.77187347 -254.39874268]
[80.15199280 -269.38592529]
[79.40824127 -284.36746216]
[70.99619293 -297.76702881]
[78.09291077 -310.86227417]
[77.34915161 -325.84384155]
[68.93710327 -339.24337769]
[76.03382111 -352.33865356]
[75.29006958 -367.32019043]
[74.54631042 -382.30175781]
[65.20287323 -395.77883911]
[72.44639587 -410.49154663]
[88.82537079 -411.30468750]
[97.49050903 -397.38177490]
[89.52786255 -383.04550171]
[90.27161407 -368.06396484]
[91.01537323 -353.08239746]
[99.37422180 -340.75442505]
[92.33070374 -326.58758545]
[93.07446289 -311.60604858]
[101.43331146 -299.27807617]
[94.38978577 -285.11123657]
[95.13354492 -270.12966919]
[98.61155701 -263.59320068]
[95.76367188 -254.89468384]
[96.25962067 -239.90289307]
[96.75556946 -224.91108704]
[97.25151825 -209.91929626]
[105.40539551 -197.45480347]
[98.12860870 -183.40635681]
[98.62455750 -168.41455078]
[99.12050629 -153.42276001]
[99.61646271 -138.43095398]
[107.77033234 -125.96646118]
[100.49354553 -111.91801453]
[108.64742279 -99.45352173]
[101.37063599 -85.40507507]
[101.86658478 -70.41327667]
[102.36253357 -55.42147827]
[102.85848236 -40.42967606]
[103.35443878 -25.43787956]
[111.50830841 -12.97338676]
[104.23152161 1.07506156]
[104.72747040 16.06686020]
[105.22341919 31.05865860]
[105.71937561 46.05045700]
[113.87325287 58.51494980]
[106.59645844 72.56340027]
[107.09240723 87.55519867]
[114.31611633 99.52640533]
[107.89939117 111.94885254]
[108.39533997 126.94065094]
[109.01521301 141.92784119]
[117.42726135 155.32739258]
[110.33054352 168.42265320]
[111.07430267 183.40420532]
[111.81805420 198.38575745]
[112.56181335 213.36729431]
[113.30557251 228.34884644]
[114.04932404 243.33039856]
[114.79308319 258.31195068]
[115.53683472 273.29348755]
[118.04609680 276.88705444]
[119.15805054 280.70837402]
[118.97406769 284.28683472]
[117.73892975 287.23394775]
[115.80124664 289.28320312]
[115.55323792 304.28115845]
[115.30522919 319.27911377]
[115.05722046 334.27706909]
[114.80921173 349.27502441]
[114.56120300 364.27294922]
[114.31319427 379.27090454]
[121.82126617 393.19711304]
[113.87458801 405.79473877]
[113.62657928 420.79266357]
[113.37857056 435.79061890]
[113.25456238 450.79013062]
[113.25456238 465.79013062]
[113.25456238 480.79013062]
[113.25456238 495.79013062]
[113.25456238 510.79013062]
[113.25456238 525.79010010]
[113.25456238 540.79010010]
[113.25456238 555.79010010]
[113.25456238 570.79010010]
[113.25456238 585.79010010]
[113.25456238 600.79010010]
[113.25456238 615.79010010]
[113.25456238 630.79010010]
[113.25456238 645.79010010]
[113.25456238 660.79010010]
[113.25456238 675.79010010]
[113.25456238 690.79010010]
[113.25456238 705.79010010]
[113.25456238 720.79010010]
[113.25456238 735.79010010]
[124.14911652 746.92321777]
[123.93543243 762.13537598]
[113.25456238 772.45306396]
[113.25456238 787.45306396]
[116.38849640 796.05261230]
[113.12850189 802.70056152]
[112.88049316 817.69848633]
[112.63248444 832.69647217]
[125.11402130 841.91552734]
[129.76086426 856.72045898]
[124.78621674 871.41845703]
] def
/pairs [
[5 186]
[6 185]
[7 184]
[8 182]
[9 181]
[12 178]
[13 177]
[14 176]
[15 175]
[16 174]
[17 173]
[18 172]
[19 171]
[20 170]
[21 169]
[22 168]
[23 167]
[24 166]
[25 165]
[26 164]
[27 163]
[28 162]
[29 161]
[30 160]
[31 159]
[33 158]
[34 157]
[35 156]
[37 154]
[38 153]
[39 152]
[40 151]
[41 150]
[42 149]
[43 148]
[44 143]
[45 142]
[46 141]
[47 140]
[48 139]
[49 138]
[50 137]
[51 136]
[53 134]
[55 133]
[56 132]
[58 130]
[59 129]
[61 127]
[62 126]
[63 125]
[64 124]
[66 122]
[67 121]
[68 120]
[69 119]
[70 118]
[72 116]
[74 114]
[75 113]
[76 112]
[77 111]
[79 109]
[80 108]
[81 107]
[82 106]
[83 104]
[84 103]
[86 101]
[87 100]
[89 98]
[90 97]
[91 96]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
