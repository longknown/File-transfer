%!PS-Adobe-3.0 EPSF-3.0
%%Creator: PS_dot.c,v 1.38 2007/02/02 15:18:13 ivo Exp $, ViennaRNA-2.1.9
%%CreationDate: Thu Jul 16 15:13:52 2015
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 66 210 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: -d2 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  72 216 translate
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  72 6 mul size div dup scale
  size xmin sub xmax sub 2 div size ymin sub ymax sub 2 div
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
CUCUGCUUUGGUGGUUGGCUGAUGUUCUCGGUUAAGGGGUUUGUUGUCUGGUUCAAGGCCUCCUGCUGUCCUACAUCACAUUUUUUUUUCUUUGUUCUGAAUUUCUGAUGGAUGUGUGUGUGCAUGAUGCAUGGCUGGUGGUGACCUCGGACCAGGCUUCAUUCCCUUUAACCAGCAUUUGCGUUAAUACCAUCAGGCAU\
) def
/coor [
[87.54118347 1001.27947998]
[73.34492493 993.80645752]
[70.47798920 978.02166748]
[81.13964081 966.03381348]
[81.60845947 951.04113770]
[82.07727814 936.04846191]
[82.54609680 921.05578613]
[83.01491547 906.06311035]
[80.07941437 899.27380371]
[83.61003876 890.84033203]
[84.31312561 875.85681152]
[85.01621246 860.87329102]
[85.71929169 845.88977051]
[86.42237854 830.90625000]
[87.12546539 815.92272949]
[72.14027405 802.03173828]
[72.26494598 781.30535889]
[87.85130310 767.20166016]
[87.61686707 752.20349121]
[79.68159485 739.59869385]
[87.20226288 725.67932129]
[86.96782684 710.68115234]
[86.73338318 695.68298340]
[86.49894714 680.68481445]
[86.26451111 665.68664551]
[86.03007507 650.68847656]
[83.75873566 647.98156738]
[82.68991852 644.03729248]
[83.39212799 639.43475342]
[86.15279388 634.98565674]
[86.62161255 619.99298096]
[87.09043121 605.00030518]
[87.55924225 590.00762939]
[88.02806091 575.01495361]
[88.49687958 560.02233887]
[88.96569824 545.02966309]
[89.43451691 530.03698730]
[89.90333557 515.04431152]
[90.37215424 500.05163574]
[80.01897430 489.40515137]
[80.28084564 474.19378662]
[91.51803589 463.40658569]
[91.98685455 448.41390991]
[81.63367462 437.76745605]
[81.89554596 422.55609131]
[93.13273621 411.76889038]
[93.60155487 396.77621460]
[94.07037354 381.78353882]
[94.53919220 366.79089355]
[95.00801086 351.79821777]
[95.47682953 336.80554199]
[95.94564819 321.81286621]
[96.41446686 306.82019043]
[96.88328552 291.82751465]
[89.54754639 278.86465454]
[97.71238708 265.31304932]
[98.18120575 250.32035828]
[98.65002441 235.32769775]
[98.76724243 220.32815552]
[98.53280640 205.32998657]
[90.59753418 192.72518921]
[98.11820221 178.80577087]
[97.88376617 163.80761719]
[89.94849396 151.20281982]
[97.46916199 137.28340149]
[97.23472595 122.28524017]
[97.00028992 107.28707123]
[89.93764496 110.99646759]
[80.53919220 110.11084747]
[71.28334045 103.71352386]
[64.90177155 92.07909393]
[63.85179901 76.70130920]
[60.82491302 62.00988388]
[57.79803085 47.31845856]
[54.77114487 32.62703323]
[51.74425888 17.93560791]
[48.71737289 3.24418306]
[43.91700745 -4.53692722]
[45.75987625 -11.70043182]
[42.96297836 -26.43737030]
[40.16607666 -41.17430878]
[37.36917496 -55.91124725]
[22.68328285 -59.92197800]
[11.24173164 -69.87073517]
[5.27873659 -83.74383545]
[5.92781544 -98.76847076]
[13.00671482 -111.96690369]
[25.06417084 -120.74661255]
[22.26727104 -135.48355103]
[19.47036934 -150.22048950]
[5.37937832 -156.71846008]
[-2.17166853 -170.27432251]
[-0.27924013 -185.67556763]
[10.32898617 -197.00009155]
[25.57393265 -199.89341736]
[39.59360123 -193.24296570]
[46.99715042 -179.60598755]
[44.93775940 -164.22618103]
[34.20730591 -153.01739502]
[37.00420761 -138.28045654]
[39.80110931 -123.54351044]
[54.23686218 -119.79191589]
[65.65917206 -110.10479736]
[71.76784515 -96.36270142]
[71.30231476 -81.26954651]
[64.30137634 -67.82061005]
[52.10611343 -58.70814896]
[54.90301514 -43.97121048]
[57.69991684 -29.23427200]
[60.49681473 -14.49733353]
[63.40879822 0.21729776]
[66.43568420 14.90872288]
[69.46257019 29.60014725]
[72.48945618 44.29157257]
[75.51634216 58.98299789]
[78.54322815 73.67442322]
[85.71494293 75.86907959]
[96.68788910 65.64193726]
[100.05836487 80.25839233]
[107.23007965 82.45304871]
[117.96028900 71.97150421]
[128.69049072 61.48996353]
[139.42070007 51.00842285]
[150.15089417 40.52688217]
[157.25637817 25.13374901]
[174.01493835 27.70029831]
[176.18791199 44.51441574]
[160.63244629 51.25708389]
[149.90223694 61.73862839]
[139.17202759 72.22016907]
[128.44183350 82.70170593]
[117.71162415 93.18325043]
[111.99845886 107.05263519]
[112.23289490 122.05079651]
[112.46733093 137.04896545]
[120.41937256 150.72653198]
[112.88193512 163.57316589]
[113.11637115 178.57133484]
[121.06841278 192.24890137]
[113.53097534 205.09555054]
[113.76541138 220.09371948]
[116.45620728 224.58541870]
[117.08638763 229.19836426]
[115.95605469 233.12545776]
[113.64269257 235.79650879]
[113.17387390 250.78918457]
[112.70505524 265.78186035]
[120.00726318 279.81710815]
[111.87595367 292.29632568]
[111.40713501 307.28900146]
[110.93831635 322.28167725]
[110.46949768 337.27435303]
[110.00068665 352.26702881]
[109.53186798 367.25970459]
[109.06304932 382.25238037]
[108.59423065 397.24505615]
[108.12541199 412.23770142]
[118.66667938 423.70590210]
[117.97765350 438.90393066]
[106.97953033 448.88275146]
[106.51071167 463.87542725]
[117.05197906 475.34359741]
[116.36295319 490.54162598]
[105.36482239 500.52044678]
[104.89601135 515.51312256]
[104.42719269 530.50579834]
[103.95837402 545.49847412]
[103.48955536 560.49114990]
[103.02073669 575.48382568]
[102.55191803 590.47650146]
[102.08309937 605.46911621]
[101.61428070 620.46179199]
[101.14546204 635.45446777]
[101.02824402 650.45404053]
[101.26268005 665.45220947]
[101.49711609 680.45037842]
[101.73155212 695.44854736]
[101.96598816 710.44671631]
[102.20043182 725.44488525]
[110.15247345 739.12243652]
[102.61502838 751.96905518]
[102.84947205 766.96722412]
[111.48819733 771.42321777]
[117.86889648 778.67907715]
[121.14454651 787.70764160]
[120.90373993 797.25109863]
[117.22186279 805.99615479]
[110.64492035 812.75482178]
[102.10897827 816.62585449]
[101.40589142 831.60931396]
[100.70280457 846.59283447]
[99.99972534 861.57635498]
[99.29663849 876.55987549]
[98.59355164 891.54339600]
[98.00758362 906.53192139]
[97.53876495 921.52459717]
[97.06995392 936.51727295]
[96.60113525 951.50994873]
[96.13231659 966.50262451]
[106.02415466 979.13317871]
] def
/pairs [
[4 199]
[5 198]
[6 197]
[7 196]
[8 195]
[10 194]
[11 193]
[12 192]
[13 191]
[14 190]
[15 189]
[18 182]
[19 181]
[21 179]
[22 178]
[23 177]
[24 176]
[25 175]
[26 174]
[30 173]
[31 172]
[32 171]
[33 170]
[34 169]
[35 168]
[36 167]
[37 166]
[38 165]
[39 164]
[42 161]
[43 160]
[46 157]
[47 156]
[48 155]
[49 154]
[50 153]
[51 152]
[52 151]
[53 150]
[54 149]
[56 147]
[57 146]
[58 145]
[59 141]
[60 140]
[62 138]
[63 137]
[65 135]
[66 134]
[67 133]
[72 116]
[73 115]
[74 114]
[75 113]
[76 112]
[77 111]
[79 110]
[80 109]
[81 108]
[82 107]
[88 101]
[89 100]
[90 99]
[120 132]
[121 131]
[122 130]
[123 129]
[124 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
