%!PS-Adobe-3.0 EPSF-3.0
%%Creator: PS_dot.c,v 1.38 2007/02/02 15:18:13 ivo Exp $, ViennaRNA-2.1.9
%%CreationDate: Thu Jul 16 15:13:56 2015
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 66 210 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: -d2 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  72 216 translate
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  72 6 mul size div dup scale
  size xmin sub xmax sub 2 div size ymin sub ymax sub 2 div
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
AGCGAGUUAGGAAGAGGAAGAAAUUGAGUGUCUAAGAACAGUGGGAAUGGAAACAUUAAGGAAAGCAUACAGUAUUUUCUUCUCCACUAGAAUUAGGGGUGGAGAUAAUUCUUUUGUGUUUUCCUAAUGCUUCCCAUUCCUAUUGUUGUUAGAUACUCCUUCCUCUUCCUUUUGGCU\
) def
/coor [
[46.78553391 779.51647949]
[46.78553391 764.51647949]
[46.78553391 749.51647949]
[39.04823685 736.78924561]
[46.78553391 722.98907471]
[46.78553391 707.98907471]
[38.44741821 699.19927979]
[38.34251404 686.68310547]
[47.07374573 677.16271973]
[47.33847427 662.16503906]
[47.60320282 647.16741943]
[47.86792755 632.16973877]
[48.13265610 617.17205811]
[48.39738464 602.17443848]
[48.66210938 587.17675781]
[48.92683792 572.17907715]
[49.19156647 557.18139648]
[49.45629120 542.18377686]
[49.72101974 527.18609619]
[49.98574448 512.18841553]
[37.44895554 520.42425537]
[23.13806152 515.92999268]
[17.56060028 502.00549316]
[24.81172752 488.87457275]
[39.56742477 486.17837524]
[50.99344254 495.89630127]
[52.57891846 480.98031616]
[54.16439819 466.06433105]
[55.74987793 451.14837646]
[57.33535385 436.23239136]
[58.92083359 421.31643677]
[60.50631332 406.40045166]
[62.09178925 391.48446655]
[63.67726898 376.56851196]
[65.26274872 361.65252686]
[58.91404343 348.17874146]
[68.06665802 335.27368164]
[69.65213776 320.35772705]
[71.23761749 305.44174194]
[72.82309723 290.52575684]
[74.40857697 275.60980225]
[75.99405670 260.69381714]
[77.57952881 245.77784729]
[79.16500854 230.86187744]
[80.75048828 215.94590759]
[82.33596802 201.02992249]
[83.92144775 186.11395264]
[85.50692749 171.19798279]
[87.09240723 156.28201294]
[88.67787933 141.36602783]
[90.13167572 126.43665314]
[91.45365906 111.49501801]
[85.73179626 98.73759460]
[93.60470581 87.18299103]
[94.92669678 72.24136353]
[96.24868011 57.29973221]
[97.57067108 42.35810089]
[98.89266205 27.41646767]
[96.52684021 18.56176567]
[100.37210846 12.22359276]
[101.95758820 -2.69237995]
[103.54306030 -17.60835266]
[105.12854004 -32.52432632]
[106.71401978 -47.44029999]
[108.29949951 -62.35627365]
[109.88497925 -77.27224731]
[111.47045898 -92.18821716]
[113.05593872 -107.10419464]
[114.64141083 -122.02016449]
[106.77718353 -138.65513611]
[117.61964417 -152.43765259]
[118.94163513 -167.37927246]
[112.45068359 -181.80766296]
[121.27956390 -193.80349731]
[122.60154724 -208.74513245]
[123.92353821 -223.68675232]
[117.43258667 -238.11514282]
[126.26146698 -250.11097717]
[127.58345795 -265.05261230]
[128.90544128 -279.99423218]
[130.22743225 -294.93588257]
[131.54942322 -309.87750244]
[125.05847168 -324.30587769]
[133.88734436 -336.30172729]
[135.20933533 -351.24334717]
[128.71838379 -365.67172241]
[137.54725647 -377.66757202]
[138.86924744 -392.60922241]
[140.19123840 -407.55084229]
[132.78839111 -422.18402100]
[141.98493958 -435.76177979]
[158.32028198 -434.31646729]
[164.99000549 -419.33493042]
[155.13287354 -406.22885132]
[153.81088257 -391.28723145]
[152.48889160 -376.34558105]
[159.07440186 -362.98593140]
[150.15097046 -349.92135620]
[148.82897949 -334.97973633]
[155.41448975 -321.62008667]
[146.49104309 -308.55551147]
[145.16906738 -293.61389160]
[143.84707642 -278.67224121]
[142.52508545 -263.73062134]
[141.20309448 -248.78898621]
[147.78860474 -235.42933655]
[138.86517334 -222.36477661]
[137.54318237 -207.42314148]
[136.22119141 -192.48150635]
[142.80670166 -179.12185669]
[133.88327026 -166.05729675]
[132.56127930 -151.11566162]
[140.09228516 -141.62524414]
[139.09370422 -129.14849854]
[129.55738831 -120.43468475]
[127.97190857 -105.51871490]
[126.38642883 -90.60273743]
[124.80094910 -75.68676758]
[123.21546936 -60.77079391]
[121.62999725 -45.85482025]
[120.04451752 -30.93884850]
[118.45903778 -16.02287483]
[116.87355804 -1.10690153]
[115.28807831 13.80907154]
[113.83428955 28.73845482]
[112.51230621 43.68008804]
[111.19031525 58.62171936]
[109.86832428 73.56334686]
[108.54634094 88.50498199]
[114.26820374 101.26240540]
[106.39529419 112.81700897]
[105.07330322 127.75863647]
[107.43912506 136.61334229]
[103.59385681 142.95150757]
[102.00837708 157.86749268]
[100.42289734 172.78346252]
[98.83741760 187.69943237]
[97.25193787 202.61540222]
[95.66646576 217.53137207]
[94.08098602 232.44735718]
[92.49550629 247.36332703]
[90.91002655 262.27929688]
[89.32454681 277.19528198]
[87.73906708 292.11123657]
[86.15359497 307.02722168]
[84.56811523 321.94317627]
[82.98263550 336.85916138]
[89.21793365 351.39984131]
[80.17871857 363.23800659]
[78.59324646 378.15399170]
[77.00776672 393.06994629]
[75.42228699 407.98593140]
[73.83680725 422.90188599]
[72.25132751 437.81787109]
[70.66584778 452.73385620]
[69.08036804 467.64981079]
[67.49489594 482.56579590]
[65.90941620 497.48178101]
[64.98341370 512.45318604]
[64.71868134 527.45080566]
[64.45395660 542.44848633]
[64.18923187 557.44616699]
[63.92449951 572.44378662]
[63.65977478 587.44146729]
[63.39504623 602.43914795]
[63.13032150 617.43682861]
[62.86559296 632.43444824]
[62.60086441 647.43212891]
[62.33613968 662.42980957]
[62.07141113 677.42742920]
[71.37111664 693.30462646]
[61.78553391 707.98907471]
[61.78553391 722.98907471]
[69.52283478 736.78924561]
[61.78553391 749.51647949]
[61.78553391 764.51647949]
[61.78553391 779.51647949]
] def
/pairs [
[1 177]
[2 176]
[3 175]
[5 173]
[6 172]
[9 170]
[10 169]
[11 168]
[12 167]
[13 166]
[14 165]
[15 164]
[16 163]
[17 162]
[18 161]
[19 160]
[20 159]
[26 158]
[27 157]
[28 156]
[29 155]
[30 154]
[31 153]
[32 152]
[33 151]
[34 150]
[35 149]
[37 147]
[38 146]
[39 145]
[40 144]
[41 143]
[42 142]
[43 141]
[44 140]
[45 139]
[46 138]
[47 137]
[48 136]
[49 135]
[50 134]
[51 132]
[52 131]
[54 129]
[55 128]
[56 127]
[57 126]
[58 125]
[60 124]
[61 123]
[62 122]
[63 121]
[64 120]
[65 119]
[66 118]
[67 117]
[68 116]
[69 115]
[71 112]
[72 111]
[74 109]
[75 108]
[76 107]
[78 105]
[79 104]
[80 103]
[81 102]
[82 101]
[84 99]
[85 98]
[87 96]
[88 95]
[89 94]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
