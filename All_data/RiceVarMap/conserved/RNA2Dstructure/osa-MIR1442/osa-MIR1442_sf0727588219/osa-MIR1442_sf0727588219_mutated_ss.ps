%!PS-Adobe-3.0 EPSF-3.0
%%Creator: PS_dot.c,v 1.38 2007/02/02 15:18:13 ivo Exp $, ViennaRNA-2.1.9
%%CreationDate: Thu Jul 16 15:13:50 2015
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 66 210 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: -d2 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  72 216 translate
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  72 6 mul size div dup scale
  size xmin sub xmax sub 2 div size ymin sub ymax sub 2 div
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
UCUAUAUUCAUAGUACUAGAUGUGUCACAUCCAGUACUAGGUUGGUGUUUUAUGGGACGAAGGGAGUAGAUCUUUUGCUAAGUGGAGGCUAAAUUCUCAUCAUCAGAGGAGUAUACUACUCCAUCCGUCCCAUAAUAUAAGAGAUAAUGGGUGGAUGCGACACAUCCUAGUAAAAUGAAUCUGGA\
) def
/coor [
[96.81590271 621.25543213]
[96.81590271 606.25543213]
[96.81590271 591.25543213]
[96.81590271 576.25543213]
[89.07860565 563.52819824]
[96.81590271 549.72802734]
[96.81590271 534.72802734]
[96.81590271 519.72802734]
[96.81590271 504.72799683]
[96.81590271 489.72799683]
[96.81590271 474.72799683]
[86.13503265 464.41030884]
[85.92134857 449.19818115]
[96.81590271 438.06506348]
[96.81590271 423.06506348]
[96.81590271 408.06506348]
[96.81590271 393.06506348]
[96.81590271 378.06506348]
[96.81590271 363.06506348]
[96.68922424 348.06558228]
[96.43588257 333.06774902]
[96.18254089 318.06988525]
[95.92919922 303.07202148]
[95.67585754 288.07415771]
[95.42251587 273.07629395]
[95.16917419 258.07843018]
[87.21801758 245.48365784]
[94.72113800 231.55477905]
[94.46779633 216.55691528]
[94.21445465 201.55905151]
[93.96111298 186.56118774]
[93.70777130 171.56332397]
[93.45442963 156.56547546]
[85.50327301 143.97068787]
[93.00639343 130.04180908]
[80.76677704 124.11439514]
[72.26582336 113.49949646]
[69.15599060 100.26049042]
[72.04177856 86.97084808]
[80.36224365 76.21388245]
[92.50000000 70.08059692]
[92.50000000 55.08059311]
[92.50000000 40.08059311]
[79.90911865 27.95114708]
[79.97389984 10.80581188]
[92.16665649 -0.76330012]
[91.91331482 -15.76116085]
[91.65996552 -30.75902176]
[83.69069672 -44.42654419]
[91.21193695 -57.28268051]
[90.95859528 -72.28054047]
[90.70525360 -87.27840424]
[90.45190430 -102.27626038]
[90.19856262 -117.27412415]
[89.94522095 -132.27198792]
[89.69187927 -147.26985168]
[89.43853760 -162.26770020]
[89.18519592 -177.26556396]
[88.93185425 -192.26342773]
[76.39392090 -201.21365356]
[71.58647156 -215.66154480]
[76.15425873 -230.00027466]
[88.14585876 -238.79457092]
[87.89251709 -253.79243469]
[87.63916779 -268.79028320]
[87.38582611 -283.78814697]
[87.13248444 -298.78601074]
[86.87914276 -313.78387451]
[86.62580109 -328.78173828]
[73.68370819 -347.06182861]
[84.80848694 -365.61874390]
[83.54322052 -380.56530762]
[82.27795410 -395.51184082]
[81.01268768 -410.45837402]
[79.74742126 -425.40490723]
[78.48216248 -440.35147095]
[77.21689606 -455.29800415]
[64.91394043 -461.54052734]
[57.36671066 -472.95956421]
[56.46028519 -486.50872803]
[62.32493591 -498.63626099]
[73.32997894 -506.21609497]
[72.31732941 -521.18188477]
[71.30468750 -536.14764404]
[70.16568756 -551.10437012]
[68.90042114 -566.05090332]
[67.63515472 -580.99743652]
[55.39688873 -590.99743652]
[53.89735794 -606.73046875]
[64.02620697 -618.86230469]
[79.77416992 -620.19543457]
[91.79826355 -609.93884277]
[92.96479797 -594.17767334]
[82.58169556 -582.26269531]
[83.84696198 -567.31616211]
[85.11222839 -552.36962891]
[88.81740570 -545.95574951]
[86.27046204 -537.16027832]
[87.28311157 -522.19451904]
[88.29575348 -507.22872925]
[102.46372986 -498.95724487]
[108.98225403 -483.72128296]
[105.10426331 -467.43884277]
[92.16343689 -456.56326294]
[93.42870331 -441.61672974]
[94.69396973 -426.67019653]
[95.95923615 -411.72363281]
[97.22449493 -396.77709961]
[98.48976135 -381.83056641]
[99.75502777 -366.88403320]
[106.76193237 -363.17968750]
[111.78329468 -356.92626953]
[113.93691254 -349.10324097]
[112.79746246 -340.97457886]
[108.47802734 -333.88446045]
[101.62366486 -329.03506470]
[101.87700653 -314.03723145]
[102.13034821 -299.03936768]
[102.38368988 -284.04150391]
[102.63703156 -269.04364014]
[102.89037323 -254.04577637]
[103.14371490 -239.04791260]
[115.42549133 -230.66365051]
[120.47495270 -216.48736572]
[116.15820312 -201.88534546]
[103.92971802 -192.51676941]
[104.18305969 -177.51890564]
[104.43640137 -162.52104187]
[104.68974304 -147.52319336]
[104.94308472 -132.52532959]
[105.19642639 -117.52746582]
[105.44976807 -102.52960205]
[105.70310974 -87.53174591]
[105.95645142 -72.53388214]
[106.20979309 -57.53602219]
[114.16094971 -44.94124603]
[106.65782928 -31.01236343]
[106.91117096 -16.01450348]
[107.16451263 -1.01664233]
[117.59878540 6.56508923]
[121.81760406 18.95941162]
[118.06576538 31.70611000]
[107.50000000 40.08059311]
[107.50000000 55.08059311]
[107.50000000 70.08059692]
[121.52341461 77.90557861]
[129.71281433 91.71935272]
[129.84843445 107.77763367]
[121.89350891 121.72774506]
[108.00425720 129.78846741]
[115.97352600 143.45599365]
[108.45228577 156.31213379]
[108.70562744 171.30998230]
[108.95896912 186.30784607]
[109.21231842 201.30570984]
[109.46566010 216.30357361]
[109.71900177 231.30143738]
[117.68827057 244.96894836]
[110.16703033 257.82510376]
[110.42037964 272.82293701]
[110.67372131 287.82080078]
[110.92706299 302.81866455]
[111.18040466 317.81652832]
[111.43374634 332.81439209]
[111.68708801 347.81225586]
[114.96685791 356.36154175]
[111.81590271 363.06506348]
[111.81590271 378.06506348]
[111.81590271 393.06506348]
[111.81590271 408.06506348]
[111.81590271 423.06506348]
[111.81590271 438.06506348]
[122.71045685 449.19818115]
[122.49677277 464.41030884]
[111.81590271 474.72799683]
[111.81590271 489.72799683]
[111.81590271 504.72799683]
[111.81590271 519.72802734]
[111.81590271 534.72802734]
[111.81590271 549.72802734]
[119.55319977 563.52819824]
[111.81590271 576.25543213]
[111.81590271 591.25543213]
[111.81590271 606.25543213]
[111.81590271 621.25543213]
] def
/pairs [
[1 185]
[2 184]
[3 183]
[4 182]
[6 180]
[7 179]
[8 178]
[9 177]
[10 176]
[11 175]
[14 172]
[15 171]
[16 170]
[17 169]
[18 168]
[19 167]
[20 165]
[21 164]
[22 163]
[23 162]
[24 161]
[25 160]
[26 159]
[28 157]
[29 156]
[30 155]
[31 154]
[32 153]
[33 152]
[35 150]
[41 145]
[42 144]
[43 143]
[46 139]
[47 138]
[48 137]
[50 135]
[51 134]
[52 133]
[53 132]
[54 131]
[55 130]
[56 129]
[57 128]
[58 127]
[59 126]
[63 122]
[64 121]
[65 120]
[66 119]
[67 118]
[68 117]
[69 116]
[71 110]
[72 109]
[73 108]
[74 107]
[75 106]
[76 105]
[77 104]
[82 100]
[83 99]
[84 98]
[85 96]
[86 95]
[87 94]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
