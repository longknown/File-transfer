%!PS-Adobe-3.0 EPSF-3.0
%%Creator: PS_dot.c,v 1.38 2007/02/02 15:18:13 ivo Exp $, ViennaRNA-2.1.9
%%CreationDate: Thu Jul 16 15:13:50 2015
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 66 210 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: -d2 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  72 216 translate
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  72 6 mul size div dup scale
  size xmin sub xmax sub 2 div size ymin sub ymax sub 2 div
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
UCUAUAUUCAUAGUACUAGAUGUGUCACAUCCAGUACUAGGUUGGUGUUUUAUGGGACGAAGGGAGUAGAUCUUUUGCUAAGUGGAGGCUAAAUUCUCAUCAUCAGAGGAGUAUACUACUCCAUCCGUCCCAUAAUAUAAGGGAUAAUGGGUGGAUGCGACACAUCCUAAUAAAAUGAAUCUGGA\
) def
/coor [
[96.06865692 573.54583740]
[96.06865692 558.54583740]
[96.06865692 543.54583740]
[96.06865692 528.54583740]
[88.33135223 515.81860352]
[96.06865692 502.01840210]
[96.06865692 487.01840210]
[96.06865692 472.01840210]
[96.06865692 457.01840210]
[96.06865692 442.01840210]
[96.06865692 427.01840210]
[85.38777924 416.70071411]
[85.17410278 401.48858643]
[96.06865692 390.35546875]
[96.06865692 375.35546875]
[88.33135223 362.62820435]
[96.06865692 348.82803345]
[96.06865692 333.82803345]
[96.06865692 318.82803345]
[95.94197845 303.82855225]
[95.68863678 288.83068848]
[95.43529510 273.83282471]
[95.18195343 258.83496094]
[94.92861176 243.83711243]
[94.67527008 228.83924866]
[94.42192841 213.84138489]
[86.47077179 201.24661255]
[93.97389221 187.31773376]
[93.72055054 172.31987000]
[93.46720886 157.32200623]
[93.21386719 142.32415771]
[92.96052551 127.32629395]
[92.70718384 112.32843018]
[85.67810059 100.24192047]
[92.29496002 87.92491150]
[77.67210388 84.23611450]
[64.51262665 76.89352417]
[53.71064377 66.40290833]
[45.99830246 53.48367691]
[41.89617538 39.01957321]
[41.67810822 23.99820900]
[45.35296249 9.44362259]
[52.66440582 -3.65351939]
[63.10880661 -14.40335560]
[75.96989441 -22.07729149]
[90.36789703 -26.15737724]
[90.11454773 -41.15523911]
[89.86120605 -56.15309906]
[81.89193726 -69.82062531]
[89.41317749 -82.67675781]
[89.15983582 -97.67462158]
[88.90648651 -112.67247772]
[88.65314484 -127.67034149]
[88.39980316 -142.66819763]
[88.14646149 -157.66606140]
[87.89311981 -172.66392517]
[87.63977814 -187.66178894]
[87.38643646 -202.65963745]
[87.13309479 -217.65750122]
[74.59516144 -226.60772705]
[69.78771210 -241.05561829]
[74.35549927 -255.39436340]
[86.34709930 -264.18865967]
[86.09375000 -279.18652344]
[85.84040833 -294.18438721]
[85.58706665 -309.18222046]
[85.33372498 -324.18008423]
[85.08038330 -339.17794800]
[84.82704163 -354.17581177]
[71.88494110 -372.45590210]
[83.00972748 -391.01281738]
[81.74446106 -405.95938110]
[80.47919464 -420.90591431]
[79.21392822 -435.85244751]
[77.94866180 -450.79901123]
[76.68339539 -465.74554443]
[75.41813660 -480.69207764]
[63.11517715 -486.93460083]
[55.56795120 -498.35363770]
[54.66152573 -511.90280151]
[60.52617264 -524.03033447]
[71.53121948 -531.61016846]
[70.51856995 -546.57592773]
[69.50592804 -561.54174805]
[68.36692810 -576.49841309]
[67.10166168 -591.44494629]
[65.83639526 -606.39147949]
[53.59812927 -616.39154053]
[52.09859848 -632.12451172]
[62.22744751 -644.25634766]
[77.97541046 -645.58947754]
[89.99950409 -635.33294678]
[91.16603851 -619.57177734]
[80.78293610 -607.65679932]
[82.04820251 -592.71020508]
[83.31346893 -577.76367188]
[87.01864624 -571.34985352]
[84.47170258 -562.55438232]
[85.48435211 -547.58862305]
[86.49699402 -532.62280273]
[100.66497040 -524.35131836]
[107.18348694 -509.11538696]
[103.30550385 -492.83291626]
[90.36467743 -481.95733643]
[91.62994385 -467.01080322]
[92.89521027 -452.06427002]
[94.16046906 -437.11770630]
[95.42573547 -422.17117310]
[96.69100189 -407.22463989]
[97.95626831 -392.27810669]
[104.96317291 -388.57376099]
[109.98453522 -382.32034302]
[112.13815308 -374.49731445]
[110.99870300 -366.36865234]
[106.67926788 -359.27853394]
[99.82490540 -354.42916870]
[100.07824707 -339.43130493]
[100.33158875 -324.43344116]
[100.58493042 -309.43557739]
[100.83827209 -294.43771362]
[101.09161377 -279.43984985]
[101.34495544 -264.44198608]
[113.62673187 -256.05770874]
[118.67619324 -241.88143921]
[114.35944366 -227.27941895]
[102.13095856 -217.91084290]
[102.38430023 -202.91297913]
[102.63764191 -187.91513062]
[102.89098358 -172.91726685]
[103.14432526 -157.91940308]
[103.39766693 -142.92153931]
[103.65100861 -127.92368317]
[103.90435028 -112.92581940]
[104.15769196 -97.92796326]
[104.41103363 -82.93009949]
[112.36219025 -70.33531952]
[104.85906982 -56.40644073]
[105.11241150 -41.40858078]
[105.36575317 -26.41071892]
[119.89334106 -22.81924057]
[133.00627136 -15.58405590]
[143.80778503 -5.19310331]
[151.55740356 7.64962864]
[155.72172546 22.07179642]
[156.01110840 37.09195709]
[152.39984131 51.68635178]
[145.12823486 64.85868835]
[134.68672180 75.70815277]
[121.78275299 83.49100494]
[107.29281616 87.67156982]
[114.32189941 99.75807953]
[107.70503998 112.07508850]
[107.95838165 127.07294464]
[108.21172333 142.07081604]
[108.46506500 157.06866455]
[108.71840668 172.06652832]
[108.97174835 187.06439209]
[116.94102478 200.73191833]
[109.41978455 213.58804321]
[109.67312622 228.58590698]
[109.92646790 243.58377075]
[110.17980957 258.58163452]
[110.43315887 273.57949829]
[110.68650055 288.57736206]
[110.93984222 303.57522583]
[114.21961212 312.12451172]
[111.06865692 318.82803345]
[111.06865692 333.82803345]
[111.06865692 348.82803345]
[118.80595398 362.62820435]
[111.06865692 375.35546875]
[111.06865692 390.35546875]
[121.96321106 401.48858643]
[121.74952698 416.70071411]
[111.06865692 427.01840210]
[111.06865692 442.01840210]
[111.06865692 457.01840210]
[111.06865692 472.01840210]
[111.06865692 487.01840210]
[111.06865692 502.01840210]
[118.80595398 515.81860352]
[111.06865692 528.54583740]
[111.06865692 543.54583740]
[111.06865692 558.54583740]
[111.06865692 573.54583740]
] def
/pairs [
[1 185]
[2 184]
[3 183]
[4 182]
[6 180]
[7 179]
[8 178]
[9 177]
[10 176]
[11 175]
[14 172]
[15 171]
[17 169]
[18 168]
[19 167]
[20 165]
[21 164]
[22 163]
[23 162]
[24 161]
[25 160]
[26 159]
[28 157]
[29 156]
[30 155]
[31 154]
[32 153]
[33 152]
[35 150]
[46 139]
[47 138]
[48 137]
[50 135]
[51 134]
[52 133]
[53 132]
[54 131]
[55 130]
[56 129]
[57 128]
[58 127]
[59 126]
[63 122]
[64 121]
[65 120]
[66 119]
[67 118]
[68 117]
[69 116]
[71 110]
[72 109]
[73 108]
[74 107]
[75 106]
[76 105]
[77 104]
[82 100]
[83 99]
[84 98]
[85 96]
[86 95]
[87 94]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
