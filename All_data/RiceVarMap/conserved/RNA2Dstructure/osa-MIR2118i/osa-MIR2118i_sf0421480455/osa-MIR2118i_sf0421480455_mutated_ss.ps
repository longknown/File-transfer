%!PS-Adobe-3.0 EPSF-3.0
%%Creator: PS_dot.c,v 1.38 2007/02/02 15:18:13 ivo Exp $, ViennaRNA-2.1.9
%%CreationDate: Thu Jul 16 15:13:56 2015
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 66 210 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: -d2 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  72 216 translate
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  72 6 mul size div dup scale
  size xmin sub xmax sub 2 div size ymin sub ymax sub 2 div
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
GCAAGUAAGGAAGAGGAAGAAAUUGAGUGUCUAAGGGCAAUCGGAAUGGGAACAUUGAGGAAAGCCUACAGCGUCUUUCUCGUCCACUAGAAGUGGGGGGUAAAGAUAAUGUUUUUGUGUUUUCCUAGUGCCUCCCAUUCCUAUUGUCCUUAGAUACUCCUUCAUCUUCCUUUCAGCUUGC\
) def
/coor [
[88.33119202 783.04028320]
[88.33119202 768.04028320]
[88.33119202 753.04028320]
[88.33119202 738.04028320]
[88.33119202 723.04028320]
[88.33119202 708.04028320]
[87.94284821 693.04534912]
[87.16642761 678.06542969]
[86.39000702 663.08557129]
[85.61358643 648.10565186]
[84.83717346 633.12579346]
[84.06075287 618.14587402]
[83.28433228 603.16595459]
[82.50791168 588.18609619]
[74.12220001 575.87640381]
[81.13481140 561.69421387]
[80.35839081 546.71429443]
[79.58197021 531.73443604]
[78.80554962 516.75451660]
[66.88512421 525.85968018]
[52.29219437 522.38885498]
[45.74747467 508.89193726]
[52.05903625 495.28445435]
[66.59009552 491.56311035]
[78.66492462 500.46093750]
[79.18266296 485.46987915]
[79.70040894 470.47879028]
[80.21814728 455.48773193]
[80.73589325 440.49667358]
[81.25363159 425.50561523]
[81.77137756 410.51455688]
[82.28911591 395.52349854]
[82.80686188 380.53244019]
[83.32460022 365.54138184]
[83.84234619 350.55029297]
[84.36008453 335.55923462]
[84.87783051 320.56817627]
[85.39556885 305.57711792]
[85.91331482 290.58605957]
[86.43105316 275.59500122]
[86.94879913 260.60394287]
[79.65540314 247.61718750]
[87.86441803 234.09230042]
[88.38216400 219.10124207]
[88.89990234 204.11016846]
[89.41764832 189.11911011]
[89.93538666 174.12805176]
[90.45313263 159.13699341]
[90.97087097 144.14591980]
[91.48861694 129.15486145]
[92.00635529 114.16380310]
[83.74163818 99.57894135]
[92.75021362 85.44142914]
[93.00911713 70.44365692]
[93.26802826 55.44589615]
[93.52693939 40.44812775]
[90.54004669 31.78777504]
[93.92198181 25.19432449]
[94.43972778 10.20326233]
[94.95746613 -4.78779984]
[95.47521210 -19.77886200]
[95.99295044 -34.76992416]
[96.51069641 -49.76098633]
[97.02843475 -64.75204468]
[97.54618073 -79.74311066]
[82.22218323 -94.10647583]
[82.42181396 -114.81617737]
[97.58556366 -128.48966980]
[97.06782532 -143.48072815]
[96.55007935 -158.47180176]
[85.27774811 -169.22224426]
[84.96623230 -184.43269348]
[95.28461456 -195.11288452]
[94.76687622 -210.10395813]
[94.24913025 -225.09501648]
[93.73139191 -240.08607483]
[93.21364594 -255.07713318]
[92.69590759 -270.06820679]
[84.48688507 -283.59307861]
[91.78028107 -296.57983398]
[91.26254272 -311.57089233]
[83.05352020 -325.09579468]
[90.34691620 -338.08255005]
[89.82917023 -353.07360840]
[89.31143188 -368.06466675]
[88.79368591 -383.05572510]
[88.27594757 -398.04678345]
[87.75820160 -413.03784180]
[81.16876221 -428.65884399]
[94.35514832 -439.31509399]
[108.24530029 -429.59399414]
[102.74926758 -413.55560303]
[103.26700592 -398.56451416]
[103.78475189 -383.57345581]
[104.30249023 -368.58239746]
[104.82023621 -353.59133911]
[105.33797455 -338.60028076]
[113.50996399 -326.14764404]
[106.25360107 -312.08865356]
[106.77134705 -297.09759521]
[114.94332886 -284.64495850]
[107.68696594 -270.58593750]
[108.20471191 -255.59487915]
[108.72245026 -240.60382080]
[109.24019623 -225.61276245]
[109.75793457 -210.62168884]
[110.27568054 -195.63063049]
[121.30631256 -185.68775940]
[122.04492950 -170.49206543]
[111.54114532 -158.98953247]
[112.05888367 -143.99847412]
[112.57662964 -129.00741577]
[121.09922791 -125.01291656]
[127.61100006 -118.13665771]
[131.17933655 -109.30176544]
[131.27075195 -99.71589661]
[127.83013916 -90.70616913]
[121.29438019 -83.53545380]
[112.53723907 -79.22536469]
[112.01950073 -64.23430634]
[111.50175476 -49.24324417]
[110.98401642 -34.25218201]
[110.46627045 -19.26111984]
[109.94853210 -4.27005768]
[109.43078613 10.72100449]
[108.91304779 25.71206665]
[108.52470398 40.70703888]
[108.26579285 55.70480347]
[108.00688171 70.70256805]
[107.74797821 85.70033264]
[115.32832336 94.56363678]
[115.02638245 106.22248840]
[106.99742126 114.68154144]
[106.47967529 129.67260742]
[105.96193695 144.66366577]
[105.44419098 159.65472412]
[104.92645264 174.64579773]
[104.40870667 189.63685608]
[103.89096832 204.62791443]
[103.37322235 219.61897278]
[102.85548401 234.61003113]
[110.11184692 248.66905212]
[101.93985748 261.12167358]
[101.42211914 276.11273193]
[100.90437317 291.10379028]
[100.38663483 306.09484863]
[99.86888885 321.08593750]
[99.35115051 336.07699585]
[98.83340454 351.06805420]
[98.31566620 366.05911255]
[97.79792023 381.05017090]
[97.28018188 396.04122925]
[96.76243591 411.03228760]
[96.24469757 426.02334595]
[95.72695160 441.01443481]
[95.20921326 456.00549316]
[94.69146729 470.99655151]
[94.17372894 485.98760986]
[93.65598297 500.97866821]
[93.78544617 515.97808838]
[94.56186676 530.95800781]
[95.33828735 545.93786621]
[96.11470795 560.91778564]
[104.55594635 574.29895020]
[97.48780060 587.40966797]
[98.26422119 602.38958740]
[99.04064178 617.36944580]
[99.81706238 632.34936523]
[100.59348297 647.32922363]
[101.36990356 662.30914307]
[102.14632416 677.28900146]
[102.92274475 692.26892090]
[105.79512787 696.68933105]
[106.58740997 701.30688477]
[105.57650757 705.29003906]
[103.33119202 708.04028320]
[103.33119202 723.04028320]
[103.33119202 738.04028320]
[103.33119202 753.04028320]
[103.33119202 768.04028320]
[103.33119202 783.04028320]
] def
/pairs [
[1 181]
[2 180]
[3 179]
[4 178]
[5 177]
[6 176]
[7 172]
[8 171]
[9 170]
[10 169]
[11 168]
[12 167]
[13 166]
[14 165]
[16 163]
[17 162]
[18 161]
[19 160]
[25 159]
[26 158]
[27 157]
[28 156]
[29 155]
[30 154]
[31 153]
[32 152]
[33 151]
[34 150]
[35 149]
[36 148]
[37 147]
[38 146]
[39 145]
[40 144]
[41 143]
[43 141]
[44 140]
[45 139]
[46 138]
[47 137]
[48 136]
[49 135]
[50 134]
[51 133]
[53 130]
[54 129]
[55 128]
[56 127]
[58 126]
[59 125]
[60 124]
[61 123]
[62 122]
[63 121]
[64 120]
[65 119]
[68 112]
[69 111]
[70 110]
[73 107]
[74 106]
[75 105]
[76 104]
[77 103]
[78 102]
[80 100]
[81 99]
[83 97]
[84 96]
[85 95]
[86 94]
[87 93]
[88 92]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
