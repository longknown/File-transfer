%!PS-Adobe-3.0 EPSF-3.0
%%Creator: PS_dot.c,v 1.38 2007/02/02 15:18:13 ivo Exp $, ViennaRNA-2.1.9
%%CreationDate: Thu Jul 16 15:13:56 2015
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 66 210 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: -d2 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  72 216 translate
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  72 6 mul size div dup scale
  size xmin sub xmax sub 2 div size ymin sub ymax sub 2 div
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
GCGAGUAAGGAAGAGGAAGAAAUUGAGUGUCUAAGGGCAAUCGGAAUGGGAACAUUGAGGAAAGCCUACAGCGUCUUUCUCGUCCACUAGAAGUGGGGGGUAAAGAUAAUGUUUUUGUGUUUUCCUAGUGCCUCCCAUUCCUAUUGUCCUUAGAUACUCCUUCCUCUUCCUUUCAGCUUGC\
) def
/coor [
[87.34762573 854.61096191]
[87.34762573 839.61096191]
[87.34762573 824.61096191]
[87.34762573 809.61096191]
[87.34762573 794.61096191]
[87.34762573 779.61096191]
[86.95928955 764.61602783]
[86.18286896 749.63610840]
[85.40644836 734.65618896]
[84.63002777 719.67633057]
[83.85360718 704.69641113]
[83.07718658 689.71655273]
[82.30076599 674.73663330]
[81.52434540 659.75677490]
[80.74792480 644.77685547]
[79.97150421 629.79699707]
[79.19508362 614.81707764]
[78.41866302 599.83715820]
[77.64224243 584.85729980]
[65.72181702 593.96240234]
[51.12888718 590.49163818]
[44.58416367 576.99468994]
[50.89572906 563.38720703]
[65.42678833 559.66589355]
[77.50161743 568.56372070]
[78.01935577 553.57263184]
[78.53710175 538.58154297]
[79.05484009 523.59051514]
[79.57258606 508.59945679]
[80.09032440 493.60836792]
[80.60807037 478.61730957]
[81.12580872 463.62625122]
[81.64355469 448.63519287]
[82.16129303 433.64413452]
[82.67903137 418.65307617]
[83.19677734 403.66201782]
[83.71451569 388.67095947]
[84.23226166 373.67987061]
[84.75000000 358.68881226]
[85.26774597 343.69775391]
[85.78548431 328.70669556]
[78.49209595 315.71994019]
[86.70111084 302.19506836]
[87.21885681 287.20401001]
[87.73659515 272.21292114]
[88.25434113 257.22186279]
[88.77207947 242.23080444]
[89.28982544 227.23974609]
[89.80756378 212.24868774]
[90.32530975 197.25762939]
[90.84304810 182.26655579]
[81.77080536 167.25743103]
[91.61853027 151.71191406]
[91.87744141 136.71415710]
[92.13635254 121.71639252]
[92.39526367 106.71862793]
[89.36820221 99.22370911]
[92.79030609 91.46482086]
[93.30804443 76.47375488]
[93.82579041 61.48269653]
[94.34352875 46.49163437]
[94.86127472 31.50057220]
[95.37901306 16.50951004]
[95.89675903 1.51844740]
[96.41449738 -13.47261429]
[81.09049988 -27.83597755]
[81.29013824 -48.54568481]
[96.45388794 -62.21917725]
[95.93614197 -77.21023560]
[95.41840363 -92.20130157]
[84.14607239 -102.95175171]
[83.83455658 -118.16220093]
[94.15293884 -128.84239197]
[93.63520050 -143.83345032]
[93.11745453 -158.82452393]
[92.59971619 -173.81558228]
[92.08197021 -188.80664062]
[91.56423187 -203.79769897]
[83.35520935 -217.32258606]
[90.64860535 -230.30934143]
[90.13085938 -245.30039978]
[81.92184448 -258.82528687]
[89.21524048 -271.81204224]
[88.69749451 -286.80310059]
[88.17975616 -301.79415894]
[87.66201019 -316.78521729]
[87.14427185 -331.77630615]
[86.62652588 -346.76736450]
[80.03708649 -362.38833618]
[93.22347260 -373.04458618]
[107.11361694 -363.32348633]
[101.61759186 -347.28509521]
[102.13533020 -332.29403687]
[102.65307617 -317.30297852]
[103.17081451 -302.31192017]
[103.68856049 -287.32086182]
[104.20629883 -272.32977295]
[112.37828827 -259.87716675]
[105.12192535 -245.81814575]
[105.63966370 -230.82708740]
[113.81165314 -218.37445068]
[106.55529022 -204.31544495]
[107.07303619 -189.32438660]
[107.59077454 -174.33332825]
[108.10852051 -159.34225464]
[108.62625885 -144.35119629]
[109.14400482 -129.36013794]
[120.17463684 -119.41726685]
[120.91325378 -104.22157288]
[110.40946198 -92.71903992]
[110.92720795 -77.72798157]
[111.44494629 -62.73691940]
[119.96754456 -58.74242020]
[126.47932434 -51.86616135]
[130.04766846 -43.03127289]
[130.13906860 -33.44540024]
[126.69846344 -24.43567657]
[120.16270447 -17.26495934]
[111.40556335 -12.95487309]
[110.88781738 2.03618956]
[110.37007904 17.02725220]
[109.85233307 32.01831436]
[109.33459473 47.00937653]
[108.81684875 62.00043869]
[108.29911041 76.99150085]
[107.78136444 91.98255920]
[107.39302826 106.97753143]
[107.13411713 121.97529602]
[106.87520599 136.97306824]
[106.61629486 151.97082520]
[115.00855255 161.78765869]
[114.46927643 174.28997803]
[105.83411407 182.78430176]
[105.31636810 197.77536011]
[104.79862976 212.76643372]
[104.28088379 227.75749207]
[103.76314545 242.74855042]
[103.24539948 257.73962402]
[102.72766113 272.73068237]
[102.20991516 287.72174072]
[101.69217682 302.71279907]
[108.94853973 316.77182007]
[100.77655029 329.22442627]
[100.25880432 344.21551514]
[99.74106598 359.20657349]
[99.22332001 374.19763184]
[98.70558167 389.18869019]
[98.18783569 404.17974854]
[97.67009735 419.17080688]
[97.15235138 434.16186523]
[96.63461304 449.15292358]
[96.11687469 464.14401245]
[95.59912872 479.13507080]
[95.08139038 494.12612915]
[94.56364441 509.11718750]
[94.04590607 524.10827637]
[93.52816010 539.09930420]
[93.01042175 554.09039307]
[92.49267578 569.08142090]
[92.62213898 584.08087158]
[93.39855957 599.06079102]
[94.17498016 614.04064941]
[94.95139313 629.02056885]
[95.72781372 644.00042725]
[96.50423431 658.98034668]
[97.28065491 673.96020508]
[98.05707550 688.94012451]
[98.83349609 703.91998291]
[99.60991669 718.89990234]
[100.38633728 733.87982178]
[101.16275787 748.85968018]
[101.93917847 763.83959961]
[104.81156158 768.26000977]
[105.60384369 772.87756348]
[104.59294891 776.86071777]
[102.34762573 779.61096191]
[102.34762573 794.61096191]
[102.34762573 809.61096191]
[102.34762573 824.61096191]
[102.34762573 839.61096191]
[102.34762573 854.61096191]
] def
/pairs [
[1 181]
[2 180]
[3 179]
[4 178]
[5 177]
[6 176]
[7 172]
[8 171]
[9 170]
[10 169]
[11 168]
[12 167]
[13 166]
[14 165]
[15 164]
[16 163]
[17 162]
[18 161]
[19 160]
[25 159]
[26 158]
[27 157]
[28 156]
[29 155]
[30 154]
[31 153]
[32 152]
[33 151]
[34 150]
[35 149]
[36 148]
[37 147]
[38 146]
[39 145]
[40 144]
[41 143]
[43 141]
[44 140]
[45 139]
[46 138]
[47 137]
[48 136]
[49 135]
[50 134]
[51 133]
[53 130]
[54 129]
[55 128]
[56 127]
[58 126]
[59 125]
[60 124]
[61 123]
[62 122]
[63 121]
[64 120]
[65 119]
[68 112]
[69 111]
[70 110]
[73 107]
[74 106]
[75 105]
[76 104]
[77 103]
[78 102]
[80 100]
[81 99]
[83 97]
[84 96]
[85 95]
[86 94]
[87 93]
[88 92]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
