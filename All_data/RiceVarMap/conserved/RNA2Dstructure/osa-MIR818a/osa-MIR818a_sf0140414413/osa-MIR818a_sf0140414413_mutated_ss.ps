%!PS-Adobe-3.0 EPSF-3.0
%%Creator: PS_dot.c,v 1.38 2007/02/02 15:18:13 ivo Exp $, ViennaRNA-2.1.9
%%CreationDate: Thu Jul 16 15:14:00 2015
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 66 210 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: -d2 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  72 216 translate
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  72 6 mul size div dup scale
  size xmin sub xmax sub 2 div size ymin sub ymax sub 2 div
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
UCCCUCCAUCCCAUAGUAUAAGGGAUUUGGGAAUAAUGUGACAUAUCCUAGUAUAAUGAAUCUGGACAAACCGUCUGUCCAAAUUCAUUGUCCUAGUAUGUGUCACAUCUACUCAAAAUCCCUUAUAUUAUGGGACGGAAGGGA\
) def
/coor [
[102.61032104 571.64178467]
[102.61032104 556.64178467]
[102.61032104 541.64178467]
[102.61032104 526.64178467]
[102.61032104 511.64175415]
[102.44783020 496.64263916]
[102.12286377 481.64617920]
[94.11164856 469.08950806]
[101.54815674 455.12493896]
[101.22319031 440.12847900]
[100.89822388 425.13198853]
[100.57325745 410.13549805]
[100.24829102 395.13903809]
[99.92332458 380.14254761]
[99.59835815 365.14605713]
[99.27339172 350.14959717]
[98.94842529 335.15310669]
[98.62345886 320.15661621]
[98.29849243 305.16015625]
[97.97352600 290.16366577]
[97.64855194 275.16720581]
[97.32358551 260.17071533]
[96.99861908 245.17424011]
[96.67365265 230.17774963]
[96.34868622 215.18127441]
[96.02371979 200.18479919]
[95.69875336 185.18830872]
[95.37378693 170.19183350]
[94.88638306 155.19975281]
[94.23660278 140.21383667]
[93.58682251 125.22792053]
[81.97904205 118.78355408]
[75.05938721 107.45268250]
[74.62798309 94.18301392]
[80.79705811 82.42662048]
[91.96174622 75.24190521]
[91.63677216 60.24542999]
[91.31180573 45.24894714]
[90.98683929 30.25247002]
[90.66187286 15.25599003]
[90.33690643 0.25951037]
[90.01194000 -14.73696899]
[89.68697357 -29.73344803]
[89.36200714 -44.72992706]
[89.03704071 -59.72640610]
[88.71207428 -74.72288513]
[80.67761230 -88.35219574]
[88.13736725 -101.24410248]
[87.81240082 -116.24058533]
[87.48743439 -131.23706055]
[87.16246796 -146.23355103]
[79.12801361 -159.86285400]
[86.58776855 -172.75476074]
[86.26280212 -187.75123596]
[85.93783569 -202.74772644]
[85.61286926 -217.74420166]
[85.28790283 -232.74067688]
[84.96293640 -247.73715210]
[84.63796234 -262.73364258]
[84.31299591 -277.73013306]
[83.98802948 -292.72659302]
[75.95357513 -306.35589600]
[83.41333008 -319.24780273]
[83.08836365 -334.24429321]
[82.76339722 -349.24078369]
[82.43843079 -364.23724365]
[82.11346436 -379.23373413]
[81.78849792 -394.23022461]
[69.48200226 -403.87823486]
[66.30691528 -419.19009399]
[73.76241302 -432.93597412]
[88.32823181 -438.62551880]
[103.12683868 -433.57229614]
[111.17079163 -420.16226196]
[108.66197205 -404.72723389]
[96.78497314 -394.55517578]
[97.10993958 -379.55868530]
[97.43490601 -364.56222534]
[97.75987244 -349.56573486]
[98.08483887 -334.56927490]
[98.40980530 -319.57278442]
[106.42102051 -307.01611328]
[98.98451233 -293.05157471]
[99.30947876 -278.05508423]
[99.63444519 -263.05859375]
[99.95941162 -248.06211853]
[100.28437805 -233.06564331]
[100.60934448 -218.06916809]
[100.93431091 -203.07269287]
[101.25927734 -188.07620239]
[101.58424377 -173.07972717]
[109.59545898 -160.52307129]
[102.15895081 -146.55851746]
[102.48391724 -131.56202698]
[102.80888367 -116.56555176]
[103.13385010 -101.56906891]
[111.14506531 -89.01241302]
[103.70854950 -75.04785156]
[104.03352356 -60.05137253]
[104.35848999 -45.05489349]
[104.68345642 -30.05841637]
[105.00842285 -15.06193638]
[105.33338928 -0.06545654]
[105.65835571 14.93102264]
[105.98332214 29.92750168]
[106.30828857 44.92398071]
[106.63325500 59.92045975]
[106.95822144 74.91693878]
[120.46203613 83.91020203]
[126.01655579 99.15418243]
[121.46390533 114.72676086]
[108.57273865 124.57814026]
[109.22252655 139.56405640]
[109.87230682 154.54997253]
[113.39233398 163.06108093]
[110.37026978 169.86686707]
[110.69523621 184.86334229]
[111.02020264 199.85983276]
[111.34516907 214.85630798]
[111.67013550 229.85278320]
[111.99510193 244.84927368]
[112.32006836 259.84573364]
[112.64503479 274.84222412]
[112.97000122 289.83871460]
[113.29496765 304.83517456]
[113.61993408 319.83166504]
[113.94490051 334.82815552]
[114.26986694 349.82461548]
[114.59483337 364.82110596]
[114.91979980 379.81759644]
[115.24477386 394.81405640]
[115.56974030 409.81054688]
[115.89470673 424.80700684]
[116.21967316 439.80349731]
[116.54463959 454.79998779]
[124.57909393 468.42929077]
[117.11933899 481.32119751]
[117.44430542 496.31768799]
[120.77912140 504.90304565]
[117.61032104 511.64175415]
[117.61032104 526.64178467]
[117.61032104 541.64178467]
[117.61032104 556.64178467]
[117.61032104 571.64178467]
] def
/pairs [
[1 144]
[2 143]
[3 142]
[4 141]
[5 140]
[6 138]
[7 137]
[9 135]
[10 134]
[11 133]
[12 132]
[13 131]
[14 130]
[15 129]
[16 128]
[17 127]
[18 126]
[19 125]
[20 124]
[21 123]
[22 122]
[23 121]
[24 120]
[25 119]
[26 118]
[27 117]
[28 116]
[29 114]
[30 113]
[31 112]
[36 108]
[37 107]
[38 106]
[39 105]
[40 104]
[41 103]
[42 102]
[43 101]
[44 100]
[45 99]
[46 98]
[48 96]
[49 95]
[50 94]
[51 93]
[53 91]
[54 90]
[55 89]
[56 88]
[57 87]
[58 86]
[59 85]
[60 84]
[61 83]
[63 81]
[64 80]
[65 79]
[66 78]
[67 77]
[68 76]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
