%!PS-Adobe-3.0 EPSF-3.0
%%Creator: PS_dot.c,v 1.38 2007/02/02 15:18:13 ivo Exp $, ViennaRNA-2.1.9
%%CreationDate: Thu Jul 16 15:14:00 2015
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 66 210 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: -d2 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  72 216 translate
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  72 6 mul size div dup scale
  size xmin sub xmax sub 2 div size ymin sub ymax sub 2 div
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
UCCCUCCAUCCCAUAGUAUAAGGGAUUUGGGAAUGAUGUGACAUAUCCUAGUAUAAUGGAUCUGGACAAACCGUCUGUCCAAAUUCAUUGUCCUAGUAUGUGUCACAUCUACUCAAAAUCCCUUAUAUUAUGGGACGGAAGGGA\
) def
/coor [
[102.38862610 566.52874756]
[102.38862610 551.52874756]
[102.38862610 536.52874756]
[102.38862610 521.52874756]
[102.38862610 506.52874756]
[102.22612762 491.52960205]
[101.90116119 476.53314209]
[93.88994598 463.97647095]
[101.32646179 450.01190186]
[101.00149536 435.01544189]
[100.67652893 420.01895142]
[100.35156250 405.02249146]
[100.02659607 390.02600098]
[99.70162964 375.02951050]
[99.37665558 360.03305054]
[99.05168915 345.03656006]
[98.72672272 330.04006958]
[98.40175629 315.04360962]
[98.07678986 300.04711914]
[97.75182343 285.05062866]
[97.42685699 270.05416870]
[97.10189056 255.05767822]
[96.77692413 240.06120300]
[96.45195770 225.06472778]
[96.12699127 210.06825256]
[95.80202484 195.07176208]
[95.47705841 180.07528687]
[95.15209198 165.07881165]
[94.66468811 150.08673096]
[94.01490784 135.10081482]
[93.36511993 120.11489105]
[83.04056549 112.68888855]
[78.83029175 100.68824005]
[82.25219727 88.43946838]
[92.07261658 80.35854340]
[91.74765015 65.36206055]
[91.42268372 50.36558151]
[91.09771729 35.36910248]
[90.77275085 20.37262344]
[90.44778442 5.37614298]
[90.12281799 -9.62033653]
[89.79785156 -24.61681557]
[89.47288513 -39.61329651]
[89.14791870 -54.60977554]
[88.82295227 -69.60625458]
[88.49797821 -84.60273743]
[80.46352386 -98.23204041]
[87.92327881 -111.12395477]
[87.59831238 -126.12042999]
[87.27334595 -141.11691284]
[86.94837952 -156.11338806]
[78.91391754 -169.74270630]
[86.37367249 -182.63461304]
[86.04870605 -197.63108826]
[85.72373962 -212.62756348]
[85.39877319 -227.62405396]
[85.07380676 -242.62052917]
[84.74884033 -257.61700439]
[84.42387390 -272.61349487]
[84.09890747 -287.60995483]
[83.77394104 -302.60644531]
[75.73947906 -316.23574829]
[83.19923401 -329.12765503]
[82.87426758 -344.12414551]
[82.54930115 -359.12063599]
[82.22433472 -374.11709595]
[81.89936829 -389.11358643]
[81.57440186 -404.11004639]
[69.26791382 -413.75808716]
[66.09282684 -429.06994629]
[73.54831696 -442.81582642]
[88.11413574 -448.50537109]
[102.91275024 -443.45214844]
[110.95669556 -430.04211426]
[108.44787598 -414.60708618]
[96.57088470 -404.43502808]
[96.89585114 -389.43853760]
[97.22081757 -374.44207764]
[97.54578400 -359.44558716]
[97.87075043 -344.44909668]
[98.19571686 -329.45263672]
[106.20693207 -316.89596558]
[98.77041626 -302.93139648]
[99.09538269 -287.93493652]
[99.42035675 -272.93844604]
[99.74532318 -257.94198608]
[100.07028961 -242.94549561]
[100.39525604 -227.94902039]
[100.72022247 -212.95252991]
[101.04518890 -197.95605469]
[101.37015533 -182.95957947]
[109.38137054 -170.40290833]
[101.94485474 -156.43835449]
[102.26982117 -141.44187927]
[102.59479523 -126.44539642]
[102.91976166 -111.44892120]
[110.93096924 -98.89225769]
[103.49446106 -84.92770386]
[103.81942749 -69.93122101]
[104.14439392 -54.93474197]
[104.46936035 -39.93826294]
[104.79432678 -24.94178200]
[105.11929321 -9.94530296]
[105.44425964 5.05117607]
[105.76922607 20.04765511]
[106.09420013 35.04413605]
[106.41916656 50.04061508]
[106.74413300 65.03709412]
[107.06909943 80.03357697]
[119.23643494 91.13491058]
[119.77162933 107.59690857]
[108.35104370 119.46511078]
[109.00082397 134.45101929]
[109.65060425 149.43695068]
[113.17063141 157.94804382]
[110.14856720 164.75384521]
[110.47353363 179.75032043]
[110.79850006 194.74679565]
[111.12346649 209.74327087]
[111.44843292 224.73976135]
[111.77339935 239.73623657]
[112.09837341 254.73271179]
[112.42333984 269.72918701]
[112.74830627 284.72567749]
[113.07327271 299.72216797]
[113.39823914 314.71862793]
[113.72320557 329.71511841]
[114.04817200 344.71157837]
[114.37313843 359.70806885]
[114.69810486 374.70455933]
[115.02307129 389.70101929]
[115.34803772 404.69750977]
[115.67300415 419.69400024]
[115.99797058 434.69046021]
[116.32293701 449.68695068]
[124.35739899 463.31625366]
[116.89764404 476.20816040]
[117.22261047 491.20465088]
[120.55741882 499.79000854]
[117.38862610 506.52874756]
[117.38862610 521.52874756]
[117.38862610 536.52874756]
[117.38862610 551.52874756]
[117.38862610 566.52874756]
] def
/pairs [
[1 144]
[2 143]
[3 142]
[4 141]
[5 140]
[6 138]
[7 137]
[9 135]
[10 134]
[11 133]
[12 132]
[13 131]
[14 130]
[15 129]
[16 128]
[17 127]
[18 126]
[19 125]
[20 124]
[21 123]
[22 122]
[23 121]
[24 120]
[25 119]
[26 118]
[27 117]
[28 116]
[29 114]
[30 113]
[31 112]
[35 109]
[36 108]
[37 107]
[38 106]
[39 105]
[40 104]
[41 103]
[42 102]
[43 101]
[44 100]
[45 99]
[46 98]
[48 96]
[49 95]
[50 94]
[51 93]
[53 91]
[54 90]
[55 89]
[56 88]
[57 87]
[58 86]
[59 85]
[60 84]
[61 83]
[63 81]
[64 80]
[65 79]
[66 78]
[67 77]
[68 76]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
