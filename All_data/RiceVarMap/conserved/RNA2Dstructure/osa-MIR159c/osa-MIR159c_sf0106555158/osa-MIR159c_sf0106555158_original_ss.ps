%!PS-Adobe-3.0 EPSF-3.0
%%Creator: PS_dot.c,v 1.38 2007/02/02 15:18:13 ivo Exp $, ViennaRNA-2.1.9
%%CreationDate: Thu Jul 16 15:13:51 2015
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 66 210 518 662
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: -d2 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  72 216 translate
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  72 6 mul size div dup scale
  size xmin sub xmax sub 2 div size ymin sub ymax sub 2 div
  translate
} bind def
end
%%EndProlog
RNAplot begin
% data start here
/sequence (\
GAGGAGGAAGAGGAGCUCCUUUCGAUCCAAUUCAGGAGAGGAAGUGGUAGGAUGCAGCUGCCGAUUCAUGGAUACCUCUGGAGUGCAUGGCAGCAAUGCUGUAGGCCUGCACUUGCAUGGGUUUGCAUGACCCGGGAGAUGAACCCACCAUUGUCUUCCUCUAUUGAUUGGAUUGAAGGGAGCUCCACAUCUCUCUC\
) def
/coor [
[93.63832092 882.14569092]
[85.90264130 867.68566895]
[94.78617096 853.90112305]
[95.02415466 838.90301514]
[95.26214600 823.90490723]
[95.50013733 808.90673828]
[95.61913300 793.90722656]
[95.61913300 778.90722656]
[87.88183594 766.17999268]
[95.61913300 752.37982178]
[87.88183594 739.65252686]
[95.61913300 725.85235596]
[95.61913300 710.85235596]
[95.61913300 695.85235596]
[95.61913300 680.85235596]
[95.61913300 665.85235596]
[95.61913300 650.85235596]
[95.61913300 635.85235596]
[95.61913300 620.85235596]
[95.61913300 605.85235596]
[95.61913300 590.85235596]
[95.61913300 575.85235596]
[95.61913300 560.85235596]
[95.61913300 545.85235596]
[95.61913300 530.85235596]
[95.61913300 515.85235596]
[95.61913300 500.85235596]
[95.61913300 485.85235596]
[95.61913300 470.85235596]
[95.61913300 455.85235596]
[95.61913300 440.85235596]
[92.47199249 434.15637207]
[95.74002075 425.61483765]
[95.97801208 410.61672974]
[96.21600342 395.61862183]
[88.68160248 382.77017212]
[96.63688660 369.09451294]
[96.87487030 354.09640503]
[97.11286163 339.09826660]
[97.35085297 324.10015869]
[97.58884430 309.10205078]
[97.82682800 294.10394287]
[98.06481934 279.10583496]
[98.30281067 264.10772705]
[98.06481934 249.10960388]
[97.35108948 234.12660217]
[96.63735962 219.14358521]
[95.92363739 204.16058350]
[92.46144867 197.62191772]
[95.31935120 188.93457031]
[94.84343719 173.94212341]
[82.43856812 165.74105835]
[77.17925262 151.64129639]
[81.27879333 136.97680664]
[93.36688995 127.42776489]
[92.89096832 112.43531799]
[85.68326569 100.45446777]
[92.11658478 88.04060364]
[91.64066315 73.04815674]
[83.46940613 59.50041962]
[90.79900360 46.53406525]
[90.32308197 31.54161835]
[89.84716797 16.54917145]
[78.60486603 5.76731300]
[78.33579254 -9.44394112]
[88.68392944 -20.09531021]
[88.20800781 -35.08775711]
[87.73208618 -50.08020782]
[87.25617218 -65.07265472]
[86.78025055 -80.06510162]
[78.60899353 -93.61283875]
[85.93859100 -106.57919312]
[77.76733398 -120.12693024]
[85.09693146 -133.09327698]
[84.62100983 -148.08572388]
[84.14508820 -163.07817078]
[83.66917419 -178.07061768]
[75.49791718 -191.61836243]
[82.82751465 -204.58471680]
[82.35159302 -219.57716370]
[81.75675201 -234.56536865]
[81.04302216 -249.54837036]
[80.32929230 -264.53137207]
[79.61556244 -279.51440430]
[78.90183258 -294.49740601]
[78.18810272 -309.48040771]
[77.47438049 -324.46340942]
[73.93698883 -332.89697266]
[76.87009430 -339.68942261]
[76.39418030 -354.68188477]
[75.91825867 -369.67431641]
[65.84820557 -385.08517456]
[74.72049713 -400.22088623]
[74.00676727 -415.20388794]
[73.29303741 -430.18692017]
[63.97662735 -443.68270874]
[71.24962616 -458.38085938]
[87.63020325 -459.16116333]
[96.26741791 -445.22091675]
[88.27604675 -430.90063477]
[88.98977661 -415.91763306]
[89.70350647 -400.93460083]
[98.44397736 -392.56246948]
[99.15523529 -380.07852173]
[90.91070557 -370.15023804]
[91.38662720 -355.15780640]
[91.86254120 -340.16534424]
[92.45738983 -325.17715454]
[93.17111206 -310.19415283]
[93.88484192 -295.21112061]
[94.59857178 -280.22811890]
[95.31230164 -265.24511719]
[96.02603149 -250.26210022]
[96.73976135 -235.27909851]
[100.20194244 -228.74043274]
[97.34403992 -220.05308533]
[97.81996155 -205.06063843]
[105.95717621 -192.58525085]
[98.66162109 -178.54653931]
[99.13754272 -163.55409241]
[99.61345673 -148.56164551]
[100.08937836 -133.56919861]
[108.22659302 -121.09382629]
[100.93103790 -107.05510712]
[109.06825256 -94.57973480]
[101.77269745 -80.54102325]
[102.24861908 -65.54857635]
[102.72454071 -50.55612564]
[103.20045471 -35.56367874]
[103.67637634 -20.57122993]
[114.67922974 -10.59762383]
[115.37545013 4.60007048]
[104.83961487 16.07325172]
[105.31553650 31.06570053]
[105.79145050 46.05814743]
[113.92866516 58.53352356]
[106.63311005 72.57223511]
[107.10903168 87.56468201]
[114.31673431 99.54553223]
[107.88341522 111.95939636]
[108.35933685 126.95184326]
[121.02872467 135.71498108]
[126.05009460 150.08993530]
[121.69563293 164.49488831]
[109.83588409 173.46620178]
[110.31179810 188.45864868]
[110.90664673 203.44685364]
[111.62037659 218.42985535]
[112.33409882 233.41287231]
[113.04782867 248.39587402]
[115.53931427 251.98158264]
[116.64247894 255.79078674]
[116.45834351 259.35760498]
[115.22946167 262.29736328]
[113.30091858 264.34570312]
[113.06293488 279.34381104]
[112.82494354 294.34194946]
[112.58695221 309.34005737]
[112.34896088 324.33816528]
[112.11097717 339.33627319]
[111.87298584 354.33438110]
[111.63499451 369.33248901]
[119.15236664 383.25369263]
[111.21411133 395.85659790]
[110.97612000 410.85470581]
[110.73813629 425.85281372]
[110.61913300 440.85235596]
[110.61913300 455.85235596]
[110.61913300 470.85235596]
[110.61913300 485.85235596]
[110.61913300 500.85235596]
[110.61913300 515.85235596]
[110.61913300 530.85235596]
[110.61913300 545.85235596]
[110.61913300 560.85235596]
[110.61913300 575.85235596]
[110.61913300 590.85235596]
[110.61913300 605.85235596]
[110.61913300 620.85235596]
[110.61913300 635.85235596]
[110.61913300 650.85235596]
[110.61913300 665.85235596]
[110.61913300 680.85235596]
[110.61913300 695.85235596]
[110.61913300 710.85235596]
[110.61913300 725.85235596]
[118.35643768 739.65252686]
[110.61913300 752.37982178]
[118.35643768 766.17999268]
[110.61913300 778.90722656]
[110.61913300 793.90722656]
[113.75123596 802.49951172]
[110.49824524 809.14477539]
[110.26026154 824.14288330]
[110.02227020 839.14099121]
[109.78427887 854.13909912]
[118.22597504 868.19860840]
] def
/pairs [
[3 196]
[4 195]
[5 194]
[6 193]
[7 191]
[8 190]
[10 188]
[12 186]
[13 185]
[14 184]
[15 183]
[16 182]
[17 181]
[18 180]
[19 179]
[20 178]
[21 177]
[22 176]
[23 175]
[24 174]
[25 173]
[26 172]
[27 171]
[28 170]
[29 169]
[30 168]
[31 167]
[33 166]
[34 165]
[35 164]
[37 162]
[38 161]
[39 160]
[40 159]
[41 158]
[42 157]
[43 156]
[44 155]
[45 150]
[46 149]
[47 148]
[48 147]
[50 146]
[51 145]
[55 141]
[56 140]
[58 138]
[59 137]
[61 135]
[62 134]
[63 133]
[66 130]
[67 129]
[68 128]
[69 127]
[70 126]
[72 124]
[74 122]
[75 121]
[76 120]
[77 119]
[79 117]
[80 116]
[81 114]
[82 113]
[83 112]
[84 111]
[85 110]
[86 109]
[87 108]
[89 107]
[90 106]
[91 105]
[93 102]
[94 101]
[95 100]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
